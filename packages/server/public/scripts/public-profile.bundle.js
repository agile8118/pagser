"use strict";(self.webpackChunk_pagser_web=self.webpackChunk_pagser_web||[]).push([[318],{1143:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(2322),r=n(2784),s=n(2833),i=function(){return i=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},i.apply(this,arguments)};const c=function(e){var t=e.pageNum&&e.pageNum>1?"".concat(e.pageNum," pages"):"".concat(e.pageNum||0," page"),n=(0,a.jsxs)(r.Fragment,{children:[(0,a.jsxs)("div",i({className:"collection-thumbnail__photo"},{children:[(0,a.jsx)("img",{src:e.img,onError:function(e){e.target.src="/images/collection-placeholder.svg"}}),(0,a.jsxs)("div",i({className:"collection-thumbnail__num-label"},{children:[t," ",e.pageNum>0&&(0,a.jsx)("i",{className:"fa fa-newspaper-o","aria-hidden":"true"})]})),(0,a.jsxs)("div",i({className:"collection-thumbnail__view-label"},{children:[(0,a.jsx)("i",{className:"fa fa-eye","aria-hidden":"true"}),"View"]}))]})),(0,a.jsxs)("div",i({className:"collection-thumbnail__details"},{children:[(0,a.jsx)("div",i({className:"collection-thumbnail__name"},{children:e.name})),(0,a.jsx)("div",i({className:"collection-thumbnail__desc"},{children:e.desc})),(0,a.jsx)("div",i({className:"collection-thumbnail__author"},{children:e.author}))]}))]});return(0,a.jsx)("div",i({className:"collection-thumbnail",onClick:e.onClick},{children:e.refresh?(0,a.jsx)("a",i({href:"/collection/".concat(e.id),target:e.target},{children:n})):(0,a.jsx)(s.rU,i({to:"/collection/".concat(e.id)},{children:n}))}))}},2563:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(2322),r=function(){return r=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},r.apply(this,arguments)};const s=function(e){if(e.noPhoto){var t=e.briefDes,n=e.title,s="",i="",c=e.target;return e.title.length>25&&(n=e.title.substring(0,25)+"..."),e.briefDes.length>35&&(t=e.briefDes.substring(0,35)+"..."),0===e.briefDes.length&&(t=(0,a.jsx)("em",{children:"No brief description provided."})),"draft"===e.type&&(s="/new-page/page-contents?id=".concat(e.id)),"normal"!==e.status&&e.status?"editing"===e.status&&(i="page-thumbnail page-thumbnail-no-photo page-thumbnail--shaking",s="javascript:void(0)",c="_self"):i="page-thumbnail page-thumbnail-no-photo","editing"===e.status&&e.selected&&(i+=" page-thumbnail--selected"),(0,a.jsx)("div",r({className:i,onClick:e.onClick},{children:(0,a.jsxs)("a",r({href:s,target:c},{children:[(0,a.jsxs)("div",r({className:"page-thumbnail__details"},{children:[(0,a.jsx)("h4",{children:n}),(0,a.jsx)("p",{children:t})]})),e.label&&(0,a.jsx)("span",r({className:"page-thumbnail__type"},{children:e.label}))]}))}))}var l=e.briefDes,o=e.title,u="",d="",p=e.target;return"private"===e.type?u="/".concat(e.authorUsername,"/").concat(e.url):"public"===e.type&&(u="/public-pages/".concat(e.url)),e.title.length>25&&(o=e.title.substring(0,25)+"..."),e.briefDes.length>35&&(l=e.briefDes.substring(0,35)+"..."),0===e.briefDes.length&&(l=(0,a.jsx)("em",{children:"No brief description provided."})),"normal"!==e.status&&e.status?"editing"===e.status&&(d="page-thumbnail page-thumbnail--shaking",u="javascript:void(0)",p="_self"):d="page-thumbnail","editing"===e.status&&e.selected&&(d+=" page-thumbnail--selected"),(0,a.jsx)("div",r({className:d,onClick:e.onClick},{children:(0,a.jsxs)("a",r({href:u,target:p},{children:[(0,a.jsx)("div",r({className:"page-thumbnail__photo"},{children:(0,a.jsx)("img",{src:e.image,onError:function(e){e.target.src="/images/pages/placeholder.svg"}})})),(0,a.jsxs)("div",r({className:"page-thumbnail__details"},{children:[(0,a.jsx)("h4",{children:o}),(0,a.jsx)("p",{children:l})]})),(0,a.jsx)("span",r({className:"page-thumbnail__type"},{children:e.label?e.label:e.type}))]}))}))}},2617:(e,t,n)=>{n.d(t,{C9:()=>y,NH:()=>b,PS:()=>j,RW:()=>o,SG:()=>u,Tf:()=>p,Tz:()=>x,ZP:()=>N,Zp:()=>g,mW:()=>v,xN:()=>w});var a,r=n(8229),s=n(4819),i=function(e,t,n,a){return new(n||(n=Promise))((function(r,s){function i(e){try{l(a.next(e))}catch(e){s(e)}}function c(e){try{l(a.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,c)}l((a=a.apply(e,t||[])).next())}))},c=function(e,t){var n,a,r,s,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function c(s){return function(c){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,a&&(r=2&s[0]?a.return:s[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,s[1])).done)return r;switch(a=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,a=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){i.label=s[1];break}if(6===s[0]&&i.label<r[1]){i.label=r[1],r=s;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(s);break}r[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],a=0}finally{n=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,c])}}},l=(0,s.oM)({name:"Pages",initialState:{loading:!0,list:[],selected:[],status:"normal",sortBy:"date-added-asc",filterBy:"all"},reducers:{setLoading:function(e,t){e.loading=t.payload},setStatus:function(e,t){e.status=t.payload,e.selected=[]},setSortBy:function(e,t){e.sortBy=t.payload},setFilterBy:function(e,t){e.filterBy=t.payload},setList:function(e,t){e.list=t.payload},selectPage:function(e,t){var n=e.selected.indexOf(t.payload);-1===n?e.selected.push(t.payload):e.selected.splice(n,1)}}}),o=function(e,t,n){return function(a,s){return i(void 0,void 0,void 0,(function(){var s,i;return c(this,(function(c){switch(c.label){case 0:return a(d(!0)),s="PB-pages"===e?"/users/".concat(window.location.pathname.split("/")[2],"/pages"):"/".concat(e,"?sortBy=").concat(n,"&filterBy=").concat(t),[4,r.request.get(s,{auth:!0})];case 1:return i=c.sent(),a(m(i.results||i.pages)),t&&a(f(i.filterBy)),n&&a(h(i.sortBy)),a(d(!1)),[2]}}))}))}},u=function(e){return function(t,n){return i(void 0,void 0,void 0,(function(){var a;return c(this,(function(s){switch(s.label){case 0:return(0,r.loadingModal)("Loading..."),[4,r.request.delete("/".concat(e),{data:{ids:n().pages.selected},auth:!0})];case 1:return s.sent(),a=n().pages.list.filter((function(e){return-1===n().pages.selected.indexOf(e.id)})),t(m(a)),t(p("normal")),(0,r.loadingModal)(),"pages/draft"===n().sideNav.section?(0,r.alert)("Draft Page(s) successfully deleted.","success"):(0,r.alert)("Page(s) successfully removed from your list.","success"),[2]}}))}))}},d=(a=l.actions).setLoading,p=a.setStatus,h=a.setSortBy,f=a.setFilterBy,g=a.selectPage,m=a.setList,b=function(e){return e.pages.loading},v=function(e){return e.pages.status},y=function(e){return e.pages.sortBy},x=function(e){return e.pages.filterBy},j=function(e){return e.pages.selected},w=function(e){return e.pages.list};const N=l.reducer},8905:(e,t,n)=>{n.d(t,{Il:()=>s,ZP:()=>i,zc:()=>r});var a=(0,n(4819).oM)({name:"sideNav",initialState:{section:""},reducers:{setSection:function(e,t){e.section=t.payload}}}),r=a.actions.setSection,s=function(e){return e.sideNav.section};const i=a.reducer},481:(e,t,n)=>{n.d(t,{h:()=>i});var a=n(4819),r=n(8905),s=n(2617),i=(0,a.xC)({reducer:{sideNav:r.ZP,pages:s.ZP}})},3501:(e,t,n)=>{n.r(t),n.d(t,{default:()=>N});var a=n(2322),r=n(2833),s=n(289),i=n(5185),c=n(481),l=n(2784),o=function(){return o=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},o.apply(this,arguments)};const u=function(){var e=window.location.pathname.split("/")[2],t=(0,l.useState)(""),n=t[0],s=t[1];(0,l.useEffect)((function(){s(i())}),[]);var i=function(){if("users"===window.location.pathname.split("/")[1]){if(!window.location.pathname.split("/")[3])return"home";if("collections"===window.location.pathname.split("/")[3])return"collections";if("pages"===window.location.pathname.split("/")[3])return"pages"}};return(0,a.jsxs)("div",o({className:"lined-btns-2"},{children:[(0,a.jsx)(r.rU,o({to:"/users/".concat(e,"/"),className:"btn-lined ".concat("home"===n?"btn-lined--active":""),onClick:function(){return s("home")}},{children:"Home"})),(0,a.jsx)(r.rU,o({to:"/users/".concat(e,"/pages"),className:"btn-lined ".concat("pages"===n?"btn-lined--active":""),onClick:function(){return s("pages")}},{children:"Pages"})),(0,a.jsx)(r.rU,o({to:"/users/".concat(e,"/collections"),className:"btn-lined ".concat("collections"===n?"btn-lined--active":""),onClick:function(){return s("collections")}},{children:"Collections"}))]}))};var d=function(){return d=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},d.apply(this,arguments)};const p=function(){return(0,a.jsx)("div",d({className:"pb-main"},{children:(0,a.jsx)("h3",d({className:"heading-tertiary center-content italic"},{children:"This part will be completed shortly!"}))}))};var h=n(2563),f=n(7289),g=n(2617),m=function(){return m=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},m.apply(this,arguments)};const b=function(){var e=(0,i.v9)(g.NH),t=(0,i.v9)(g.xN),n=(0,i.I0)();return(0,l.useEffect)((function(){n((0,g.RW)("PB-pages"))}),[]),(0,a.jsx)("div",m({className:"pb-main"},{children:(0,a.jsx)("div",m({className:"row"},{children:e?(0,a.jsx)("div",m({className:"center-content"},{children:(0,a.jsx)(f.Loading,{})})):null===t?(0,a.jsx)("div",m({className:"center-content"},{children:(0,a.jsx)("div",m({className:"a-14"},{children:"User doesn't have any public page."}))})):t.map((function(e){return(0,a.jsx)("div",m({className:"col-lg-1-of-5 col-md-1-of-5 col-sm-1-of-3 col-xs-1-of-2 col-xxs-1-of-1"},{children:(0,a.jsx)(h.Z,{status:"normal",id:e.id,briefDes:e.briefDes,title:e.title,image:e.photo,target:"_blank",url:e.url,type:"public",label:e.date})}),e.id)}))}))}))};var v=n(8229),y=n(1143),x=function(){return x=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},x.apply(this,arguments)};const j=function(){var e=(0,l.useState)([]),t=e[0],n=e[1];(0,l.useEffect)((function(){r()}),[]);var r=function(){return e=void 0,t=void 0,r=function(){var e;return function(e,t){var n,a,r,s,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function c(s){return function(c){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,a&&(r=2&s[0]?a.return:s[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,s[1])).done)return r;switch(a=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,a=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){i.label=s[1];break}if(6===s[0]&&i.label<r[1]){i.label=r[1],r=s;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(s);break}r[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],a=0}finally{n=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,c])}}}(this,(function(t){switch(t.label){case 0:return[4,v.request.get("/collections/shared/".concat(window.location.pathname.split("/")[2]),{auth:!0})];case 1:return e=t.sent(),n(e.collections),[2]}}))},new((a=void 0)||(a=Promise))((function(n,s){function i(e){try{l(r.next(e))}catch(e){s(e)}}function c(e){try{l(r.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,c)}l((r=r.apply(e,t||[])).next())}));var e,t,a,r};return(0,a.jsx)("div",x({className:"pb-main"},{children:(0,a.jsx)("div",x({className:"row"},{children:null===t?(0,a.jsx)("div",x({className:"center-content"},{children:(0,a.jsx)("div",x({className:"a-14"},{children:"User hasn't shared any collection."}))})):0===t.length?(0,a.jsx)("div",x({className:"center-content"},{children:(0,a.jsx)(f.Loading,{})})):t.map((function(e){return(0,a.jsx)("div",x({className:"col-lg-1-of-5 col-md-1-of-5 col-sm-1-of-3 col-xs-1-of-2 col-xxs-1-of-1"},{children:(0,a.jsx)(y.Z,{id:e._id,name:e.name,img:e.photo.secure_url,desc:e.description,pageNum:e.pages.length,author:e.user.name,refresh:!0,target:"_blank"})}),e._id)}))}))}))};var w=function(){return w=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},w.apply(this,arguments)};const N=function(){return(0,a.jsx)(i.zt,w({store:c.h},{children:(0,a.jsxs)(r.VK,{children:[(0,a.jsx)(u,{}),(0,a.jsxs)(s.Z5,{children:[(0,a.jsx)(s.AW,{path:"/users/:username/pages",element:(0,a.jsx)(b,{})}),(0,a.jsx)(s.AW,{path:"/users/:username/collections",element:(0,a.jsx)(j,{})}),(0,a.jsx)(s.AW,{path:"/users/:username",element:(0,a.jsx)(p,{})})]})]})}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,