"use strict";(self.webpackChunk_pagser_web=self.webpackChunk_pagser_web||[]).push([[297],{1143:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(2322),s=t(2784),r=t(2833),i=function(){return i=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},i.apply(this,arguments)};const o=function(e){var n=e.pageNum&&e.pageNum>1?"".concat(e.pageNum," pages"):"".concat(e.pageNum||0," page"),t=(0,a.jsxs)(s.Fragment,{children:[(0,a.jsxs)("div",i({className:"collection-thumbnail__photo"},{children:[(0,a.jsx)("img",{src:e.img,onError:function(e){e.target.src="/images/collection-placeholder.svg"}}),(0,a.jsxs)("div",i({className:"collection-thumbnail__num-label"},{children:[n," ",e.pageNum>0&&(0,a.jsx)("i",{className:"fa fa-newspaper-o","aria-hidden":"true"})]})),(0,a.jsxs)("div",i({className:"collection-thumbnail__view-label"},{children:[(0,a.jsx)("i",{className:"fa fa-eye","aria-hidden":"true"}),"View"]}))]})),(0,a.jsxs)("div",i({className:"collection-thumbnail__details"},{children:[(0,a.jsx)("div",i({className:"collection-thumbnail__name"},{children:e.name})),(0,a.jsx)("div",i({className:"collection-thumbnail__desc"},{children:e.desc})),(0,a.jsx)("div",i({className:"collection-thumbnail__author"},{children:e.author}))]}))]});return(0,a.jsx)("div",i({className:"collection-thumbnail",onClick:e.onClick},{children:e.refresh?(0,a.jsx)("a",i({href:"/collection/".concat(e.id),target:e.target},{children:t})):(0,a.jsx)(r.rU,i({to:"/collection/".concat(e.id)},{children:t}))}))}},2563:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(2322),s=function(){return s=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},s.apply(this,arguments)};const r=function(e){if(e.noPhoto){var n=e.briefDes,t=e.title,r="",i="",o=e.target;return e.title.length>25&&(t=e.title.substring(0,25)+"..."),e.briefDes.length>35&&(n=e.briefDes.substring(0,35)+"..."),0===e.briefDes.length&&(n=(0,a.jsx)("em",{children:"No brief description provided."})),"draft"===e.type&&(r="/new-page/page-contents?id=".concat(e.id)),"normal"!==e.status&&e.status?"editing"===e.status&&(i="page-thumbnail page-thumbnail-no-photo page-thumbnail--shaking",r="javascript:void(0)",o="_self"):i="page-thumbnail page-thumbnail-no-photo","editing"===e.status&&e.selected&&(i+=" page-thumbnail--selected"),(0,a.jsx)("div",s({className:i,onClick:e.onClick},{children:(0,a.jsxs)("a",s({href:r,target:o},{children:[(0,a.jsxs)("div",s({className:"page-thumbnail__details"},{children:[(0,a.jsx)("h4",{children:t}),(0,a.jsx)("p",{children:n})]})),e.label&&(0,a.jsx)("span",s({className:"page-thumbnail__type"},{children:e.label}))]}))}))}var l=e.briefDes,c=e.title,d="",u="",h=e.target;return"private"===e.type?d="/".concat(e.authorUsername,"/").concat(e.url):"public"===e.type&&(d="/public-pages/".concat(e.url)),e.title.length>25&&(c=e.title.substring(0,25)+"..."),e.briefDes.length>35&&(l=e.briefDes.substring(0,35)+"..."),0===e.briefDes.length&&(l=(0,a.jsx)("em",{children:"No brief description provided."})),"normal"!==e.status&&e.status?"editing"===e.status&&(u="page-thumbnail page-thumbnail--shaking",d="javascript:void(0)",h="_self"):u="page-thumbnail","editing"===e.status&&e.selected&&(u+=" page-thumbnail--selected"),(0,a.jsx)("div",s({className:u,onClick:e.onClick},{children:(0,a.jsxs)("a",s({href:d,target:h},{children:[(0,a.jsx)("div",s({className:"page-thumbnail__photo"},{children:(0,a.jsx)("img",{src:e.image,onError:function(e){e.target.src="/images/pages/placeholder.svg"}})})),(0,a.jsxs)("div",s({className:"page-thumbnail__details"},{children:[(0,a.jsx)("h4",{children:c}),(0,a.jsx)("p",{children:l})]})),(0,a.jsx)("span",s({className:"page-thumbnail__type"},{children:e.label?e.label:e.type}))]}))}))}},8619:(e,n,t)=>{t.r(n),t.d(n,{default:()=>ne});var a=t(2322),s=t(2833),r=t(289),i=t(5185),o=t(481),l=t(2784),c=t(8905),d=function(){return d=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},d.apply(this,arguments)};const u=function(){document.querySelector("body").style.marginLeft="24rem";var e=(0,i.I0)(),n=(0,i.v9)(c.Il);return(0,l.useEffect)((function(){n||e((0,c.zc)(function(){var e=["home","subscriptions","history/pages","history/comments","read-later","liked-pages","collections","dashboard","analytics","monetization","pages/published","pages/draft","comments"];if("home"===window.location.pathname.split("/")[1])return"home";if("collection"===window.location.pathname.split("/")[1])return null;if("history"===window.location.pathname.split("/")[2]){var n=e.indexOf("".concat(window.location.pathname.split("/")[2],"/").concat(window.location.pathname.split("/")[3]));return e[n]||"history/pages"}if("pages"===window.location.pathname.split("/")[2]){var t=e.indexOf("".concat(window.location.pathname.split("/")[2],"/").concat(window.location.pathname.split("/")[3]));return e[t]||"pages/published"}var a=e.indexOf(window.location.pathname.split("/")[2]);return e[a]||""}()))}),[]),(0,a.jsxs)("div",d({className:"sidenav sidenav--open",id:"js--sidenav"},{children:[(0,a.jsxs)("div",d({className:"sidenav__section"},{children:[(0,a.jsxs)(s.rU,d({to:"/home",className:"home"===n?"sidenav__link sidenav__link--active":"sidenav__link",onClick:function(){return e((0,c.zc)("home"))}},{children:[(0,a.jsx)("i",{className:"fa fa-home"}),"Home"]})),(0,a.jsxs)(s.rU,d({to:"/feed/subscriptions",className:"subscriptions"===n?"sidenav__link sidenav__link--active":"sidenav__link",onClick:function(){return e((0,c.zc)("subscriptions"))}},{children:[(0,a.jsx)("i",{className:"fa fa-file-text"}),"Subscriptions"]})),(0,a.jsxs)(s.rU,d({to:"/feed/history/pages",className:"history/pages"===n||"history/comments"===n?"sidenav__link sidenav__link--active":"sidenav__link",onClick:function(){return e((0,c.zc)("history/pages"))}},{children:[(0,a.jsx)("i",{className:"fa fa-history"}),"History"]})),(0,a.jsxs)(s.rU,d({to:"/feed/read-later",className:"read-later"===n?"sidenav__link sidenav__link--active":"sidenav__link",onClick:function(){return e((0,c.zc)("read-later"))}},{children:[(0,a.jsx)("i",{className:"fa fa-bookmark"}),"Read Later"]})),(0,a.jsxs)(s.rU,d({to:"/feed/liked-pages",className:"liked-pages"===n?"sidenav__link sidenav__link--active":"sidenav__link",onClick:function(){return e((0,c.zc)("liked-pages"))}},{children:[(0,a.jsx)("i",{className:"fa fa-thumbs-up"}),"Liked Pages"]})),(0,a.jsxs)(s.rU,d({to:"/u/collections",className:"collections"===n?"sidenav__link sidenav__link--active":"sidenav__link",onClick:function(){return e((0,c.zc)("collections"))}},{children:[(0,a.jsx)("i",{className:"fa fa-th-large"}),"Collections"]}))]})),(0,a.jsxs)("div",d({className:"sidenav__section"},{children:[(0,a.jsxs)(s.rU,d({to:"/u/dashboard",className:"dashboard"===n?"sidenav__link sidenav__link--active":"sidenav__link",onClick:function(){return e((0,c.zc)("dashboard"))}},{children:[(0,a.jsx)("i",{className:"fa fa-dashboard"}),"Dashboard"]})),(0,a.jsxs)(s.rU,d({to:"/u/analytics",className:"analytics"===n?"sidenav__link sidenav__link--active":"sidenav__link",onClick:function(){return e((0,c.zc)("analytics"))}},{children:[(0,a.jsx)("i",{className:"fa fa-line-chart"}),"Analytics"]})),(0,a.jsxs)(s.rU,d({to:"/u/monetization",className:"monetization"===n?"sidenav__link sidenav__link--active":"sidenav__link",onClick:function(){return e((0,c.zc)("monetization"))}},{children:[(0,a.jsx)("i",{className:"fa fa-dollar"}),"Monetization"]})),(0,a.jsxs)(s.rU,d({to:"/u/pages",className:"pages/published"===n||"pages/draft"===n||"pages/trash"===n?"sidenav__link sidenav__link--active":"sidenav__link",onClick:function(){return e((0,c.zc)("pages/published"))}},{children:[(0,a.jsx)("i",{className:"fa fa-envelope-open"}),"Your Pages"]}))]})),(0,a.jsxs)("div",d({className:"sidenav__footer"},{children:[(0,a.jsxs)("ul",d({className:""},{children:[(0,a.jsx)("li",d({className:""},{children:(0,a.jsx)("a",d({href:"javascript:void(0);"},{children:"Support"}))})),(0,a.jsx)("li",d({className:""},{children:(0,a.jsx)("a",d({href:"javascript:void(0);"},{children:"Contact us"}))})),(0,a.jsx)("li",d({className:""},{children:(0,a.jsx)("a",d({href:"/terms-of-use"},{children:"Terms of Use"}))})),(0,a.jsx)("li",d({className:""},{children:(0,a.jsx)("a",d({href:"/privacy-policy"},{children:"Privacy Policy"}))}))]})),(0,a.jsx)("span",{children:"Â© 2022 Pagser.com"})]}))]}))};var h=function(){return h=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},h.apply(this,arguments)};const f=function(){return(0,a.jsx)("div",h({className:"row"},{children:(0,a.jsx)("div",h({className:"header-nav margin-top-2"},{children:(0,a.jsx)("h3",h({className:"heading-tertiary center-content italic"},{children:"This part is still under development where you can come here and read the pages you love based on your feed. Stay tuned!"}))}))}))};var m=function(){return m=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},m.apply(this,arguments)};const p=function(){return(0,a.jsx)("div",m({className:"row"},{children:(0,a.jsx)("div",m({className:"header-nav margin-top-2"},{children:(0,a.jsx)("h3",m({className:"heading-tertiary center-content italic"},{children:"The dashboard section is still under development! Stay tuned!"}))}))}))};var v=function(){return v=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},v.apply(this,arguments)};const g=function(){return(0,a.jsx)("div",v({className:"row"},{children:(0,a.jsx)("div",v({className:"header-nav margin-top-2"},{children:(0,a.jsx)("h3",v({className:"heading-tertiary center-content italic"},{children:"The analytics section is still under development! Stay tuned!"}))}))}))};var x=function(){return x=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},x.apply(this,arguments)};const b=function(){return(0,a.jsx)("div",x({className:"row"},{children:(0,a.jsx)("div",x({className:"header-nav margin-top-2"},{children:(0,a.jsx)("h3",x({className:"heading-tertiary center-content italic"},{children:"The monetization section is still under development! Stay tuned!"}))}))}))};var j=function(){return j=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},j.apply(this,arguments)};const y=function(e){return(0,a.jsxs)("div",j({className:"sub-thumbnail"},{children:[(0,a.jsxs)("a",j({href:"/users/".concat(e.username),target:"_blank",className:"sub-thumbnail__info"},{children:[(0,a.jsx)("img",{className:"sub-thumbnail__info-image",src:e.image}),(0,a.jsxs)("div",j({className:"sub-thumbnail__info-text"},{children:[(0,a.jsx)("div",j({className:"sub-thumbnail__info-name"},{children:e.name})),(0,a.jsx)("div",j({className:"sub-thumbnail__info-headline"},{children:e.headline}))]}))]})),(0,a.jsx)("a",j({href:"/users/".concat(e.username,"/pages"),className:"btn btn-default btn-round"},{children:"View latest pages"}))]}))};var N=t(8229),w=t(7289),_=function(){return _=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},_.apply(this,arguments)};const k=function(){var e=(0,l.useState)([]),n=e[0],t=e[1],s=(0,l.useState)(!1),r=s[0],i=s[1];return(0,l.useEffect)((function(){var e,n,a,s;e=void 0,n=void 0,s=function(){var e;return function(e,n){var t,a,s,r,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function o(r){return function(o){return function(r){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,a&&(s=2&r[0]?a.return:r[0]?a.throw||((s=a.return)&&s.call(a),0):a.next)&&!(s=s.call(a,r[1])).done)return s;switch(a=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return i.label++,{value:r[1],done:!1};case 5:i.label++,a=r[1],r=[0];continue;case 7:r=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==r[0]&&2!==r[0])){i=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){i.label=r[1];break}if(6===r[0]&&i.label<s[1]){i.label=s[1],s=r;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(r);break}s[2]&&i.ops.pop(),i.trys.pop();continue}r=n.call(e,i)}catch(e){r=[6,e],a=0}finally{t=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,o])}}}(this,(function(n){switch(n.label){case 0:return document.title="Subscriptions | Pagser",i(!0),[4,N.request.get("/subscriptions",{auth:!0})];case 1:return e=n.sent(),t(e.subs),i(!1),[2]}}))},new((a=void 0)||(a=Promise))((function(t,r){function i(e){try{l(s.next(e))}catch(e){r(e)}}function o(e){try{l(s.throw(e))}catch(e){r(e)}}function l(e){var n;e.done?t(e.value):(n=e.value,n instanceof a?n:new a((function(e){e(n)}))).then(i,o)}l((s=s.apply(e,n||[])).next())}))}),[]),(0,a.jsxs)("div",_({className:"row"},{children:[(0,a.jsx)("div",_({className:"header-nav"},{children:(0,a.jsx)("h3",_({className:"heading-tertiary"},{children:"Your Subscriptions:"}))})),r&&(0,a.jsx)("div",_({className:"center-content margin-top-1"},{children:(0,a.jsx)(w.Loading,{})})),!r&&(0,a.jsx)("div",_({className:"row"},{children:0===n.length?(0,a.jsx)("p",_({className:"a-13"},{children:"You haven't subscribed to any author yet."})):n.map((function(e){return(0,a.jsx)(y,{name:e.author.name,username:e.author.username,headline:e.author.headline,image:e.author.photo.secure_url},e._id)}))}))]}))};var C=t(2563),P=function(){return P=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},P.apply(this,arguments)};const S=function(){var e=(0,i.I0)(),n=(0,i.v9)(c.Il);return(0,a.jsxs)("div",P({className:"lined-btns margin-bottom-2 margin-top-1"},{children:[(0,a.jsxs)(s.rU,P({to:"/feed/history/pages",className:"history/pages"===n?"btn-lined btn-lined--active":"btn-lined",onClick:function(){return e((0,c.zc)("history/pages"))}},{children:[(0,a.jsx)("i",{className:"fa fa-file margin-right-3px"})," Reads"]})),(0,a.jsxs)(s.rU,P({to:"/feed/history/comments",className:"history/comments"===n?"btn-lined btn-lined--active":"btn-lined",onClick:function(){return e((0,c.zc)("history/comments"))}},{children:[(0,a.jsx)("i",{className:"fa fa-commenting margin-right-3px"})," Comments"]}))]}))};var O=t(2617),D=function(){return D=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},D.apply(this,arguments)};const T=function(){var e=(0,l.useState)(!1),n=e[0],t=e[1],s=(0,i.I0)(),r=(0,i.v9)(O.mW),o=(0,i.v9)(O.NH),c=(0,i.v9)(O.Tz),d=(0,i.v9)(O.C9),u=(0,i.v9)(O.PS),h=(0,i.v9)(O.xN);(0,l.useEffect)((function(){return document.title="History | Pagser",s((0,O.RW)("history",c)),function(){s((0,O.Tf)("normal"))}}),[]);var f="editing"===r&&(0,a.jsx)("button",D({className:"btn-text btn-text-red",disabled:!(u.length>0),onClick:function(){t(!0)}},{children:"Remove"})),m="editing"===r&&(0,a.jsx)("button",D({className:"btn-text",onClick:function(){s((0,O.Tf)("normal"))}},{children:"Done"})),p=h.length>0&&"normal"===r&&(0,a.jsxs)("button",D({className:"btn-text",onClick:function(){s((0,O.Tf)("editing"))}},{children:["Edit ",(0,a.jsx)("i",{className:"fa fa-pencil-square","aria-hidden":"true"})]}));return(0,a.jsxs)(l.Fragment,{children:[(0,a.jsx)(w.ConfirmModal,D({header:"Remove From History?",open:n,onConfirm:function(){s((0,O.SG)("history")),t(!1)},onCancel:function(){t(!1)}},{children:(0,a.jsxs)("p",{children:["Are you sure that you want to remove the selected page",u.length>1?"s":""," from your history? ",(0,a.jsx)("br",{})," You have selected ",u.length," page",u.length>1?"s":""," and you cannot undo the action."]})})),(0,a.jsxs)("div",D({className:"row"},{children:[(0,a.jsx)(S,{}),(0,a.jsxs)("div",D({className:"header-nav"},{children:[(0,a.jsx)("h3",D({className:"heading-tertiary"},{children:"Your Reading History:"})),!o&&(0,a.jsxs)("div",D({className:"header-nav__actions"},{children:["all"===c&&0===h.length?"":"normal"===r?(0,a.jsxs)(w.Dropdown,D({num:"1",select:c,onChange:function(e){s((0,O.RW)("history",e,d))}},{children:[(0,a.jsx)("div",D({"data-role-name":"btn-name","data-icon-class":"fa fa-filter"},{children:"Filter By"})),(0,a.jsx)("div",D({"data-role-name":"item","data-name":"all"},{children:"All Pages"})),(0,a.jsx)("div",D({"data-role-name":"item","data-name":"private"},{children:"Private Pages"})),(0,a.jsx)("div",D({"data-role-name":"item","data-name":"public"},{children:"Public Pages"}))]})):void 0,f,m,p]}))]})),o&&(0,a.jsx)("div",D({className:"center-content margin-top-1"},{children:(0,a.jsx)(w.Loading,{})})),!o&&(0,a.jsx)("div",D({className:"row"},{children:h.length>0?h.map((function(e){return(0,a.jsx)("div",D({className:"col-lg-1-of-5 col-md-1-of-5 col-sm-1-of-3 col-xs-1-of-2 col-xxs-1-of-1"},{children:(0,a.jsx)(C.Z,{id:e.id,selected:u.indexOf(e.id)>-1,status:r,briefDes:e.contents.briefDes,title:e.contents.title,image:e.photo.secure_url,target:"_blank",url:e.url,type:e.type,label:e.dateVisited,authorUsername:e.author.username,onClick:function(){"editing"===r&&s((0,O.Zp)(e.id))}})}),e.id)})):"public"===c?(0,a.jsx)("p",D({className:"a-13"},{children:"You don't have any public page on your history."})):"private"===c?(0,a.jsx)("p",D({className:"a-13"},{children:"You don't have any private page on your history."})):(0,a.jsx)("p",D({className:"a-13"},{children:"Your reading history list is empty."}))}))]}))]})};var z=function(){return z=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},z.apply(this,arguments)};const A=function(){var e=(0,l.useState)([]),n=e[0],t=e[1],s=(0,l.useState)(!1),r=s[0],i=s[1];return(0,l.useEffect)((function(){var e,n,a,s;e=void 0,n=void 0,s=function(){var e;return function(e,n){var t,a,s,r,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function o(r){return function(o){return function(r){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,a&&(s=2&r[0]?a.return:r[0]?a.throw||((s=a.return)&&s.call(a),0):a.next)&&!(s=s.call(a,r[1])).done)return s;switch(a=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return i.label++,{value:r[1],done:!1};case 5:i.label++,a=r[1],r=[0];continue;case 7:r=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==r[0]&&2!==r[0])){i=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){i.label=r[1];break}if(6===r[0]&&i.label<s[1]){i.label=s[1],s=r;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(r);break}s[2]&&i.ops.pop(),i.trys.pop();continue}r=n.call(e,i)}catch(e){r=[6,e],a=0}finally{t=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,o])}}}(this,(function(n){switch(n.label){case 0:return i(!0),[4,N.request.get("/comments/history",{auth:!0})];case 1:return e=n.sent(),t(e.comments),i(!1),[2]}}))},new((a=void 0)||(a=Promise))((function(t,r){function i(e){try{l(s.next(e))}catch(e){r(e)}}function o(e){try{l(s.throw(e))}catch(e){r(e)}}function l(e){var n;e.done?t(e.value):(n=e.value,n instanceof a?n:new a((function(e){e(n)}))).then(i,o)}l((s=s.apply(e,n||[])).next())}))}),[]),(0,a.jsxs)("div",z({className:"row"},{children:[(0,a.jsx)(S,{}),r&&(0,a.jsx)("div",z({className:"center-content margin-top-1"},{children:(0,a.jsx)(w.Loading,{})})),!r&&n.map((function(e){var n;if(e.reply.name||(n=(0,a.jsxs)("span",{children:["You commented on page"," ",(0,a.jsx)("strong",{children:(0,a.jsx)("a",z({href:N.util.pageUrl(e.page.url,e.page.author.username,e.page.type),target:"_blank"},{children:e.page.title}))})]})),e.reply.name){var t="yourself"===e.reply.name?(0,a.jsx)("span",{children:"yourself"}):(0,a.jsx)("strong",{children:(0,a.jsx)("a",z({href:"/users/".concat(e.reply.username),target:"_blank"},{children:e.reply.name}))});n=(0,a.jsxs)("span",{children:["You replied to ",t," on page"," ",(0,a.jsx)("strong",{children:(0,a.jsx)("a",z({href:N.util.pageUrl(e.page.url,e.page.author.username,e.page.type),target:"_blank"},{children:e.page.title}))})]})}return(0,a.jsxs)(l.Fragment,{children:[(0,a.jsx)("p",z({className:"comment-brief__label"},{children:n})),(0,a.jsxs)("div",z({className:"comment-brief"},{children:[(0,a.jsxs)("div",{children:[e.text,(0,a.jsx)("div",z({className:"comment-brief__date"},{children:e.date}))]}),(0,a.jsx)("div",{children:(0,a.jsx)("a",z({href:N.util.pageUrl(e.page.url,e.page.author.username,e.page.type),className:"btn-i comment-brief__go"},{children:(0,a.jsx)("i",{className:"fa fa-arrow-circle-right","aria-hidden":"true"})}))})]}))]},e.id)}))]}))};var L=function(){return L=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},L.apply(this,arguments)};const Y=function(){var e=(0,l.useState)(!1),n=e[0],t=e[1],s=(0,i.I0)(),r=(0,i.v9)(O.mW),o=(0,i.v9)(O.NH),c=(0,i.v9)(O.Tz),d=(0,i.v9)(O.C9),u=(0,i.v9)(O.PS),h=(0,i.v9)(O.xN);(0,l.useEffect)((function(){return document.title="Reading List | Pagser",s((0,O.RW)("read-later",c,d)),function(){s((0,O.Tf)("normal"))}}),[]);var f="editing"===r&&(0,a.jsx)("button",L({className:"btn-text btn-text-red",disabled:!(u.length>0),onClick:function(){t(!0)}},{children:"Remove"})),m="editing"===r&&(0,a.jsx)("button",L({className:"btn-text",onClick:function(){s((0,O.Tf)("normal"))}},{children:"Done"})),p=h.length>0&&"normal"===r&&(0,a.jsxs)("button",L({className:"btn-text",onClick:function(){s((0,O.Tf)("editing"))}},{children:["Edit ",(0,a.jsx)("i",{className:"fa fa-pencil-square","aria-hidden":"true"})]}));return(0,a.jsxs)(l.Fragment,{children:[(0,a.jsx)(w.ConfirmModal,L({header:"Remove from the list?",open:n,onConfirm:function(){s((0,O.SG)("read-later")),t(!1)},onCancel:function(){t(!1)}},{children:(0,a.jsxs)("p",{children:["Are you sure that you want to remove the selected page",u.length>1?"s":""," from your read later list?"," ",(0,a.jsx)("br",{})," You have selected ",u.length," page",u.length>1?"s":""," and you cannot undo the action."]})})),(0,a.jsxs)("div",L({className:"row"},{children:[(0,a.jsxs)("div",L({className:"header-nav"},{children:[(0,a.jsx)("h3",L({className:"heading-tertiary"},{children:"Your Read Later List:"})),!o&&(0,a.jsxs)("div",L({className:"header-nav__actions"},{children:["all"===c&&0===h.length?"":"normal"===r?(0,a.jsxs)(l.Fragment,{children:[h.length>1&&(0,a.jsxs)(w.Dropdown,L({num:"1",select:d,onChange:function(e){(0,O.RW)("read-later",c,e)}},{children:[(0,a.jsx)("div",L({"data-role-name":"btn-name","data-icon-class":"fa fa-sort-amount-asc"},{children:"Sort By"})),(0,a.jsx)("div",L({"data-role-name":"item","data-name":"date-added-asc"},{children:"Date Added - Newest first"})),(0,a.jsx)("div",L({"data-role-name":"item","data-name":"date-added-desc"},{children:"Date Added - Oldest first"})),(0,a.jsx)("div",L({"data-role-name":"item","data-name":"date-published-asc"},{children:"Date Published - Newest first"})),(0,a.jsx)("div",L({"data-role-name":"item","data-name":"date-published-desc"},{children:"Date Published - Oldest first"}))]})),(0,a.jsxs)(w.Dropdown,L({num:"2",select:c,onChange:function(e){s((0,O.RW)("read-later",e,d))}},{children:[(0,a.jsx)("div",L({"data-role-name":"btn-name","data-icon-class":"fa fa-filter"},{children:"Filter By"})),(0,a.jsx)("div",L({"data-role-name":"item","data-name":"all"},{children:"All Pages"})),(0,a.jsx)("div",L({"data-role-name":"item","data-name":"private"},{children:"Private Pages"})),(0,a.jsx)("div",L({"data-role-name":"item","data-name":"public"},{children:"Public Pages"}))]}))]}):void 0,f,m,p]}))]})),o&&(0,a.jsx)("div",L({className:"center-content margin-top-1"},{children:(0,a.jsx)(w.Loading,{})})),!o&&(0,a.jsx)("div",L({className:"row"},{children:h.length>0?h.map((function(e){return(0,a.jsx)("div",L({className:"col-lg-1-of-5 col-md-1-of-5 col-sm-1-of-3 col-xs-1-of-2 col-xxs-1-of-1"},{children:(0,a.jsx)(C.Z,{id:e.id,selected:u.indexOf(e.id)>-1,status:r,briefDes:e.contents.briefDes,title:e.contents.title,image:e.photo.secure_url,target:"_blank",url:e.url,type:e.type,authorUsername:e.author.username,onClick:function(){"editing"===r&&(0,O.Zp)(e.id)}})}),e.id)})):"public"===c?(0,a.jsx)("p",L({className:"a-13"},{children:"You don't have any public page on your read later list."})):"private"===c?(0,a.jsx)("p",L({className:"a-13"},{children:"You don't have any private page on your read later list."})):(0,a.jsx)("p",L({className:"a-13"},{children:"Your read later list is empty."}))}))]}))]})};var W=function(){return W=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},W.apply(this,arguments)};const U=function(){var e=(0,i.I0)(),n=((0,i.v9)(O.mW),(0,i.v9)(O.NH)),t=(0,i.v9)(O.Tz),s=(0,i.v9)(O.C9),r=((0,i.v9)(O.PS),(0,i.v9)(O.xN));return(0,l.useEffect)((function(){document.title="Liked Pages | Pagser",e((0,O.RW)("liked-pages",t))}),[]),(0,a.jsx)(l.Fragment,{children:(0,a.jsxs)("div",W({className:"row"},{children:[(0,a.jsxs)("div",W({className:"header-nav"},{children:[(0,a.jsx)("h3",W({className:"heading-tertiary"},{children:"Pages You Have Liked:"})),!n&&(0,a.jsx)("div",W({className:"header-nav__actions"},{children:"all"===t&&0===r.length?"":(0,a.jsxs)(w.Dropdown,W({num:"1",select:t,onChange:function(n){e((0,O.RW)("liked-pages",n,s))}},{children:[(0,a.jsx)("div",W({"data-role-name":"btn-name","data-icon-class":"fa fa-filter"},{children:"Filter By"})),(0,a.jsx)("div",W({"data-role-name":"item","data-name":"all"},{children:"All Pages"})),(0,a.jsx)("div",W({"data-role-name":"item","data-name":"private"},{children:"Private Pages"})),(0,a.jsx)("div",W({"data-role-name":"item","data-name":"public"},{children:"Public Pages"}))]}))}))]})),n&&(0,a.jsx)("div",W({className:"center-content margin-top-1"},{children:(0,a.jsx)(w.Loading,{})})),!n&&(0,a.jsx)("div",W({className:"row"},{children:r.length>0?r.map((function(e){return(0,a.jsx)("div",W({className:"col-lg-1-of-5 col-md-1-of-5 col-sm-1-of-3 col-xs-1-of-2 col-xxs-1-of-1"},{children:(0,a.jsx)(C.Z,{id:e.id,status:"normal",briefDes:e.contents.briefDes,title:e.contents.title,image:e.photo.secure_url,target:"_blank",url:e.url,type:e.type,authorUsername:e.author.username})}),e.id)})):"public"===t?(0,a.jsx)("p",W({className:"a-13"},{children:"You haven't liked any public page yet."})):"private"===t?(0,a.jsx)("p",W({className:"a-13"},{children:"You haven't liked any private page yet. "})):(0,a.jsx)("p",W({className:"a-13"},{children:"Your haven't liked any page yet."}))}))]}))})};var M=function(){return M=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},M.apply(this,arguments)};const R=function(){var e=(0,i.I0)(),n=(0,i.v9)(c.Il);return(0,a.jsxs)("div",M({className:"lined-btns margin-bottom-2 margin-top-1"},{children:[(0,a.jsxs)(s.rU,M({to:"/u/pages/published",className:"pages/published"===n?"btn-lined btn-lined--active":"btn-lined",onClick:function(){return e((0,c.zc)("pages/published"))}},{children:[(0,a.jsx)("i",{className:"fa fa-check-square margin-right-3px"})," Published Pages"]})),(0,a.jsxs)(s.rU,M({to:"/u/pages/draft",className:"pages/draft"===n?"btn-lined btn-lined--active":"btn-lined",onClick:function(){return e((0,c.zc)("pages/draft"))}},{children:[(0,a.jsx)("i",{className:"fa fa-file margin-right-3px"})," Draft Pages"]}))]}))};var B=function(){return B=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},B.apply(this,arguments)};const E=function(){var e=(0,i.I0)(),n=(0,i.v9)(O.NH),t=(0,i.v9)(O.Tz),s=(0,i.v9)(O.xN);return(0,l.useEffect)((function(){document.title="Published Pages | Pagser",e((0,O.RW)("user-pages/published",t))}),[]),(0,a.jsxs)("div",B({className:"row"},{children:[(0,a.jsx)(R,{}),(0,a.jsxs)("div",B({className:"header-nav"},{children:[(0,a.jsx)("h3",B({className:"heading-tertiary"},{children:"Your Published Pages:"})),!n&&(0,a.jsx)("div",B({className:"header-nav__actions"},{children:"all"===t&&0===s.length?"":(0,a.jsxs)(w.Dropdown,B({num:"1",select:t,onChange:function(n){e((0,O.RW)("user-pages/published",n))}},{children:[(0,a.jsx)("div",B({"data-role-name":"btn-name","data-icon-class":"fa fa-filter"},{children:"Filter By"})),(0,a.jsx)("div",B({"data-role-name":"item","data-name":"all"},{children:"All Pages"})),(0,a.jsx)("div",B({"data-role-name":"item","data-name":"private"},{children:"Private Pages"})),(0,a.jsx)("div",B({"data-role-name":"item","data-name":"public"},{children:"Public Pages"}))]}))}))]})),n&&(0,a.jsx)("div",B({className:"center-content margin-top-1"},{children:(0,a.jsx)(w.Loading,{})})),!n&&(0,a.jsx)("div",B({className:"row"},{children:s.length>0?s.map((function(e){var n,t;return(0,a.jsx)("div",B({className:"col-lg-1-of-5 col-md-1-of-5 col-sm-1-of-3 col-xs-1-of-2 col-xxs-1-of-1"},{children:(0,a.jsx)(C.Z,{id:e.id,status:"normal",briefDes:e.contents.briefDes,title:e.contents.title,image:null===(n=e.photo)||void 0===n?void 0:n.secure_url,target:"_blank",url:e.url,type:e.type,authorUsername:null===(t=e.author)||void 0===t?void 0:t.username})}),e.id)})):"public"===t?(0,a.jsx)("p",B({className:"a-13"},{children:"You haven't published any public page yet."})):"private"===t?(0,a.jsx)("p",B({className:"a-13"},{children:"You haven't published any private page yet. "})):(0,a.jsx)("p",B({className:"a-13"},{children:"You haven't published any page yet."}))}))]}))};var q=function(){return q=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},q.apply(this,arguments)};const F=function(){var e=(0,l.useState)(!1),n=e[0],t=e[1],s=(0,i.I0)(),r=(0,i.v9)(O.mW),o=(0,i.v9)(O.NH),c=(0,i.v9)(O.PS),d=(0,i.v9)(O.xN);(0,l.useEffect)((function(){return document.title="Draft Pages | Pagser",s((0,O.RW)("user-pages/draft")),function(){s((0,O.Tf)("normal"))}}),[]);var u="editing"===r&&(0,a.jsx)("button",q({className:"btn-text btn-text-red",disabled:!(c.length>0),onClick:function(){t(!0)}},{children:"Delete"})),h="editing"===r&&(0,a.jsx)("button",q({className:"btn-text",onClick:function(){s((0,O.Tf)("normal"))}},{children:"Done"})),f=d.length>0&&"normal"===r&&(0,a.jsxs)("button",q({className:"btn-text",onClick:function(){s((0,O.Tf)("editing"))}},{children:["Edit ",(0,a.jsx)("i",{className:"fa fa-pencil-square","aria-hidden":"true"})]}));return(0,a.jsxs)(l.Fragment,{children:[(0,a.jsx)(w.ConfirmModal,q({header:"Delete Draft Pages?",open:n,btnName:"Delete",onConfirm:function(){s((0,O.SG)("user-pages/draft")),t(!1)},onCancel:function(){t(!1)}},{children:(0,a.jsxs)("p",{children:["Are you sure that you want to delete the selected draft page",c.length>1?"s ":"","? ",(0,a.jsx)("br",{})," You have selected ",c.length," draft page",c.length>1?"s ":""," and you cannot undo the action."]})})),(0,a.jsxs)("div",q({className:"row"},{children:[(0,a.jsx)(R,{}),(0,a.jsxs)("div",q({className:"header-nav"},{children:[(0,a.jsx)("h3",q({className:"heading-tertiary"},{children:"Your Draft Pages:"})),!o&&(0,a.jsxs)("div",q({className:"header-nav__actions"},{children:[u,h,f]}))]})),o&&(0,a.jsx)("div",q({className:"center-content margin-top-1"},{children:(0,a.jsx)(w.Loading,{})})),!o&&(0,a.jsx)("div",q({className:"row"},{children:d.length>0?d.map((function(e){return(0,a.jsx)("div",q({className:"col-lg-1-of-5 col-md-1-of-5 col-sm-1-of-3 col-xs-1-of-2 col-xxs-1-of-1"},{children:(0,a.jsx)(C.Z,{id:e.id,target:"_blank",noPhoto:!0,label:"Last updated: ".concat(e.updatedAt),type:"draft",status:r,selected:c.indexOf(e.id)>-1,title:e.contents.title,briefDes:e.contents.briefDes,onClick:function(){"editing"===r&&s((0,O.Zp)(e.id))}})}),e.id)})):(0,a.jsx)("p",q({className:"a-13"},{children:"You don't have any draft page."}))}))]}))]})};var I=t(1143),Z=function(){return Z=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},Z.apply(this,arguments)},H=function(e,n,t,a){return new(t||(t=Promise))((function(s,r){function i(e){try{l(a.next(e))}catch(e){r(e)}}function o(e){try{l(a.throw(e))}catch(e){r(e)}}function l(e){var n;e.done?s(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,o)}l((a=a.apply(e,n||[])).next())}))},G=function(e,n){var t,a,s,r,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function o(r){return function(o){return function(r){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,a&&(s=2&r[0]?a.return:r[0]?a.throw||((s=a.return)&&s.call(a),0):a.next)&&!(s=s.call(a,r[1])).done)return s;switch(a=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return i.label++,{value:r[1],done:!1};case 5:i.label++,a=r[1],r=[0];continue;case 7:r=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==r[0]&&2!==r[0])){i=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){i.label=r[1];break}if(6===r[0]&&i.label<s[1]){i.label=s[1],s=r;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(r);break}s[2]&&i.ops.pop(),i.trys.pop();continue}r=n.call(e,i)}catch(e){r=[6,e],a=0}finally{t=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,o])}}};const V=function(){var e=(0,l.useState)(!1),n=e[0],t=e[1],s=(0,l.useState)(!1),r=s[0],o=s[1],d=(0,l.useState)(!1),u=d[0],h=d[1],f=(0,l.useState)(""),m=f[0],p=f[1],v=(0,l.useState)(""),g=v[0],x=v[1],b=(0,l.useState)([]),j=b[0],y=b[1],_=(0,l.useState)([]),k=_[0],C=_[1],P=(0,l.useState)("date-created"),S=P[0],O=(P[1],(0,l.useState)("date-added")),D=(O[0],O[1],(0,i.I0)());(0,l.useEffect)((function(){document.title="Collections | Pagser",T("created-saved")}),[]);var T=function(e,n){return H(void 0,void 0,void 0,(function(){var a;return G(this,(function(s){switch(s.label){case 0:switch(e){case"created-saved":t(!0),o(!0);break;case"saved":o(!0);break;case"created":t(!0)}s.label=1;case 1:return s.trys.push([1,3,,4]),[4,N.request.get("/collections/".concat(e,"?sortBy=").concat(n),{auth:!0})];case 2:switch(a=s.sent(),e){case"created-saved":y(a.savedCollections),C(a.createdCollections);break;case"saved":y(a.savedCollections);break;case"created":C(a.createdCollections)}return[3,4];case 3:return s.sent(),[3,4];case 4:return t(!1),o(!1),[2]}}))}))},z=function(e){var n=[];return 0===(n="savedCollections"===e?j:k).length?(0,a.jsx)("div",Z({className:"a-14"},{children:"Collection list is empty."})):n.map((function(e){return(0,a.jsx)("div",Z({className:"col-lg-1-of-5 col-md-1-of-5 col-sm-1-of-3 col-xs-1-of-2 col-xxs-1-of-1"},{children:(0,a.jsx)(I.Z,{id:e._id,name:e.name,img:e.photo.secure_url,desc:e.description,pageNum:e.pages.length,author:e.user.name,onClick:function(){D((0,c.zc)(""))}})}),e._id)}))};return(0,a.jsxs)(l.Fragment,{children:[(0,a.jsx)(w.Modal,Z({header:"Create a New Collection",open:u,onClose:function(){h(!1)}},{children:(0,a.jsxs)("form",Z({className:"form",onSubmit:function(e){return H(void 0,void 0,void 0,(function(){return G(this,(function(n){switch(n.label){case 0:e.preventDefault(),(0,N.loadingModal)("Loading..."),n.label=1;case 1:return n.trys.push([1,3,,4]),[4,N.request.post("/collection",{name:m,description:g},{auth:!0})];case 2:return n.sent(),(0,N.loadingModal)(),(0,N.alert)("Your collection created successfully.","success"),T("created","date-created"),[3,4];case 3:return n.sent(),[3,4];case 4:return h(!1),p(""),x(""),[2]}}))}))}},{children:[(0,a.jsx)("div",Z({className:""},{children:(0,a.jsx)(w.Input,{label:"Name",type:"text",placeholder:"The name of your collection.",onChange:function(e){p(e)},value:m,required:!0})})),(0,a.jsx)("div",Z({className:"form-group"},{children:(0,a.jsx)(w.Textarea,{label:"Description (optional)",placeholder:"Describe what this collection is for, contains, or any other information you deem useful.",value:g,rows:4,onChange:function(e){x(e)}})})),(0,a.jsx)("div",Z({className:"u-flex-text-right"},{children:(0,a.jsx)(w.Button,Z({color:"blue",type:"submit"},{children:"Create"}))}))]}))})),(0,a.jsxs)("div",Z({className:"row"},{children:[(0,a.jsxs)("div",Z({className:"header-nav margin-bottom-1"},{children:[(0,a.jsx)("h3",Z({className:"heading-tertiary"},{children:"Collections You've Created:"})),(0,a.jsxs)("div",Z({className:"header-nav__actions"},{children:[k.length>1&&(0,a.jsxs)(w.Dropdown,Z({num:"1",select:S,onChange:function(e){T("created",e)}},{children:[(0,a.jsx)("div",Z({"data-role-name":"btn-name","data-icon-class":"fa fa-sort-amount-asc"},{children:"Sort By"})),(0,a.jsx)("div",Z({"data-role-name":"item","data-name":"date-created"},{children:"Date Created"})),(0,a.jsx)("div",Z({"data-role-name":"item","data-name":"a-z"},{children:"A - Z"}))]})),(0,a.jsxs)("button",Z({className:"btn-text",onClick:function(){h(!0)}},{children:["Create a new collection"," ",(0,a.jsx)("i",{className:"fa fa-plus","aria-hidden":"true"})]}))]}))]})),n&&(0,a.jsx)("div",Z({className:"center-content margin-top-1"},{children:(0,a.jsx)(w.Loading,{})})),!n&&(0,a.jsx)("div",Z({className:"row"},{children:z("createdCollections")}))]})),(0,a.jsxs)("div",Z({className:"row"},{children:[(0,a.jsxs)("div",Z({className:"header-nav margin-bottom-1"},{children:[(0,a.jsx)("h3",Z({className:"heading-tertiary"},{children:"Collections You've Saved:"})),(0,a.jsx)("div",{className:"header-nav__actions"})]})),r&&(0,a.jsx)("div",Z({className:"center-content margin-top-1"},{children:(0,a.jsx)(w.Loading,{})})),!r&&(0,a.jsx)("div",Z({className:"row"},{children:z("savedCollections")}))]}))]})};var K=function(){return K=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},K.apply(this,arguments)},J=function(e,n,t,a){return new(t||(t=Promise))((function(s,r){function i(e){try{l(a.next(e))}catch(e){r(e)}}function o(e){try{l(a.throw(e))}catch(e){r(e)}}function l(e){var n;e.done?s(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,o)}l((a=a.apply(e,n||[])).next())}))},Q=function(e,n){var t,a,s,r,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function o(r){return function(o){return function(r){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,a&&(s=2&r[0]?a.return:r[0]?a.throw||((s=a.return)&&s.call(a),0):a.next)&&!(s=s.call(a,r[1])).done)return s;switch(a=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return i.label++,{value:r[1],done:!1};case 5:i.label++,a=r[1],r=[0];continue;case 7:r=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==r[0]&&2!==r[0])){i=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){i.label=r[1];break}if(6===r[0]&&i.label<s[1]){i.label=s[1],s=r;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(r);break}s[2]&&i.ops.pop(),i.trys.pop();continue}r=n.call(e,i)}catch(e){r=[6,e],a=0}finally{t=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,o])}}},X=function(e,n,t){if(t||2===arguments.length)for(var a,s=0,r=n.length;s<r;s++)!a&&s in n||(a||(a=Array.prototype.slice.call(n,0,s)),a[s]=n[s]);return e.concat(a||Array.prototype.slice.call(n))};const $=function(){var e=(0,l.useState)("normal"),n=e[0],t=e[1],s=(0,l.useState)("normal"),i=s[0],o=s[1],c=(0,l.useState)("spectator"),d=c[0],u=c[1],h=(0,l.useState)("save"),f=h[0],m=h[1],p=(0,l.useState)(!1),v=p[0],g=p[1],x=(0,l.useState)(""),b=x[0],j=x[1],y=(0,l.useState)(""),_=y[0],k=y[1],P=(0,l.useState)(""),S=P[0],O=P[1],D=(0,l.useState)(""),T=D[0],z=D[1],A=(0,l.useState)(""),L=A[0],Y=A[1],W=(0,l.useState)([]),U=W[0],M=W[1],R=(0,l.useState)([]),B=R[0],E=R[1],q=(0,l.useState)(""),F=q[0],I=q[1],Z=(0,l.useState)(""),H=Z[0],G=Z[1],V=(0,l.useState)(!1),$=V[0],ee=V[1],ne=(0,l.useState)(!1),te=ne[0],ae=ne[1],se=(0,l.useState)(!1),re=se[0],ie=se[1],oe=(0,l.useState)(!1),le=oe[0],ce=oe[1],de=(0,r.s0)(),ue=(0,r.UO)();(0,l.useEffect)((function(){ue.id&&he(ue.id)}),[]);var he=function(e){return J(void 0,void 0,void 0,(function(){var n;return Q(this,(function(t){switch(t.label){case 0:g(!0),t.label=1;case 1:return t.trys.push([1,3,,4]),[4,N.request.get("/collection/".concat(e),{auth:!0})];case 2:return n=t.sent(),document.title="".concat(n.collection.name||""," | Pagser"),m(n.btn),u(n.viewer),j(n.collection._id),z(n.collection.name),Y(n.collection.description),G(n.collection.photo.secure_url),I(n.collection.user.name),M(n.collection.pages),[3,4];case 3:return 403===t.sent().status&&(de("/u/collections"),(0,N.alert)("Sorry you are not authorized to view that collection.","error")),[3,4];case 4:return g(!1),[2]}}))}))},fe=function(){return J(void 0,void 0,void 0,(function(){var e;return Q(this,(function(n){switch(n.label){case 0:(0,N.loadingModal)("Loading..."),n.label=1;case 1:return n.trys.push([1,3,,4]),[4,N.request.post("/collection/toggle-library/".concat(b),{},{auth:!0})];case 2:return"removed"===(e=n.sent()).status&&(m("save"),(0,N.alert)("The collection was successfully removed from your library.","success")),"added"===e.status&&(m("remove"),(0,N.alert)("The collection was successfully added to your library.","success")),[3,4];case 3:return n.sent(),[3,4];case 4:return(0,N.loadingModal)(),[2]}}))}))},me=function(){return J(void 0,void 0,void 0,(function(){var e;return Q(this,(function(n){switch(n.label){case 0:(0,N.loadingModal)("Loading..."),n.label=1;case 1:return n.trys.push([1,3,,4]),[4,N.request.post("/collection/sharing/".concat(b),{},{auth:!0})];case 2:return(e=n.sent()).sharing&&(m("stop-sharing"),(0,N.alert)("The collection is now accessible by others.","success")),e.sharing||(m("share"),ie(!1),(0,N.alert)("The collection has stopped from being shared.","success")),[3,4];case 3:return n.sent(),[3,4];case 4:return(0,N.loadingModal)(),[2]}}))}))};return v?(0,a.jsx)("div",K({className:"center-content margin-top-1"},{children:(0,a.jsx)(w.Loading,{})})):(0,a.jsxs)(l.Fragment,{children:[(0,a.jsxs)(w.ConfirmModal,K({header:"Delete your collection",open:te,btnName:"Delete",onConfirm:function(){J(void 0,void 0,void 0,(function(){return Q(this,(function(e){switch(e.label){case 0:(0,N.loadingModal)("Loading..."),e.label=1;case 1:return e.trys.push([1,3,,4]),[4,N.request.delete("/collection/".concat(b),{auth:!0})];case 2:return e.sent(),(0,N.loadingModal)(),(0,N.alert)("Your collection was deleted successfully.","success"),de("/u/collections"),[3,4];case 3:return e.sent(),[3,4];case 4:return[2]}}))}))},onCancel:function(){ae(!1)}},{children:[(0,a.jsx)("p",{children:"Are you sure that you want to delete your collection? "}),U.length>0&&(0,a.jsx)("p",{children:"All the pages you have saved on this collection will be removed from your library if you don't have them saved somewhere else."}),"stop-sharing"===f&&(0,a.jsx)("p",{children:"This collection is being shared for others. If you delete the collection all the people that have saved your collection won't be able to access it any longer."}),(0,a.jsx)("strong",{children:"You cannot undo this action."})]})),(0,a.jsxs)(w.ConfirmModal,K({header:"Stop sharing your collection",open:re,btnName:"Stop Sharing",onConfirm:function(){me()},onCancel:function(){ie(!1)}},{children:[(0,a.jsx)("p",{children:"Are you sure that you want to make your collection private? "}),(0,a.jsx)("p",{children:"If you stop the collection from being shared, all the people that have saved your collection won't be able to access it and the collection won't be shown on your public profile any longer until you make it public again."})]})),(0,a.jsxs)(w.ConfirmModal,K({header:"Remove pages",open:le,btnName:"Remove",onConfirm:function(){J(void 0,void 0,void 0,(function(){var e;return Q(this,(function(n){switch(n.label){case 0:ce(!1),(0,N.loadingModal)("Loading..."),n.label=1;case 1:return n.trys.push([1,3,,4]),[4,N.request.put("/api/collection/remove-pages/".concat(b),{pageIds:B},{auth:!0})];case 2:return n.sent(),(0,N.loadingModal)(),(0,N.alert)("Page(s) removed from your collection successfully.","success"),e=U.filter((function(e){return-1===B.indexOf(e._id)})),M(e),E([]),o("normal"),[3,4];case 3:return n.sent(),(0,N.loadingModal)(),(0,N.alert)("Sorry an error occurred please try again.","error"),[3,4];case 4:return[2]}}))}))},onCancel:function(){ce(!1)}},{children:[(0,a.jsxs)("p",{children:["Are you sure that you want to remove the selected page(s) from your collection?"," "]}),(0,a.jsx)("p",{children:"You cannot undo this action."})]})),(0,a.jsxs)("div",K({className:"row"},{children:[(0,a.jsx)("div",K({className:"col-lg-1-of-2 col-md-1-of-2"},{children:"owner"===d?(0,a.jsxs)(l.Fragment,{children:[(0,a.jsx)(w.UploadPhoto,{open:$,header:"Upload a Photo",text:"Upload a photo for your collection:",inputLabelName:"Choose a photo",url:"/collection/photo/".concat(b),minWidth:960,minHeight:540,size:8e6,aspectRatio:16/9,success:function(e){return G(e)},onClose:function(){ee(!1)}}),(0,a.jsxs)("a",K({className:"img-upload-btn",href:"javascript:void(0)",onClick:function(){return ee(!0)}},{children:[(0,a.jsx)("img",{src:H,onError:function(e){e.target.src="/images/collection-placeholder.svg"}}),(0,a.jsx)("div",K({className:"img-upload-btn__cover"},{children:(0,a.jsxs)("div",K({className:"img-upload-btn__content"},{children:[(0,a.jsx)("i",{className:"fa fa-cloud-upload","aria-hidden":"true"})," Upload a New Photo"]}))}))]}))]}):(0,a.jsx)("img",{src:H,onError:function(e){e.target.src="/images/collection-placeholder.svg"}})})),(0,a.jsx)("div",K({className:"col-lg-1-of-2 col-md-1-of-2"},{children:(0,a.jsxs)("div",K({className:"collection-show"},{children:[function(){if("owner"===d&&"normal"===n)return(0,a.jsxs)("div",K({className:"collection-show__actions"},{children:[(0,a.jsx)("button",K({className:"btn-i btn-i-blue btn-i-big",onClick:function(){t("editing"),k(T),O(L)}},{children:(0,a.jsx)("i",{className:"fa fa-pencil"})})),(0,a.jsx)("button",K({className:"btn-i btn-i-red btn-i-big",onClick:function(){return ae(!0)}},{children:(0,a.jsx)("i",{className:"fa fa-trash"})}))]}))}(),"normal"===n&&(0,a.jsxs)(l.Fragment,{children:[(0,a.jsx)("h2",K({className:"collection-show__name"},{children:T})),(0,a.jsx)("div",K({className:"collection-show__desc"},{children:L}))]}),function(){if("owner"===d&&"editing"===n)return(0,a.jsxs)("form",K({className:"form margin-bottom-2 margin-top-3",onSubmit:function(e){e.preventDefault(),J(void 0,void 0,void 0,(function(){return Q(this,(function(e){switch(e.label){case 0:(0,N.loadingModal)("Saving..."),e.label=1;case 1:return e.trys.push([1,3,,4]),[4,N.request.put("/collection/info/".concat(b),{name:_,description:S},{auth:!0})];case 2:return e.sent(),(0,N.alert)("Collection info was updated successfully","success"),t("normal"),z(_),Y(S),[3,4];case 3:return e.sent(),[3,4];case 4:return(0,N.loadingModal)(),[2]}}))}))}},{children:[(0,a.jsx)("div",K({className:"form__group"},{children:(0,a.jsx)(w.Input,{lined:!0,type:"text",placeholder:"Collection name",value:_,required:!0,autoFocus:!0,onChange:function(e){return k(e)}})})),(0,a.jsx)("div",K({className:"form__group"},{children:(0,a.jsx)(w.Textarea,{rows:1,placeholder:"Add a description",value:S,onChange:function(e){return O(e)}})})),(0,a.jsxs)("div",K({className:"right-content"},{children:[(0,a.jsx)("button",K({type:"button",className:"btn btn-default btn-sm margin-right-1",onClick:function(){return t("normal")}},{children:"Cancel"})),(0,a.jsx)("button",K({type:"submit",className:"btn btn-blue btn-sm"},{children:"Save"}))]}))]}))}(),(0,a.jsxs)("div",K({className:"collection-show__creator"},{children:["Created by ","owner"===d?"You":F]})),"save"===f?(0,a.jsxs)("button",K({className:"btn btn-blue-o",onClick:function(){return fe()}},{children:["Save to Library ",(0,a.jsx)("i",{className:"fa fa-plus-square","aria-hidden":"true"})]})):"remove"===f?(0,a.jsxs)("button",K({className:"btn btn-red-o",onClick:function(){return fe()}},{children:["Remove from Library"," ",(0,a.jsx)("i",{className:"fa fa-minus-square","aria-hidden":"true"})]})):"share"===f?(0,a.jsxs)("button",K({className:"btn btn-green-o",onClick:function(){return me()}},{children:["Start sharing this collection"," ",(0,a.jsx)("i",{className:"fa fa-share-square","aria-hidden":"true"})]})):"stop-sharing"===f?(0,a.jsxs)("button",K({className:"btn btn-red-o",onClick:function(){return ie(!0)}},{children:["Stop sharing this collection"," ",(0,a.jsx)("i",{className:"fa fa-stop-circle","aria-hidden":"true"})]})):void 0]}))}))]})),(0,a.jsx)("div",K({className:"row"},{children:U.length>0?(0,a.jsxs)(l.Fragment,{children:[(0,a.jsxs)("div",K({className:"header-nav margin-top-4"},{children:[(0,a.jsxs)("h3",K({className:"heading-tertiary"},{children:[U.length," Page",U.length>1?"s":""," In This Collection:"]})),"editing"===i&&(0,a.jsxs)("div",K({className:"header-nav__label"},{children:[B.length," page",B.length>1?"s":""," selected"]})),"owner"===d&&(0,a.jsx)("div",K({className:"header-nav__actions"},{children:"normal"===i?(0,a.jsx)("button",K({className:"btn-text",onClick:function(){return o("editing")}},{children:"Edit"})):(0,a.jsxs)(l.Fragment,{children:[(0,a.jsx)("button",K({className:"btn-text btn-text-red",disabled:0===B.length,onClick:function(){return ce(!0)}},{children:"Remove"})),(0,a.jsx)("button",K({className:"btn-text",onClick:function(){o("normal"),E([])}},{children:"Done"}))]})}))]})),"editing"===i&&(0,a.jsxs)("div",K({className:"center-content a-15"},{children:[(0,a.jsxs)("button",K({className:"btn-text",disabled:1!==B.length||U[0]._id===B[0],onClick:function(){var e=X([],U,!0),n=e.findIndex((function(e){return e._id===B[0]})),t=e[n];e[n]=e[n-1],e[n-1]=t,M(e)}},{children:[(0,a.jsx)("i",{className:"fa fa-arrow-circle-left","aria-hidden":"true"})," ","Move Left"]})),(0,a.jsxs)("button",K({className:"btn-text",disabled:1!==B.length||U[U.length-1]._id===B[0],onClick:function(){var e=X([],U,!0),n=e.findIndex((function(e){return e._id===B[0]})),t=e[n];e[n]=e[n+1],e[n+1]=t,M(e)}},{children:["Move Right"," ",(0,a.jsx)("i",{className:"fa fa-arrow-circle-right","aria-hidden":"true"})]}))]}))]}):(0,a.jsx)("div",K({className:"collection-show__no-page-msg"},{children:"This collection does not have any page."}))})),(0,a.jsx)("div",K({className:"row"},{children:U.map((function(e){return(0,a.jsx)("div",K({className:"col-lg-1-of-5 col-md-1-of-5 col-sm-1-of-3 col-xs-1-of-2 col-xxs-1-of-1"},{children:(0,a.jsx)(C.Z,{id:e.id,selected:B.indexOf(e._id)>-1,status:i,briefDes:e.contents.briefDes,title:e.contents.title,image:e.cropedPhoto.secure_url,target:"_blank",url:e.url,type:e.type,authorUsername:e.author.username,onClick:function(){if("editing"===i){var n=B.indexOf(e._id);E(-1===n?X(X([],B,!0),[e._id],!1):X(X([],B.slice(0,n),!0),B.slice(n+1),!0))}}})}),e._id)}))}))]})};var ee=function(){return ee=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var s in n=arguments[t])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},ee.apply(this,arguments)};const ne=function(){return(0,a.jsx)(i.zt,ee({store:o.h},{children:(0,a.jsxs)(s.VK,{children:[(0,a.jsx)(u,{}),(0,a.jsxs)(r.Z5,{children:[(0,a.jsx)(r.AW,{path:"/feed/subscriptions",element:(0,a.jsx)(k,{})}),(0,a.jsx)(r.AW,{path:"/feed/history/pages",element:(0,a.jsx)(T,{})}),(0,a.jsx)(r.AW,{path:"/feed/history/comments",element:(0,a.jsx)(A,{})}),(0,a.jsx)(r.AW,{path:"/feed/read-later",element:(0,a.jsx)(Y,{})}),(0,a.jsx)(r.AW,{path:"/feed/liked-pages",element:(0,a.jsx)(U,{})}),(0,a.jsx)(r.AW,{path:"/u/pages/published",element:(0,a.jsx)(E,{})}),(0,a.jsx)(r.AW,{path:"/u/pages/draft",element:(0,a.jsx)(F,{})}),(0,a.jsx)(r.AW,{path:"/u/collections",element:(0,a.jsx)(V,{})}),(0,a.jsx)(r.AW,{path:"/collection/:id",element:(0,a.jsx)($,{})}),(0,a.jsx)(r.AW,{path:"/u/pages",element:(0,a.jsx)(r.Fg,{to:"/u/pages/published",replace:!0})}),(0,a.jsx)(r.AW,{path:"/home",element:(0,a.jsx)(f,{})}),(0,a.jsx)(r.AW,{path:"/u/dashboard",element:(0,a.jsx)(p,{})}),(0,a.jsx)(r.AW,{path:"/u/analytics",element:(0,a.jsx)(g,{})}),(0,a.jsx)(r.AW,{path:"/u/monetization",element:(0,a.jsx)(b,{})})]})]})}))}},2617:(e,n,t)=>{t.d(n,{C9:()=>b,NH:()=>g,PS:()=>y,RW:()=>c,SG:()=>d,Tf:()=>h,Tz:()=>j,ZP:()=>w,Zp:()=>p,mW:()=>x,xN:()=>N});var a,s=t(8229),r=t(4819),i=function(e,n,t,a){return new(t||(t=Promise))((function(s,r){function i(e){try{l(a.next(e))}catch(e){r(e)}}function o(e){try{l(a.throw(e))}catch(e){r(e)}}function l(e){var n;e.done?s(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,o)}l((a=a.apply(e,n||[])).next())}))},o=function(e,n){var t,a,s,r,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function o(r){return function(o){return function(r){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,a&&(s=2&r[0]?a.return:r[0]?a.throw||((s=a.return)&&s.call(a),0):a.next)&&!(s=s.call(a,r[1])).done)return s;switch(a=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return i.label++,{value:r[1],done:!1};case 5:i.label++,a=r[1],r=[0];continue;case 7:r=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==r[0]&&2!==r[0])){i=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){i.label=r[1];break}if(6===r[0]&&i.label<s[1]){i.label=s[1],s=r;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(r);break}s[2]&&i.ops.pop(),i.trys.pop();continue}r=n.call(e,i)}catch(e){r=[6,e],a=0}finally{t=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,o])}}},l=(0,r.oM)({name:"Pages",initialState:{loading:!0,list:[],selected:[],status:"normal",sortBy:"date-added-asc",filterBy:"all"},reducers:{setLoading:function(e,n){e.loading=n.payload},setStatus:function(e,n){e.status=n.payload,e.selected=[]},setSortBy:function(e,n){e.sortBy=n.payload},setFilterBy:function(e,n){e.filterBy=n.payload},setList:function(e,n){e.list=n.payload},selectPage:function(e,n){var t=e.selected.indexOf(n.payload);-1===t?e.selected.push(n.payload):e.selected.splice(t,1)}}}),c=function(e,n,t){return function(a,r){return i(void 0,void 0,void 0,(function(){var r,i;return o(this,(function(o){switch(o.label){case 0:return a(u(!0)),r="PB-pages"===e?"/users/".concat(window.location.pathname.split("/")[2],"/pages"):"/".concat(e,"?sortBy=").concat(t,"&filterBy=").concat(n),[4,s.request.get(r,{auth:!0})];case 1:return i=o.sent(),a(v(i.results||i.pages)),n&&a(m(i.filterBy)),t&&a(f(i.sortBy)),a(u(!1)),[2]}}))}))}},d=function(e){return function(n,t){return i(void 0,void 0,void 0,(function(){var a;return o(this,(function(r){switch(r.label){case 0:return(0,s.loadingModal)("Loading..."),[4,s.request.delete("/".concat(e),{data:{ids:t().pages.selected},auth:!0})];case 1:return r.sent(),a=t().pages.list.filter((function(e){return-1===t().pages.selected.indexOf(e.id)})),n(v(a)),n(h("normal")),(0,s.loadingModal)(),"pages/draft"===t().sideNav.section?(0,s.alert)("Draft Page(s) successfully deleted.","success"):(0,s.alert)("Page(s) successfully removed from your list.","success"),[2]}}))}))}},u=(a=l.actions).setLoading,h=a.setStatus,f=a.setSortBy,m=a.setFilterBy,p=a.selectPage,v=a.setList,g=function(e){return e.pages.loading},x=function(e){return e.pages.status},b=function(e){return e.pages.sortBy},j=function(e){return e.pages.filterBy},y=function(e){return e.pages.selected},N=function(e){return e.pages.list};const w=l.reducer},8905:(e,n,t)=>{t.d(n,{Il:()=>r,ZP:()=>i,zc:()=>s});var a=(0,t(4819).oM)({name:"sideNav",initialState:{section:""},reducers:{setSection:function(e,n){e.section=n.payload}}}),s=a.actions.setSection,r=function(e){return e.sideNav.section};const i=a.reducer},481:(e,n,t)=>{t.d(n,{h:()=>i});var a=t(4819),s=t(8905),r=t(2617),i=(0,a.xC)({reducer:{sideNav:s.ZP,pages:r.ZP}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWVnUCxFQUFvQixPLG1FQ1p4QnBDLEdBQVEsUUFBZSxDQUM5QnVDLFFBQVMsQ0FDTFgsUUFBUyxLQUNUcEssTUFBTyxPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvcGFydGlhbHMvQ29sbGVjdGlvblRodW1ibmFpbC50c3giLCJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvcGFydGlhbHMvUGFnZVRodW1ibmFpbC50c3giLCJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvdmlld3MvbGlicmFyeS9zaWRlLW5hdi9TaWRlTmF2LnRzeCIsIndlYnBhY2s6Ly9AcGFnc2VyL3dlYi8uL3NyYy92aWV3cy9saWJyYXJ5L2hvbWUvSG9tZS50c3giLCJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvdmlld3MvbGlicmFyeS9kYXNoYm9hcmQvRGFzaGJvYXJkLnRzeCIsIndlYnBhY2s6Ly9AcGFnc2VyL3dlYi8uL3NyYy92aWV3cy9saWJyYXJ5L2FuYWx5dGljcy9BbmFseXRpY3MudHN4Iiwid2VicGFjazovL0BwYWdzZXIvd2ViLy4vc3JjL3ZpZXdzL2xpYnJhcnkvbW9uZXRpemF0aW9uL01vbmV0aXphdGlvbi50c3giLCJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvdmlld3MvbGlicmFyeS9zdWJzY3JpcHRpb25zL1N1YnNjcmlwdGlvblRodW1ibmFpbC50c3giLCJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvdmlld3MvbGlicmFyeS9zdWJzY3JpcHRpb25zL1N1YnNjcmlwdGlvbnMudHN4Iiwid2VicGFjazovL0BwYWdzZXIvd2ViLy4vc3JjL3ZpZXdzL2xpYnJhcnkvaGlzdG9yeS9IZWFkZXIudHN4Iiwid2VicGFjazovL0BwYWdzZXIvd2ViLy4vc3JjL3ZpZXdzL2xpYnJhcnkvaGlzdG9yeS9QYWdlcy50c3giLCJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvdmlld3MvbGlicmFyeS9oaXN0b3J5L0NvbW1lbnRzLnRzeCIsIndlYnBhY2s6Ly9AcGFnc2VyL3dlYi8uL3NyYy92aWV3cy9saWJyYXJ5L3JlYWQtbGF0ZXIvUmVhZExhdGVyLnRzeCIsIndlYnBhY2s6Ly9AcGFnc2VyL3dlYi8uL3NyYy92aWV3cy9saWJyYXJ5L2xpa2VkLXBhZ2VzL0xpa2VkUGFnZXMudHN4Iiwid2VicGFjazovL0BwYWdzZXIvd2ViLy4vc3JjL3ZpZXdzL2xpYnJhcnkvdXNlci1wYWdlcy9IZWFkZXIudHN4Iiwid2VicGFjazovL0BwYWdzZXIvd2ViLy4vc3JjL3ZpZXdzL2xpYnJhcnkvdXNlci1wYWdlcy9QdWJsaXNoZWQudHN4Iiwid2VicGFjazovL0BwYWdzZXIvd2ViLy4vc3JjL3ZpZXdzL2xpYnJhcnkvdXNlci1wYWdlcy9EcmFmdC50c3giLCJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvdmlld3MvbGlicmFyeS9jb2xsZWN0aW9ucy9Db2xsZWN0aW9ucy50c3giLCJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvdmlld3MvbGlicmFyeS9jb2xsZWN0aW9ucy9Db2xsZWN0aW9uU2hvdy50c3giLCJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvdmlld3MvbGlicmFyeS9pbmRleC50c3giLCJ3ZWJwYWNrOi8vQHBhZ3Nlci93ZWIvLi9zcmMvdmlld3MvbGlicmFyeS9wYWdlc1NsaWNlLnRzIiwid2VicGFjazovL0BwYWdzZXIvd2ViLy4vc3JjL3ZpZXdzL2xpYnJhcnkvc2lkZS1uYXYvc2lkZU5hdlNsaWNlLnRzIiwid2VicGFjazovL0BwYWdzZXIvd2ViLy4vc3JjL3ZpZXdzL2xpYnJhcnkvc3RvcmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcbnZhciBDb2xsZWN0aW9uID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgdmFyIG51bVRleHQgPSBwcm9wcy5wYWdlTnVtICYmIHByb3BzLnBhZ2VOdW0gPiAxXG4gICAgICAgID8gXCJcIi5jb25jYXQocHJvcHMucGFnZU51bSwgXCIgcGFnZXNcIilcbiAgICAgICAgOiBcIlwiLmNvbmNhdChwcm9wcy5wYWdlTnVtIHx8IDAsIFwiIHBhZ2VcIik7XG4gICAgdmFyIGNvbnRlbnQgPSAoX2pzeHMoUmVhY3QuRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJjb2xsZWN0aW9uLXRodW1ibmFpbF9fcGhvdG9cIiB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImltZ1wiLCB7IHNyYzogcHJvcHMuaW1nLCBvbkVycm9yOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUudGFyZ2V0LnNyYyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiL2ltYWdlcy9jb2xsZWN0aW9uLXBsYWNlaG9sZGVyLnN2Z1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSB9KSwgX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY29sbGVjdGlvbi10aHVtYm5haWxfX251bS1sYWJlbFwiIH0sIHsgY2hpbGRyZW46IFtudW1UZXh0LCBcIiBcIiwgcHJvcHMucGFnZU51bSA+IDAgJiYgKF9qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLW5ld3NwYXBlci1vXCIsIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfSkpXSB9KSksIF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbGxlY3Rpb24tdGh1bWJuYWlsX192aWV3LWxhYmVsXCIgfSwgeyBjaGlsZHJlbjogW19qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLWV5ZVwiLCBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiIH0pLCBcIlZpZXdcIl0gfSkpXSB9KSksIF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbGxlY3Rpb24tdGh1bWJuYWlsX19kZXRhaWxzXCIgfSwgeyBjaGlsZHJlbjogW19qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY29sbGVjdGlvbi10aHVtYm5haWxfX25hbWVcIiB9LCB7IGNoaWxkcmVuOiBwcm9wcy5uYW1lIH0pKSwgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJjb2xsZWN0aW9uLXRodW1ibmFpbF9fZGVzY1wiIH0sIHsgY2hpbGRyZW46IHByb3BzLmRlc2MgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbGxlY3Rpb24tdGh1bWJuYWlsX19hdXRob3JcIiB9LCB7IGNoaWxkcmVuOiBwcm9wcy5hdXRob3IgfSkpXSB9KSldIH0pKTtcbiAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY29sbGVjdGlvbi10aHVtYm5haWxcIiwgb25DbGljazogcHJvcHMub25DbGljayB9LCB7IGNoaWxkcmVuOiBwcm9wcy5yZWZyZXNoID8gKF9qc3goXCJhXCIsIF9fYXNzaWduKHsgaHJlZjogXCIvY29sbGVjdGlvbi9cIi5jb25jYXQocHJvcHMuaWQpLCB0YXJnZXQ6IHByb3BzLnRhcmdldCB9LCB7IGNoaWxkcmVuOiBjb250ZW50IH0pKSkgOiAoX2pzeChMaW5rLCBfX2Fzc2lnbih7IHRvOiBcIi9jb2xsZWN0aW9uL1wiLmNvbmNhdChwcm9wcy5pZCkgfSwgeyBjaGlsZHJlbjogY29udGVudCB9KSkpIH0pKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgQ29sbGVjdGlvbjtcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xudmFyIFBhZ2VUaHVtYm5haWwgPSBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICBpZiAocHJvcHMubm9QaG90bykge1xuICAgICAgICB2YXIgYnJpZWZEZXNfMSA9IHByb3BzLmJyaWVmRGVzO1xuICAgICAgICB2YXIgdGl0bGVfMSA9IHByb3BzLnRpdGxlO1xuICAgICAgICB2YXIgdXJsXzEgPSBcIlwiO1xuICAgICAgICB2YXIgY2xhc3NOYW1lXzEgPSBcIlwiO1xuICAgICAgICB2YXIgdGFyZ2V0XzEgPSBwcm9wcy50YXJnZXQ7XG4gICAgICAgIGlmIChwcm9wcy50aXRsZS5sZW5ndGggPiAyNSkge1xuICAgICAgICAgICAgdGl0bGVfMSA9IHByb3BzLnRpdGxlLnN1YnN0cmluZygwLCAyNSkgKyBcIi4uLlwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9wcy5icmllZkRlcy5sZW5ndGggPiAzNSkge1xuICAgICAgICAgICAgYnJpZWZEZXNfMSA9IHByb3BzLmJyaWVmRGVzLnN1YnN0cmluZygwLCAzNSkgKyBcIi4uLlwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9wcy5icmllZkRlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGJyaWVmRGVzXzEgPSBfanN4KFwiZW1cIiwgeyBjaGlsZHJlbjogXCJObyBicmllZiBkZXNjcmlwdGlvbiBwcm92aWRlZC5cIiB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcHMudHlwZSA9PT0gXCJkcmFmdFwiKSB7XG4gICAgICAgICAgICB1cmxfMSA9IFwiL25ldy1wYWdlL3BhZ2UtY29udGVudHM/aWQ9XCIuY29uY2F0KHByb3BzLmlkKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcHMuc3RhdHVzID09PSBcIm5vcm1hbFwiIHx8ICFwcm9wcy5zdGF0dXMpIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZV8xID0gXCJwYWdlLXRodW1ibmFpbCBwYWdlLXRodW1ibmFpbC1uby1waG90b1wiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHByb3BzLnN0YXR1cyA9PT0gXCJlZGl0aW5nXCIpIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZV8xID1cbiAgICAgICAgICAgICAgICBcInBhZ2UtdGh1bWJuYWlsIHBhZ2UtdGh1bWJuYWlsLW5vLXBob3RvIHBhZ2UtdGh1bWJuYWlsLS1zaGFraW5nXCI7XG4gICAgICAgICAgICB1cmxfMSA9IFwiamF2YXNjcmlwdDp2b2lkKDApXCI7XG4gICAgICAgICAgICB0YXJnZXRfMSA9IFwiX3NlbGZcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcHMuc3RhdHVzID09PSBcImVkaXRpbmdcIiAmJiBwcm9wcy5zZWxlY3RlZClcbiAgICAgICAgICAgIGNsYXNzTmFtZV8xICs9IFwiIHBhZ2UtdGh1bWJuYWlsLS1zZWxlY3RlZFwiO1xuICAgICAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IGNsYXNzTmFtZV8xLCBvbkNsaWNrOiBwcm9wcy5vbkNsaWNrIH0sIHsgY2hpbGRyZW46IF9qc3hzKFwiYVwiLCBfX2Fzc2lnbih7IGhyZWY6IHVybF8xLCB0YXJnZXQ6IHRhcmdldF8xIH0sIHsgY2hpbGRyZW46IFtfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJwYWdlLXRodW1ibmFpbF9fZGV0YWlsc1wiIH0sIHsgY2hpbGRyZW46IFtfanN4KFwiaDRcIiwgeyBjaGlsZHJlbjogdGl0bGVfMSB9KSwgX2pzeChcInBcIiwgeyBjaGlsZHJlbjogYnJpZWZEZXNfMSB9KV0gfSkpLCBwcm9wcy5sYWJlbCAmJiAoX2pzeChcInNwYW5cIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwicGFnZS10aHVtYm5haWxfX3R5cGVcIiB9LCB7IGNoaWxkcmVuOiBwcm9wcy5sYWJlbCB9KSkpXSB9KSkgfSkpKTtcbiAgICB9XG4gICAgdmFyIGJyaWVmRGVzID0gcHJvcHMuYnJpZWZEZXM7XG4gICAgdmFyIHRpdGxlID0gcHJvcHMudGl0bGU7XG4gICAgdmFyIHVybCA9IFwiXCI7XG4gICAgdmFyIGNsYXNzTmFtZSA9IFwiXCI7XG4gICAgdmFyIHRhcmdldCA9IHByb3BzLnRhcmdldDtcbiAgICBpZiAocHJvcHMudHlwZSA9PT0gXCJwcml2YXRlXCIpIHtcbiAgICAgICAgdXJsID0gXCIvXCIuY29uY2F0KHByb3BzLmF1dGhvclVzZXJuYW1lLCBcIi9cIikuY29uY2F0KHByb3BzLnVybCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHByb3BzLnR5cGUgPT09IFwicHVibGljXCIpIHtcbiAgICAgICAgdXJsID0gXCIvcHVibGljLXBhZ2VzL1wiLmNvbmNhdChwcm9wcy51cmwpO1xuICAgIH1cbiAgICBpZiAocHJvcHMudGl0bGUubGVuZ3RoID4gMjUpIHtcbiAgICAgICAgdGl0bGUgPSBwcm9wcy50aXRsZS5zdWJzdHJpbmcoMCwgMjUpICsgXCIuLi5cIjtcbiAgICB9XG4gICAgaWYgKHByb3BzLmJyaWVmRGVzLmxlbmd0aCA+IDM1KSB7XG4gICAgICAgIGJyaWVmRGVzID0gcHJvcHMuYnJpZWZEZXMuc3Vic3RyaW5nKDAsIDM1KSArIFwiLi4uXCI7XG4gICAgfVxuICAgIGlmIChwcm9wcy5icmllZkRlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgYnJpZWZEZXMgPSBfanN4KFwiZW1cIiwgeyBjaGlsZHJlbjogXCJObyBicmllZiBkZXNjcmlwdGlvbiBwcm92aWRlZC5cIiB9KTtcbiAgICB9XG4gICAgaWYgKHByb3BzLnN0YXR1cyA9PT0gXCJub3JtYWxcIiB8fCAhcHJvcHMuc3RhdHVzKSB7XG4gICAgICAgIGNsYXNzTmFtZSA9IFwicGFnZS10aHVtYm5haWxcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAocHJvcHMuc3RhdHVzID09PSBcImVkaXRpbmdcIikge1xuICAgICAgICBjbGFzc05hbWUgPSBcInBhZ2UtdGh1bWJuYWlsIHBhZ2UtdGh1bWJuYWlsLS1zaGFraW5nXCI7XG4gICAgICAgIHVybCA9IFwiamF2YXNjcmlwdDp2b2lkKDApXCI7XG4gICAgICAgIHRhcmdldCA9IFwiX3NlbGZcIjtcbiAgICB9XG4gICAgaWYgKHByb3BzLnN0YXR1cyA9PT0gXCJlZGl0aW5nXCIgJiYgcHJvcHMuc2VsZWN0ZWQpXG4gICAgICAgIGNsYXNzTmFtZSArPSBcIiBwYWdlLXRodW1ibmFpbC0tc2VsZWN0ZWRcIjtcbiAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IGNsYXNzTmFtZSwgb25DbGljazogcHJvcHMub25DbGljayB9LCB7IGNoaWxkcmVuOiBfanN4cyhcImFcIiwgX19hc3NpZ24oeyBocmVmOiB1cmwsIHRhcmdldDogdGFyZ2V0IH0sIHsgY2hpbGRyZW46IFtfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInBhZ2UtdGh1bWJuYWlsX19waG90b1wiIH0sIHsgY2hpbGRyZW46IF9qc3goXCJpbWdcIiwgeyBzcmM6IHByb3BzLmltYWdlLCBvbkVycm9yOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUudGFyZ2V0LnNyYyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiL2ltYWdlcy9wYWdlcy9wbGFjZWhvbGRlci5zdmdcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gfSkgfSkpLCBfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJwYWdlLXRodW1ibmFpbF9fZGV0YWlsc1wiIH0sIHsgY2hpbGRyZW46IFtfanN4KFwiaDRcIiwgeyBjaGlsZHJlbjogdGl0bGUgfSksIF9qc3goXCJwXCIsIHsgY2hpbGRyZW46IGJyaWVmRGVzIH0pXSB9KSksIF9qc3goXCJzcGFuXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInBhZ2UtdGh1bWJuYWlsX190eXBlXCIgfSwgeyBjaGlsZHJlbjogcHJvcHMubGFiZWwgPyBwcm9wcy5sYWJlbCA6IHByb3BzLnR5cGUgfSkpXSB9KSkgfSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBQYWdlVGh1bWJuYWlsO1xuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IExpbmsgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgeyBzZWxlY3RTZWN0aW9uLCBzZXRTZWN0aW9uIH0gZnJvbSBcIi4vc2lkZU5hdlNsaWNlXCI7XG52YXIgU2lkZU5hdiA9IGZ1bmN0aW9uICgpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keVwiKS5zdHlsZS5tYXJnaW5MZWZ0ID1cbiAgICAgICAgXCIyNHJlbVwiO1xuICAgIHZhciBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG4gICAgdmFyIHNlY3Rpb24gPSB1c2VTZWxlY3RvcihzZWxlY3RTZWN0aW9uKTtcbiAgICB2YXIgZ2V0U2VjdGlvbkZyb21VcmwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzZWN0aW9ucyA9IFtcbiAgICAgICAgICAgIFwiaG9tZVwiLFxuICAgICAgICAgICAgXCJzdWJzY3JpcHRpb25zXCIsXG4gICAgICAgICAgICBcImhpc3RvcnkvcGFnZXNcIixcbiAgICAgICAgICAgIFwiaGlzdG9yeS9jb21tZW50c1wiLFxuICAgICAgICAgICAgXCJyZWFkLWxhdGVyXCIsXG4gICAgICAgICAgICBcImxpa2VkLXBhZ2VzXCIsXG4gICAgICAgICAgICBcImNvbGxlY3Rpb25zXCIsXG4gICAgICAgICAgICBcImRhc2hib2FyZFwiLFxuICAgICAgICAgICAgXCJhbmFseXRpY3NcIixcbiAgICAgICAgICAgIFwibW9uZXRpemF0aW9uXCIsXG4gICAgICAgICAgICBcInBhZ2VzL3B1Ymxpc2hlZFwiLFxuICAgICAgICAgICAgXCJwYWdlcy9kcmFmdFwiLFxuICAgICAgICAgICAgXCJjb21tZW50c1wiLFxuICAgICAgICBdO1xuICAgICAgICBpZiAod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KFwiL1wiKVsxXSA9PT0gXCJob21lXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBcImhvbWVcIjtcbiAgICAgICAgfVxuICAgICAgICAvLyBDb2xsZWN0aW9uIHNob3cgcGFnZVxuICAgICAgICBpZiAod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KFwiL1wiKVsxXSA9PT0gXCJjb2xsZWN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmICh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpWzJdID09PSBcImhpc3RvcnlcIikge1xuICAgICAgICAgICAgdmFyIGluZGV4XzEgPSBzZWN0aW9ucy5pbmRleE9mKFwiXCIuY29uY2F0KHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5zcGxpdChcIi9cIilbMl0sIFwiL1wiKS5jb25jYXQod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KFwiL1wiKVszXSkpO1xuICAgICAgICAgICAgcmV0dXJuIHNlY3Rpb25zW2luZGV4XzFdIHx8IFwiaGlzdG9yeS9wYWdlc1wiO1xuICAgICAgICB9XG4gICAgICAgIGlmICh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpWzJdID09PSBcInBhZ2VzXCIpIHtcbiAgICAgICAgICAgIHZhciBpbmRleF8yID0gc2VjdGlvbnMuaW5kZXhPZihcIlwiLmNvbmNhdCh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpWzJdLCBcIi9cIikuY29uY2F0KHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5zcGxpdChcIi9cIilbM10pKTtcbiAgICAgICAgICAgIHJldHVybiBzZWN0aW9uc1tpbmRleF8yXSB8fCBcInBhZ2VzL3B1Ymxpc2hlZFwiO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpbmRleCA9IHNlY3Rpb25zLmluZGV4T2Yod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KFwiL1wiKVsyXSk7XG4gICAgICAgIHJldHVybiBzZWN0aW9uc1tpbmRleF0gfHwgXCJcIjtcbiAgICB9O1xuICAgIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghc2VjdGlvbikge1xuICAgICAgICAgICAgZGlzcGF0Y2goc2V0U2VjdGlvbihnZXRTZWN0aW9uRnJvbVVybCgpKSk7XG4gICAgICAgIH1cbiAgICB9LCBbXSk7XG4gICAgcmV0dXJuIChfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJzaWRlbmF2IHNpZGVuYXYtLW9wZW5cIiwgaWQ6IFwianMtLXNpZGVuYXZcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwic2lkZW5hdl9fc2VjdGlvblwiIH0sIHsgY2hpbGRyZW46IFtfanN4cyhMaW5rLCBfX2Fzc2lnbih7IHRvOiBcIi9ob21lXCIsIGNsYXNzTmFtZTogc2VjdGlvbiA9PT0gXCJob21lXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwic2lkZW5hdl9fbGluayBzaWRlbmF2X19saW5rLS1hY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogXCJzaWRlbmF2X19saW5rXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKHNldFNlY3Rpb24oXCJob21lXCIpKTsgfSB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImlcIiwgeyBjbGFzc05hbWU6IFwiZmEgZmEtaG9tZVwiIH0pLCBcIkhvbWVcIl0gfSkpLCBfanN4cyhMaW5rLCBfX2Fzc2lnbih7IHRvOiBcIi9mZWVkL3N1YnNjcmlwdGlvbnNcIiwgY2xhc3NOYW1lOiBzZWN0aW9uID09PSBcInN1YnNjcmlwdGlvbnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gXCJzaWRlbmF2X19saW5rIHNpZGVuYXZfX2xpbmstLWFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcInNpZGVuYXZfX2xpbmtcIiwgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcGF0Y2goc2V0U2VjdGlvbihcInN1YnNjcmlwdGlvbnNcIikpOyB9IH0sIHsgY2hpbGRyZW46IFtfanN4KFwiaVwiLCB7IGNsYXNzTmFtZTogXCJmYSBmYS1maWxlLXRleHRcIiB9KSwgXCJTdWJzY3JpcHRpb25zXCJdIH0pKSwgX2pzeHMoTGluaywgX19hc3NpZ24oeyB0bzogXCIvZmVlZC9oaXN0b3J5L3BhZ2VzXCIsIGNsYXNzTmFtZTogc2VjdGlvbiA9PT0gXCJoaXN0b3J5L3BhZ2VzXCIgfHwgc2VjdGlvbiA9PT0gXCJoaXN0b3J5L2NvbW1lbnRzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwic2lkZW5hdl9fbGluayBzaWRlbmF2X19saW5rLS1hY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogXCJzaWRlbmF2X19saW5rXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKHNldFNlY3Rpb24oXCJoaXN0b3J5L3BhZ2VzXCIpKTsgfSB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImlcIiwgeyBjbGFzc05hbWU6IFwiZmEgZmEtaGlzdG9yeVwiIH0pLCBcIkhpc3RvcnlcIl0gfSkpLCBfanN4cyhMaW5rLCBfX2Fzc2lnbih7IHRvOiBcIi9mZWVkL3JlYWQtbGF0ZXJcIiwgY2xhc3NOYW1lOiBzZWN0aW9uID09PSBcInJlYWQtbGF0ZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gXCJzaWRlbmF2X19saW5rIHNpZGVuYXZfX2xpbmstLWFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcInNpZGVuYXZfX2xpbmtcIiwgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcGF0Y2goc2V0U2VjdGlvbihcInJlYWQtbGF0ZXJcIikpOyB9IH0sIHsgY2hpbGRyZW46IFtfanN4KFwiaVwiLCB7IGNsYXNzTmFtZTogXCJmYSBmYS1ib29rbWFya1wiIH0pLCBcIlJlYWQgTGF0ZXJcIl0gfSkpLCBfanN4cyhMaW5rLCBfX2Fzc2lnbih7IHRvOiBcIi9mZWVkL2xpa2VkLXBhZ2VzXCIsIGNsYXNzTmFtZTogc2VjdGlvbiA9PT0gXCJsaWtlZC1wYWdlc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcInNpZGVuYXZfX2xpbmsgc2lkZW5hdl9fbGluay0tYWN0aXZlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwic2lkZW5hdl9fbGlua1wiLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwYXRjaChzZXRTZWN0aW9uKFwibGlrZWQtcGFnZXNcIikpOyB9IH0sIHsgY2hpbGRyZW46IFtfanN4KFwiaVwiLCB7IGNsYXNzTmFtZTogXCJmYSBmYS10aHVtYnMtdXBcIiB9KSwgXCJMaWtlZCBQYWdlc1wiXSB9KSksIF9qc3hzKExpbmssIF9fYXNzaWduKHsgdG86IFwiL3UvY29sbGVjdGlvbnNcIiwgY2xhc3NOYW1lOiBzZWN0aW9uID09PSBcImNvbGxlY3Rpb25zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwic2lkZW5hdl9fbGluayBzaWRlbmF2X19saW5rLS1hY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogXCJzaWRlbmF2X19saW5rXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKHNldFNlY3Rpb24oXCJjb2xsZWN0aW9uc1wiKSk7IH0gfSwgeyBjaGlsZHJlbjogW19qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLXRoLWxhcmdlXCIgfSksIFwiQ29sbGVjdGlvbnNcIl0gfSkpXSB9KSksIF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInNpZGVuYXZfX3NlY3Rpb25cIiB9LCB7IGNoaWxkcmVuOiBbX2pzeHMoTGluaywgX19hc3NpZ24oeyB0bzogXCIvdS9kYXNoYm9hcmRcIiwgY2xhc3NOYW1lOiBzZWN0aW9uID09PSBcImRhc2hib2FyZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcInNpZGVuYXZfX2xpbmsgc2lkZW5hdl9fbGluay0tYWN0aXZlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwic2lkZW5hdl9fbGlua1wiLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwYXRjaChzZXRTZWN0aW9uKFwiZGFzaGJvYXJkXCIpKTsgfSB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImlcIiwgeyBjbGFzc05hbWU6IFwiZmEgZmEtZGFzaGJvYXJkXCIgfSksIFwiRGFzaGJvYXJkXCJdIH0pKSwgX2pzeHMoTGluaywgX19hc3NpZ24oeyB0bzogXCIvdS9hbmFseXRpY3NcIiwgY2xhc3NOYW1lOiBzZWN0aW9uID09PSBcImFuYWx5dGljc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcInNpZGVuYXZfX2xpbmsgc2lkZW5hdl9fbGluay0tYWN0aXZlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwic2lkZW5hdl9fbGlua1wiLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwYXRjaChzZXRTZWN0aW9uKFwiYW5hbHl0aWNzXCIpKTsgfSB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImlcIiwgeyBjbGFzc05hbWU6IFwiZmEgZmEtbGluZS1jaGFydFwiIH0pLCBcIkFuYWx5dGljc1wiXSB9KSksIF9qc3hzKExpbmssIF9fYXNzaWduKHsgdG86IFwiL3UvbW9uZXRpemF0aW9uXCIsIGNsYXNzTmFtZTogc2VjdGlvbiA9PT0gXCJtb25ldGl6YXRpb25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gXCJzaWRlbmF2X19saW5rIHNpZGVuYXZfX2xpbmstLWFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcInNpZGVuYXZfX2xpbmtcIiwgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcGF0Y2goc2V0U2VjdGlvbihcIm1vbmV0aXphdGlvblwiKSk7IH0gfSwgeyBjaGlsZHJlbjogW19qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLWRvbGxhclwiIH0pLCBcIk1vbmV0aXphdGlvblwiXSB9KSksIF9qc3hzKExpbmssIF9fYXNzaWduKHsgdG86IFwiL3UvcGFnZXNcIiwgY2xhc3NOYW1lOiBzZWN0aW9uID09PSBcInBhZ2VzL3B1Ymxpc2hlZFwiIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbiA9PT0gXCJwYWdlcy9kcmFmdFwiIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbiA9PT0gXCJwYWdlcy90cmFzaFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcInNpZGVuYXZfX2xpbmsgc2lkZW5hdl9fbGluay0tYWN0aXZlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwic2lkZW5hdl9fbGlua1wiLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwYXRjaChzZXRTZWN0aW9uKFwicGFnZXMvcHVibGlzaGVkXCIpKTsgfSB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImlcIiwgeyBjbGFzc05hbWU6IFwiZmEgZmEtZW52ZWxvcGUtb3BlblwiIH0pLCBcIllvdXIgUGFnZXNcIl0gfSkpXSB9KSksIF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInNpZGVuYXZfX2Zvb3RlclwiIH0sIHsgY2hpbGRyZW46IFtfanN4cyhcInVsXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcIlwiIH0sIHsgY2hpbGRyZW46IFtfanN4KFwibGlcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiXCIgfSwgeyBjaGlsZHJlbjogX2pzeChcImFcIiwgX19hc3NpZ24oeyBocmVmOiBcImphdmFzY3JpcHQ6dm9pZCgwKTtcIiB9LCB7IGNoaWxkcmVuOiBcIlN1cHBvcnRcIiB9KSkgfSkpLCBfanN4KFwibGlcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiXCIgfSwgeyBjaGlsZHJlbjogX2pzeChcImFcIiwgX19hc3NpZ24oeyBocmVmOiBcImphdmFzY3JpcHQ6dm9pZCgwKTtcIiB9LCB7IGNoaWxkcmVuOiBcIkNvbnRhY3QgdXNcIiB9KSkgfSkpLCBfanN4KFwibGlcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiXCIgfSwgeyBjaGlsZHJlbjogX2pzeChcImFcIiwgX19hc3NpZ24oeyBocmVmOiBcIi90ZXJtcy1vZi11c2VcIiB9LCB7IGNoaWxkcmVuOiBcIlRlcm1zIG9mIFVzZVwiIH0pKSB9KSksIF9qc3goXCJsaVwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJcIiB9LCB7IGNoaWxkcmVuOiBfanN4KFwiYVwiLCBfX2Fzc2lnbih7IGhyZWY6IFwiL3ByaXZhY3ktcG9saWN5XCIgfSwgeyBjaGlsZHJlbjogXCJQcml2YWN5IFBvbGljeVwiIH0pKSB9KSldIH0pKSwgX2pzeChcInNwYW5cIiwgeyBjaGlsZHJlbjogXCJcXHUwMEE5IDIwMjIgUGFnc2VyLmNvbVwiIH0pXSB9KSldIH0pKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgU2lkZU5hdjtcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuLy8gdGhpcyBjb21wb25lbnQgc2hvdWxkIGp1c3QgbGluayB0byBvdGhlciBwbGFjZXM6XG4vLyBDUkVBVEUgQSBORVcgUEFHRVxuLy8gTUFOQUdFIFlPVVIgUFVCTElDIFBST0ZJTEVcbi8vIE1BTkdFIFlPVVIgQ09MTEVDVElPTlNcbi8vIElGIEhBVkUgV1JPVEUgQSBQQUdFOiBUQUxLIEFCT1VUIEFOQUxZVElDU1xuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwicm93XCIgfSwgeyBjaGlsZHJlbjogX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJoZWFkZXItbmF2IG1hcmdpbi10b3AtMlwiIH0sIHsgY2hpbGRyZW46IF9qc3goXCJoM1wiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJoZWFkaW5nLXRlcnRpYXJ5IGNlbnRlci1jb250ZW50IGl0YWxpY1wiIH0sIHsgY2hpbGRyZW46IFwiVGhpcyBwYXJ0IGlzIHN0aWxsIHVuZGVyIGRldmVsb3BtZW50IHdoZXJlIHlvdSBjYW4gY29tZSBoZXJlIGFuZCByZWFkIHRoZSBwYWdlcyB5b3UgbG92ZSBiYXNlZCBvbiB5b3VyIGZlZWQuIFN0YXkgdHVuZWQhXCIgfSkpIH0pKSB9KSkpO1xufSk7XG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIChfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInJvd1wiIH0sIHsgY2hpbGRyZW46IF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdiBtYXJnaW4tdG9wLTJcIiB9LCB7IGNoaWxkcmVuOiBfanN4KFwiaDNcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGluZy10ZXJ0aWFyeSBjZW50ZXItY29udGVudCBpdGFsaWNcIiB9LCB7IGNoaWxkcmVuOiBcIlRoZSBkYXNoYm9hcmQgc2VjdGlvbiBpcyBzdGlsbCB1bmRlciBkZXZlbG9wbWVudCEgU3RheSB0dW5lZCFcIiB9KSkgfSkpIH0pKSk7XG59KTtcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwicm93XCIgfSwgeyBjaGlsZHJlbjogX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJoZWFkZXItbmF2IG1hcmdpbi10b3AtMlwiIH0sIHsgY2hpbGRyZW46IF9qc3goXCJoM1wiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJoZWFkaW5nLXRlcnRpYXJ5IGNlbnRlci1jb250ZW50IGl0YWxpY1wiIH0sIHsgY2hpbGRyZW46IFwiVGhlIGFuYWx5dGljcyBzZWN0aW9uIGlzIHN0aWxsIHVuZGVyIGRldmVsb3BtZW50ISBTdGF5IHR1bmVkIVwiIH0pKSB9KSkgfSkpKTtcbn0pO1xuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAoX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJyb3dcIiB9LCB7IGNoaWxkcmVuOiBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImhlYWRlci1uYXYgbWFyZ2luLXRvcC0yXCIgfSwgeyBjaGlsZHJlbjogX2pzeChcImgzXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImhlYWRpbmctdGVydGlhcnkgY2VudGVyLWNvbnRlbnQgaXRhbGljXCIgfSwgeyBjaGlsZHJlbjogXCJUaGUgbW9uZXRpemF0aW9uIHNlY3Rpb24gaXMgc3RpbGwgdW5kZXIgZGV2ZWxvcG1lbnQhIFN0YXkgdHVuZWQhXCIgfSkpIH0pKSB9KSkpO1xufSk7XG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBTdWJzY3JpcHRpb25UaHVtYm5haWwgPSBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICByZXR1cm4gKF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInN1Yi10aHVtYm5haWxcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeHMoXCJhXCIsIF9fYXNzaWduKHsgaHJlZjogXCIvdXNlcnMvXCIuY29uY2F0KHByb3BzLnVzZXJuYW1lKSwgdGFyZ2V0OiBcIl9ibGFua1wiLCBjbGFzc05hbWU6IFwic3ViLXRodW1ibmFpbF9faW5mb1wiIH0sIHsgY2hpbGRyZW46IFtfanN4KFwiaW1nXCIsIHsgY2xhc3NOYW1lOiBcInN1Yi10aHVtYm5haWxfX2luZm8taW1hZ2VcIiwgc3JjOiBwcm9wcy5pbWFnZSB9KSwgX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwic3ViLXRodW1ibmFpbF9faW5mby10ZXh0XCIgfSwgeyBjaGlsZHJlbjogW19qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwic3ViLXRodW1ibmFpbF9faW5mby1uYW1lXCIgfSwgeyBjaGlsZHJlbjogcHJvcHMubmFtZSB9KSksIF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwic3ViLXRodW1ibmFpbF9faW5mby1oZWFkbGluZVwiIH0sIHsgY2hpbGRyZW46IHByb3BzLmhlYWRsaW5lIH0pKV0gfSkpXSB9KSksIF9qc3goXCJhXCIsIF9fYXNzaWduKHsgaHJlZjogXCIvdXNlcnMvXCIuY29uY2F0KHByb3BzLnVzZXJuYW1lLCBcIi9wYWdlc1wiKSwgY2xhc3NOYW1lOiBcImJ0biBidG4tZGVmYXVsdCBidG4tcm91bmRcIiB9LCB7IGNoaWxkcmVuOiBcIlZpZXcgbGF0ZXN0IHBhZ2VzXCIgfSkpXSB9KSkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFN1YnNjcmlwdGlvblRodW1ibmFpbDtcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBTdWJzY3JpcHRpb25UaHVtYm5haWwgZnJvbSBcIi4vU3Vic2NyaXB0aW9uVGh1bWJuYWlsXCI7XG5pbXBvcnQgeyByZXF1ZXN0IH0gZnJvbSBcIkBwYWdzZXIvY29tbW9uXCI7XG5pbXBvcnQgeyBMb2FkaW5nIH0gZnJvbSBcIkBwYWdzZXIvcmV1c2FibGVcIjtcbnZhciBTdWJzY3JpcHRpb25zID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfYSA9IHVzZVN0YXRlKFtdKSwgc3Vic2NyaXB0aW9ucyA9IF9hWzBdLCBzZXRTdWJzY3JpcHRpb25zID0gX2FbMV07XG4gICAgdmFyIF9iID0gdXNlU3RhdGUoZmFsc2UpLCBsb2FkaW5nID0gX2JbMF0sIHNldExvYWRpbmcgPSBfYlsxXTtcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICAoZnVuY3Rpb24gKCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByZXNwb25zZTtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnRpdGxlID0gXCJTdWJzY3JpcHRpb25zIHwgUGFnc2VyXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgcmVxdWVzdC5nZXQoXCIvc3Vic2NyaXB0aW9uc1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dGg6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IChfYS5zZW50KCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0U3Vic2NyaXB0aW9ucyhyZXNwb25zZS5zdWJzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTsgfSkoKTtcbiAgICB9LCBbXSk7XG4gICAgdmFyIHJlbmRlclN1YnNjcmlwdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChzdWJzY3JpcHRpb25zLmxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgIHJldHVybiBfanN4KFwicFwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJhLTEzXCIgfSwgeyBjaGlsZHJlbjogXCJZb3UgaGF2ZW4ndCBzdWJzY3JpYmVkIHRvIGFueSBhdXRob3IgeWV0LlwiIH0pKTtcbiAgICAgICAgcmV0dXJuIHN1YnNjcmlwdGlvbnMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gKF9qc3goU3Vic2NyaXB0aW9uVGh1bWJuYWlsLCB7IG5hbWU6IGl0ZW0uYXV0aG9yLm5hbWUsIHVzZXJuYW1lOiBpdGVtLmF1dGhvci51c2VybmFtZSwgaGVhZGxpbmU6IGl0ZW0uYXV0aG9yLmhlYWRsaW5lLCBpbWFnZTogaXRlbS5hdXRob3IucGhvdG8uc2VjdXJlX3VybCB9LCBpdGVtLl9pZCkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiAoX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwicm93XCIgfSwgeyBjaGlsZHJlbjogW19qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdlwiIH0sIHsgY2hpbGRyZW46IF9qc3goXCJoM1wiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJoZWFkaW5nLXRlcnRpYXJ5XCIgfSwgeyBjaGlsZHJlbjogXCJZb3VyIFN1YnNjcmlwdGlvbnM6XCIgfSkpIH0pKSwgbG9hZGluZyAmJiAoX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJjZW50ZXItY29udGVudCBtYXJnaW4tdG9wLTFcIiB9LCB7IGNoaWxkcmVuOiBfanN4KExvYWRpbmcsIHt9KSB9KSkpLCAhbG9hZGluZyAmJiBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInJvd1wiIH0sIHsgY2hpbGRyZW46IHJlbmRlclN1YnNjcmlwdGlvbnMoKSB9KSldIH0pKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgU3Vic2NyaXB0aW9ucztcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHsgTGluayB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgdXNlU2VsZWN0b3IgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7IHNldFNlY3Rpb24sIHNlbGVjdFNlY3Rpb24gfSBmcm9tIFwiLi4vc2lkZS1uYXYvc2lkZU5hdlNsaWNlXCI7XG52YXIgSGVhZGVyID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG4gICAgdmFyIHNlY3Rpb24gPSB1c2VTZWxlY3RvcihzZWxlY3RTZWN0aW9uKTtcbiAgICByZXR1cm4gKF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImxpbmVkLWJ0bnMgbWFyZ2luLWJvdHRvbS0yIG1hcmdpbi10b3AtMVwiIH0sIHsgY2hpbGRyZW46IFtfanN4cyhMaW5rLCBfX2Fzc2lnbih7IHRvOiBcIi9mZWVkL2hpc3RvcnkvcGFnZXNcIiwgY2xhc3NOYW1lOiBzZWN0aW9uID09PSBcImhpc3RvcnkvcGFnZXNcIlxuICAgICAgICAgICAgICAgICAgICA/IFwiYnRuLWxpbmVkIGJ0bi1saW5lZC0tYWN0aXZlXCJcbiAgICAgICAgICAgICAgICAgICAgOiBcImJ0bi1saW5lZFwiLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXNwYXRjaChzZXRTZWN0aW9uKFwiaGlzdG9yeS9wYWdlc1wiKSk7IH0gfSwgeyBjaGlsZHJlbjogW19qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLWZpbGUgbWFyZ2luLXJpZ2h0LTNweFwiIH0pLCBcIiBSZWFkc1wiXSB9KSksIF9qc3hzKExpbmssIF9fYXNzaWduKHsgdG86IFwiL2ZlZWQvaGlzdG9yeS9jb21tZW50c1wiLCBjbGFzc05hbWU6IHNlY3Rpb24gPT09IFwiaGlzdG9yeS9jb21tZW50c1wiXG4gICAgICAgICAgICAgICAgICAgID8gXCJidG4tbGluZWQgYnRuLWxpbmVkLS1hY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICA6IFwiYnRuLWxpbmVkXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKHNldFNlY3Rpb24oXCJoaXN0b3J5L2NvbW1lbnRzXCIpKTsgfSB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImlcIiwgeyBjbGFzc05hbWU6IFwiZmEgZmEtY29tbWVudGluZyBtYXJnaW4tcmlnaHQtM3B4XCIgfSksIFwiIENvbW1lbnRzXCJdIH0pKV0gfSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7XG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUGFnZVRodW1ibmFpbCBmcm9tIFwiLi4vLi4vLi4vcGFydGlhbHMvUGFnZVRodW1ibmFpbFwiO1xuaW1wb3J0IHsgRHJvcGRvd24sIENvbmZpcm1Nb2RhbCwgTG9hZGluZyB9IGZyb20gXCJAcGFnc2VyL3JldXNhYmxlXCI7XG5pbXBvcnQgSGVhZGVyIGZyb20gXCIuL0hlYWRlclwiO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgeyBzZWxlY3RTdGF0dXMsIHNlbGVjdEZpbHRlckJ5LCBzZWxlY3RMb2FkaW5nLCBzZWxlY3RTZWxlY3RlZFBhZ2VzLCBzZWxlY3RQYWdlcywgZmV0Y2hQYWdlcywgc2V0U3RhdHVzLCBzZWxlY3RTb3J0QnksIHNlbGVjdFBhZ2UsIHJlbW92ZVBhZ2VzLCB9IGZyb20gXCIuLi9wYWdlc1NsaWNlXCI7XG52YXIgUGFnZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9hID0gdXNlU3RhdGUoZmFsc2UpLCBjb25maXJtYXRpb25Nb2RhbE9wZW4gPSBfYVswXSwgc2V0Q29uZmlybWF0aW9uTW9kYWxPcGVuID0gX2FbMV07XG4gICAgdmFyIGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcbiAgICB2YXIgc3RhdHVzID0gdXNlU2VsZWN0b3Ioc2VsZWN0U3RhdHVzKTtcbiAgICB2YXIgbG9hZGluZyA9IHVzZVNlbGVjdG9yKHNlbGVjdExvYWRpbmcpO1xuICAgIHZhciBmaWx0ZXJCeSA9IHVzZVNlbGVjdG9yKHNlbGVjdEZpbHRlckJ5KTtcbiAgICB2YXIgc29ydEJ5ID0gdXNlU2VsZWN0b3Ioc2VsZWN0U29ydEJ5KTtcbiAgICB2YXIgc2VsZWN0ZWRQYWdlcyA9IHVzZVNlbGVjdG9yKHNlbGVjdFNlbGVjdGVkUGFnZXMpO1xuICAgIHZhciBwYWdlcyA9IHVzZVNlbGVjdG9yKHNlbGVjdFBhZ2VzKTtcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBkb2N1bWVudC50aXRsZSA9IFwiSGlzdG9yeSB8IFBhZ3NlclwiO1xuICAgICAgICBkaXNwYXRjaChmZXRjaFBhZ2VzKFwiaGlzdG9yeVwiLCBmaWx0ZXJCeSkpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZGlzcGF0Y2goc2V0U3RhdHVzKFwibm9ybWFsXCIpKTtcbiAgICAgICAgfTtcbiAgICB9LCBbXSk7XG4gICAgdmFyIHJlbmRlckRyb3Bkb3ducyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGZpbHRlckJ5ID09PSBcImFsbFwiICYmIHBhZ2VzLmxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICBpZiAoc3RhdHVzID09PSBcIm5vcm1hbFwiKVxuICAgICAgICAgICAgcmV0dXJuIChfanN4cyhEcm9wZG93biwgX19hc3NpZ24oeyBudW06IFwiMVwiLCBzZWxlY3Q6IGZpbHRlckJ5LCBvbkNoYW5nZTogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goZmV0Y2hQYWdlcyhcImhpc3RvcnlcIiwgbmFtZSwgc29ydEJ5KSk7XG4gICAgICAgICAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IFwiZGF0YS1yb2xlLW5hbWVcIjogXCJidG4tbmFtZVwiLCBcImRhdGEtaWNvbi1jbGFzc1wiOiBcImZhIGZhLWZpbHRlclwiIH0sIHsgY2hpbGRyZW46IFwiRmlsdGVyIEJ5XCIgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcIml0ZW1cIiwgXCJkYXRhLW5hbWVcIjogXCJhbGxcIiB9LCB7IGNoaWxkcmVuOiBcIkFsbCBQYWdlc1wiIH0pKSwgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IFwiZGF0YS1yb2xlLW5hbWVcIjogXCJpdGVtXCIsIFwiZGF0YS1uYW1lXCI6IFwicHJpdmF0ZVwiIH0sIHsgY2hpbGRyZW46IFwiUHJpdmF0ZSBQYWdlc1wiIH0pKSwgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IFwiZGF0YS1yb2xlLW5hbWVcIjogXCJpdGVtXCIsIFwiZGF0YS1uYW1lXCI6IFwicHVibGljXCIgfSwgeyBjaGlsZHJlbjogXCJQdWJsaWMgUGFnZXNcIiB9KSldIH0pKSk7XG4gICAgfTtcbiAgICB2YXIgcmVuZGVyTGlzdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHBhZ2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHJldHVybiBwYWdlcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY29sLWxnLTEtb2YtNSBjb2wtbWQtMS1vZi01IGNvbC1zbS0xLW9mLTMgY29sLXhzLTEtb2YtMiBjb2wteHhzLTEtb2YtMVwiIH0sIHsgY2hpbGRyZW46IF9qc3goUGFnZVRodW1ibmFpbCwgeyBpZDogaXRlbS5pZCwgc2VsZWN0ZWQ6IHNlbGVjdGVkUGFnZXMuaW5kZXhPZihpdGVtLmlkKSA+IC0xID8gdHJ1ZSA6IGZhbHNlLCBzdGF0dXM6IHN0YXR1cywgYnJpZWZEZXM6IGl0ZW0uY29udGVudHMuYnJpZWZEZXMsIHRpdGxlOiBpdGVtLmNvbnRlbnRzLnRpdGxlLCBpbWFnZTogaXRlbS5waG90by5zZWN1cmVfdXJsLCB0YXJnZXQ6IFwiX2JsYW5rXCIsIHVybDogaXRlbS51cmwsIHR5cGU6IGl0ZW0udHlwZSwgbGFiZWw6IGl0ZW0uZGF0ZVZpc2l0ZWQsIGF1dGhvclVzZXJuYW1lOiBpdGVtLmF1dGhvci51c2VybmFtZSwgb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT09IFwiZWRpdGluZ1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaChzZWxlY3RQYWdlKGl0ZW0uaWQpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gfSkgfSksIGl0ZW0uaWQpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGZpbHRlckJ5ID09PSBcInB1YmxpY1wiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChfanN4KFwicFwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJhLTEzXCIgfSwgeyBjaGlsZHJlbjogXCJZb3UgZG9uJ3QgaGF2ZSBhbnkgcHVibGljIHBhZ2Ugb24geW91ciBoaXN0b3J5LlwiIH0pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZmlsdGVyQnkgPT09IFwicHJpdmF0ZVwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChfanN4KFwicFwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJhLTEzXCIgfSwgeyBjaGlsZHJlbjogXCJZb3UgZG9uJ3QgaGF2ZSBhbnkgcHJpdmF0ZSBwYWdlIG9uIHlvdXIgaGlzdG9yeS5cIiB9KSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIF9qc3goXCJwXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImEtMTNcIiB9LCB7IGNoaWxkcmVuOiBcIllvdXIgcmVhZGluZyBoaXN0b3J5IGxpc3QgaXMgZW1wdHkuXCIgfSkpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgcmVtb3ZlQnRuID0gc3RhdHVzID09PSBcImVkaXRpbmdcIiAmJiAoX2pzeChcImJ1dHRvblwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJidG4tdGV4dCBidG4tdGV4dC1yZWRcIiwgZGlzYWJsZWQ6IHNlbGVjdGVkUGFnZXMubGVuZ3RoID4gMCA/IGZhbHNlIDogdHJ1ZSwgb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc2V0Q29uZmlybWF0aW9uTW9kYWxPcGVuKHRydWUpO1xuICAgICAgICB9IH0sIHsgY2hpbGRyZW46IFwiUmVtb3ZlXCIgfSkpKTtcbiAgICB2YXIgZG9uZUJ0biA9IHN0YXR1cyA9PT0gXCJlZGl0aW5nXCIgJiYgKF9qc3goXCJidXR0b25cIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiYnRuLXRleHRcIiwgb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZGlzcGF0Y2goc2V0U3RhdHVzKFwibm9ybWFsXCIpKTtcbiAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBcIkRvbmVcIiB9KSkpO1xuICAgIHZhciBlZGl0QnRuID0gcGFnZXMubGVuZ3RoID4gMCAmJiBzdGF0dXMgPT09IFwibm9ybWFsXCIgJiYgKF9qc3hzKFwiYnV0dG9uXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImJ0bi10ZXh0XCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRpc3BhdGNoKHNldFN0YXR1cyhcImVkaXRpbmdcIikpO1xuICAgICAgICB9IH0sIHsgY2hpbGRyZW46IFtcIkVkaXQgXCIsIF9qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLXBlbmNpbC1zcXVhcmVcIiwgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiB9KV0gfSkpKTtcbiAgICByZXR1cm4gKF9qc3hzKFJlYWN0LkZyYWdtZW50LCB7IGNoaWxkcmVuOiBbX2pzeChDb25maXJtTW9kYWwsIF9fYXNzaWduKHsgaGVhZGVyOiBcIlJlbW92ZSBGcm9tIEhpc3Rvcnk/XCIsIG9wZW46IGNvbmZpcm1hdGlvbk1vZGFsT3Blbiwgb25Db25maXJtOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKHJlbW92ZVBhZ2VzKFwiaGlzdG9yeVwiKSk7XG4gICAgICAgICAgICAgICAgICAgIHNldENvbmZpcm1hdGlvbk1vZGFsT3BlbihmYWxzZSk7XG4gICAgICAgICAgICAgICAgfSwgb25DYW5jZWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0Q29uZmlybWF0aW9uTW9kYWxPcGVuKGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9IH0sIHsgY2hpbGRyZW46IF9qc3hzKFwicFwiLCB7IGNoaWxkcmVuOiBbXCJBcmUgeW91IHN1cmUgdGhhdCB5b3Ugd2FudCB0byByZW1vdmUgdGhlIHNlbGVjdGVkIHBhZ2VcIiwgc2VsZWN0ZWRQYWdlcy5sZW5ndGggPiAxID8gXCJzXCIgOiBcIlwiLCBcIiBmcm9tIHlvdXIgaGlzdG9yeT8gXCIsIF9qc3goXCJiclwiLCB7fSksIFwiIFlvdSBoYXZlIHNlbGVjdGVkIFwiLCBzZWxlY3RlZFBhZ2VzLmxlbmd0aCwgXCIgcGFnZVwiLCBzZWxlY3RlZFBhZ2VzLmxlbmd0aCA+IDEgPyBcInNcIiA6IFwiXCIsIFwiIGFuZCB5b3UgY2Fubm90IHVuZG8gdGhlIGFjdGlvbi5cIl0gfSkgfSkpLCBfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJyb3dcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeChIZWFkZXIsIHt9KSwgX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdlwiIH0sIHsgY2hpbGRyZW46IFtfanN4KFwiaDNcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGluZy10ZXJ0aWFyeVwiIH0sIHsgY2hpbGRyZW46IFwiWW91ciBSZWFkaW5nIEhpc3Rvcnk6XCIgfSkpLCAhbG9hZGluZyAmJiAoX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdl9fYWN0aW9uc1wiIH0sIHsgY2hpbGRyZW46IFtyZW5kZXJEcm9wZG93bnMoKSwgcmVtb3ZlQnRuLCBkb25lQnRuLCBlZGl0QnRuXSB9KSkpXSB9KSksIGxvYWRpbmcgJiYgKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY2VudGVyLWNvbnRlbnQgbWFyZ2luLXRvcC0xXCIgfSwgeyBjaGlsZHJlbjogX2pzeChMb2FkaW5nLCB7fSkgfSkpKSwgIWxvYWRpbmcgJiYgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJyb3dcIiB9LCB7IGNoaWxkcmVuOiByZW5kZXJMaXN0KCkgfSkpXSB9KSldIH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBQYWdlcztcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1dGlsLCByZXF1ZXN0IH0gZnJvbSBcIkBwYWdzZXIvY29tbW9uXCI7XG5pbXBvcnQgeyBMb2FkaW5nIH0gZnJvbSBcIkBwYWdzZXIvcmV1c2FibGVcIjtcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4vSGVhZGVyXCI7XG52YXIgQ29tbWVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9hID0gdXNlU3RhdGUoW10pLCBjb21tZW50cyA9IF9hWzBdLCBzZXRDb21tZW50cyA9IF9hWzFdO1xuICAgIHZhciBfYiA9IHVzZVN0YXRlKGZhbHNlKSwgbG9hZGluZyA9IF9iWzBdLCBzZXRMb2FkaW5nID0gX2JbMV07XG4gICAgLy8gU2VuZHMgYSByZXF1ZXN0IHRvIHNlcnZlciB0byBmZXRjaCB0aGUgbGlzdCBvZiBjb21tZW50cyB1c2VyIGhhcyB3cml0dGVuXG4gICAgdmFyIGZldGNoQ29tbWVudHMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcmVzcG9uc2U7XG4gICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHJlcXVlc3QuZ2V0KFwiL2NvbW1lbnRzL2hpc3RvcnlcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dGg6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IChfYS5zZW50KCkpO1xuICAgICAgICAgICAgICAgICAgICBzZXRDb21tZW50cyhyZXNwb25zZS5jb21tZW50cyk7XG4gICAgICAgICAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qL107XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pOyB9O1xuICAgIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZldGNoQ29tbWVudHMoKTtcbiAgICB9LCBbXSk7XG4gICAgLy8gUmVuZGVyIGxpc3Qgb2YgY29tbWVudHMgdXNlciBoYXMgd3JpdHRlblxuICAgIHZhciByZW5kZXJDb21tZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGNvbW1lbnRzLm1hcChmdW5jdGlvbiAoYykge1xuICAgICAgICAgICAgLy8gRGVjaWRlIHdoYXQgdG8gc2hvdyBmb3IgdGhlIGNvbW1lbnQgaGlzdG9yeSBsYWJlbFxuICAgICAgICAgICAgdmFyIGxhYmVsVGV4dDtcbiAgICAgICAgICAgIGlmICghYy5yZXBseS5uYW1lKVxuICAgICAgICAgICAgICAgIGxhYmVsVGV4dCA9IChfanN4cyhcInNwYW5cIiwgeyBjaGlsZHJlbjogW1wiWW91IGNvbW1lbnRlZCBvbiBwYWdlXCIsIFwiIFwiLCBfanN4KFwic3Ryb25nXCIsIHsgY2hpbGRyZW46IF9qc3goXCJhXCIsIF9fYXNzaWduKHsgaHJlZjogdXRpbC5wYWdlVXJsKGMucGFnZS51cmwsIGMucGFnZS5hdXRob3IudXNlcm5hbWUsIGMucGFnZS50eXBlKSwgdGFyZ2V0OiBcIl9ibGFua1wiIH0sIHsgY2hpbGRyZW46IGMucGFnZS50aXRsZSB9KSkgfSldIH0pKTtcbiAgICAgICAgICAgIGlmIChjLnJlcGx5Lm5hbWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmFtZV8xID0gYy5yZXBseS5uYW1lID09PSBcInlvdXJzZWxmXCIgPyAoX2pzeChcInNwYW5cIiwgeyBjaGlsZHJlbjogXCJ5b3Vyc2VsZlwiIH0pKSA6IChfanN4KFwic3Ryb25nXCIsIHsgY2hpbGRyZW46IF9qc3goXCJhXCIsIF9fYXNzaWduKHsgaHJlZjogXCIvdXNlcnMvXCIuY29uY2F0KGMucmVwbHkudXNlcm5hbWUpLCB0YXJnZXQ6IFwiX2JsYW5rXCIgfSwgeyBjaGlsZHJlbjogYy5yZXBseS5uYW1lIH0pKSB9KSk7XG4gICAgICAgICAgICAgICAgbGFiZWxUZXh0ID0gKF9qc3hzKFwic3BhblwiLCB7IGNoaWxkcmVuOiBbXCJZb3UgcmVwbGllZCB0byBcIiwgbmFtZV8xLCBcIiBvbiBwYWdlXCIsIFwiIFwiLCBfanN4KFwic3Ryb25nXCIsIHsgY2hpbGRyZW46IF9qc3goXCJhXCIsIF9fYXNzaWduKHsgaHJlZjogdXRpbC5wYWdlVXJsKGMucGFnZS51cmwsIGMucGFnZS5hdXRob3IudXNlcm5hbWUsIGMucGFnZS50eXBlKSwgdGFyZ2V0OiBcIl9ibGFua1wiIH0sIHsgY2hpbGRyZW46IGMucGFnZS50aXRsZSB9KSkgfSldIH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoX2pzeHMoUmVhY3QuRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4KFwicFwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJjb21tZW50LWJyaWVmX19sYWJlbFwiIH0sIHsgY2hpbGRyZW46IGxhYmVsVGV4dCB9KSksIF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbW1lbnQtYnJpZWZcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeHMoXCJkaXZcIiwgeyBjaGlsZHJlbjogW2MudGV4dCwgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJjb21tZW50LWJyaWVmX19kYXRlXCIgfSwgeyBjaGlsZHJlbjogYy5kYXRlIH0pKV0gfSksIF9qc3goXCJkaXZcIiwgeyBjaGlsZHJlbjogX2pzeChcImFcIiwgX19hc3NpZ24oeyBocmVmOiB1dGlsLnBhZ2VVcmwoYy5wYWdlLnVybCwgYy5wYWdlLmF1dGhvci51c2VybmFtZSwgYy5wYWdlLnR5cGUpLCBjbGFzc05hbWU6IFwiYnRuLWkgY29tbWVudC1icmllZl9fZ29cIiB9LCB7IGNoaWxkcmVuOiBfanN4KFwiaVwiLCB7IGNsYXNzTmFtZTogXCJmYSBmYS1hcnJvdy1jaXJjbGUtcmlnaHRcIiwgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiB9KSB9KSkgfSldIH0pKV0gfSwgYy5pZCkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiAoX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwicm93XCIgfSwgeyBjaGlsZHJlbjogW19qc3goSGVhZGVyLCB7fSksIGxvYWRpbmcgJiYgKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY2VudGVyLWNvbnRlbnQgbWFyZ2luLXRvcC0xXCIgfSwgeyBjaGlsZHJlbjogX2pzeChMb2FkaW5nLCB7fSkgfSkpKSwgIWxvYWRpbmcgJiYgcmVuZGVyQ29tbWVudHMoKV0gfSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBDb21tZW50cztcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQYWdlVGh1bWJuYWlsIGZyb20gXCIuLi8uLi8uLi9wYXJ0aWFscy9QYWdlVGh1bWJuYWlsXCI7XG5pbXBvcnQgeyBEcm9wZG93biwgQ29uZmlybU1vZGFsLCBMb2FkaW5nIH0gZnJvbSBcIkBwYWdzZXIvcmV1c2FibGVcIjtcbmltcG9ydCB7IHVzZURpc3BhdGNoLCB1c2VTZWxlY3RvciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IHsgc2VsZWN0U3RhdHVzLCBzZWxlY3RGaWx0ZXJCeSwgc2VsZWN0TG9hZGluZywgc2VsZWN0U2VsZWN0ZWRQYWdlcywgc2VsZWN0UGFnZXMsIGZldGNoUGFnZXMsIHNldFN0YXR1cywgc2VsZWN0U29ydEJ5LCBzZWxlY3RQYWdlLCByZW1vdmVQYWdlcywgfSBmcm9tIFwiLi4vcGFnZXNTbGljZVwiO1xudmFyIFJlYWRMYXRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX2EgPSB1c2VTdGF0ZShmYWxzZSksIGNvbmZpcm1hdGlvbk1vZGFsT3BlbiA9IF9hWzBdLCBzZXRDb25maXJtYXRpb25Nb2RhbE9wZW4gPSBfYVsxXTtcbiAgICB2YXIgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuICAgIHZhciBzdGF0dXMgPSB1c2VTZWxlY3RvcihzZWxlY3RTdGF0dXMpO1xuICAgIHZhciBsb2FkaW5nID0gdXNlU2VsZWN0b3Ioc2VsZWN0TG9hZGluZyk7XG4gICAgdmFyIGZpbHRlckJ5ID0gdXNlU2VsZWN0b3Ioc2VsZWN0RmlsdGVyQnkpO1xuICAgIHZhciBzb3J0QnkgPSB1c2VTZWxlY3RvcihzZWxlY3RTb3J0QnkpO1xuICAgIHZhciBzZWxlY3RlZFBhZ2VzID0gdXNlU2VsZWN0b3Ioc2VsZWN0U2VsZWN0ZWRQYWdlcyk7XG4gICAgdmFyIHBhZ2VzID0gdXNlU2VsZWN0b3Ioc2VsZWN0UGFnZXMpO1xuICAgIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRvY3VtZW50LnRpdGxlID0gXCJSZWFkaW5nIExpc3QgfCBQYWdzZXJcIjtcbiAgICAgICAgZGlzcGF0Y2goZmV0Y2hQYWdlcyhcInJlYWQtbGF0ZXJcIiwgZmlsdGVyQnksIHNvcnRCeSkpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZGlzcGF0Y2goc2V0U3RhdHVzKFwibm9ybWFsXCIpKTtcbiAgICAgICAgfTtcbiAgICB9LCBbXSk7XG4gICAgdmFyIHJlbmRlckRyb3Bkb3ducyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGZpbHRlckJ5ID09PSBcImFsbFwiICYmIHBhZ2VzLmxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICBpZiAoc3RhdHVzID09PSBcIm5vcm1hbFwiKVxuICAgICAgICAgICAgcmV0dXJuIChfanN4cyhSZWFjdC5GcmFnbWVudCwgeyBjaGlsZHJlbjogW3BhZ2VzLmxlbmd0aCA+IDEgJiYgKF9qc3hzKERyb3Bkb3duLCBfX2Fzc2lnbih7IG51bTogXCIxXCIsIHNlbGVjdDogc29ydEJ5LCBvbkNoYW5nZTogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZXRjaFBhZ2VzKFwicmVhZC1sYXRlclwiLCBmaWx0ZXJCeSwgbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IH0sIHsgY2hpbGRyZW46IFtfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcImJ0bi1uYW1lXCIsIFwiZGF0YS1pY29uLWNsYXNzXCI6IFwiZmEgZmEtc29ydC1hbW91bnQtYXNjXCIgfSwgeyBjaGlsZHJlbjogXCJTb3J0IEJ5XCIgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcIml0ZW1cIiwgXCJkYXRhLW5hbWVcIjogXCJkYXRlLWFkZGVkLWFzY1wiIH0sIHsgY2hpbGRyZW46IFwiRGF0ZSBBZGRlZCAtIE5ld2VzdCBmaXJzdFwiIH0pKSwgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IFwiZGF0YS1yb2xlLW5hbWVcIjogXCJpdGVtXCIsIFwiZGF0YS1uYW1lXCI6IFwiZGF0ZS1hZGRlZC1kZXNjXCIgfSwgeyBjaGlsZHJlbjogXCJEYXRlIEFkZGVkIC0gT2xkZXN0IGZpcnN0XCIgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcIml0ZW1cIiwgXCJkYXRhLW5hbWVcIjogXCJkYXRlLXB1Ymxpc2hlZC1hc2NcIiB9LCB7IGNoaWxkcmVuOiBcIkRhdGUgUHVibGlzaGVkIC0gTmV3ZXN0IGZpcnN0XCIgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcIml0ZW1cIiwgXCJkYXRhLW5hbWVcIjogXCJkYXRlLXB1Ymxpc2hlZC1kZXNjXCIgfSwgeyBjaGlsZHJlbjogXCJEYXRlIFB1Ymxpc2hlZCAtIE9sZGVzdCBmaXJzdFwiIH0pKV0gfSkpKSwgX2pzeHMoRHJvcGRvd24sIF9fYXNzaWduKHsgbnVtOiBcIjJcIiwgc2VsZWN0OiBmaWx0ZXJCeSwgb25DaGFuZ2U6IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goZmV0Y2hQYWdlcyhcInJlYWQtbGF0ZXJcIiwgbmFtZSwgc29ydEJ5KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IH0sIHsgY2hpbGRyZW46IFtfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcImJ0bi1uYW1lXCIsIFwiZGF0YS1pY29uLWNsYXNzXCI6IFwiZmEgZmEtZmlsdGVyXCIgfSwgeyBjaGlsZHJlbjogXCJGaWx0ZXIgQnlcIiB9KSksIF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBcImRhdGEtcm9sZS1uYW1lXCI6IFwiaXRlbVwiLCBcImRhdGEtbmFtZVwiOiBcImFsbFwiIH0sIHsgY2hpbGRyZW46IFwiQWxsIFBhZ2VzXCIgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcIml0ZW1cIiwgXCJkYXRhLW5hbWVcIjogXCJwcml2YXRlXCIgfSwgeyBjaGlsZHJlbjogXCJQcml2YXRlIFBhZ2VzXCIgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcIml0ZW1cIiwgXCJkYXRhLW5hbWVcIjogXCJwdWJsaWNcIiB9LCB7IGNoaWxkcmVuOiBcIlB1YmxpYyBQYWdlc1wiIH0pKV0gfSkpXSB9KSk7XG4gICAgfTtcbiAgICB2YXIgcmVuZGVyTGlzdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHBhZ2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHJldHVybiBwYWdlcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY29sLWxnLTEtb2YtNSBjb2wtbWQtMS1vZi01IGNvbC1zbS0xLW9mLTMgY29sLXhzLTEtb2YtMiBjb2wteHhzLTEtb2YtMVwiIH0sIHsgY2hpbGRyZW46IF9qc3goUGFnZVRodW1ibmFpbCwgeyBpZDogaXRlbS5pZCwgc2VsZWN0ZWQ6IHNlbGVjdGVkUGFnZXMuaW5kZXhPZihpdGVtLmlkKSA+IC0xID8gdHJ1ZSA6IGZhbHNlLCBzdGF0dXM6IHN0YXR1cywgYnJpZWZEZXM6IGl0ZW0uY29udGVudHMuYnJpZWZEZXMsIHRpdGxlOiBpdGVtLmNvbnRlbnRzLnRpdGxlLCBpbWFnZTogaXRlbS5waG90by5zZWN1cmVfdXJsLCB0YXJnZXQ6IFwiX2JsYW5rXCIsIHVybDogaXRlbS51cmwsIHR5cGU6IGl0ZW0udHlwZSwgYXV0aG9yVXNlcm5hbWU6IGl0ZW0uYXV0aG9yLnVzZXJuYW1lLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gXCJlZGl0aW5nXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdFBhZ2UoaXRlbS5pZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IH0pIH0pLCBpdGVtLmlkKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChmaWx0ZXJCeSA9PT0gXCJwdWJsaWNcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiAoX2pzeChcInBcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiYS0xM1wiIH0sIHsgY2hpbGRyZW46IFwiWW91IGRvbid0IGhhdmUgYW55IHB1YmxpYyBwYWdlIG9uIHlvdXIgcmVhZCBsYXRlciBsaXN0LlwiIH0pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZmlsdGVyQnkgPT09IFwicHJpdmF0ZVwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChfanN4KFwicFwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJhLTEzXCIgfSwgeyBjaGlsZHJlbjogXCJZb3UgZG9uJ3QgaGF2ZSBhbnkgcHJpdmF0ZSBwYWdlIG9uIHlvdXIgcmVhZCBsYXRlciBsaXN0LlwiIH0pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gX2pzeChcInBcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiYS0xM1wiIH0sIHsgY2hpbGRyZW46IFwiWW91ciByZWFkIGxhdGVyIGxpc3QgaXMgZW1wdHkuXCIgfSkpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgcmVtb3ZlQnRuID0gc3RhdHVzID09PSBcImVkaXRpbmdcIiAmJiAoX2pzeChcImJ1dHRvblwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJidG4tdGV4dCBidG4tdGV4dC1yZWRcIiwgZGlzYWJsZWQ6IHNlbGVjdGVkUGFnZXMubGVuZ3RoID4gMCA/IGZhbHNlIDogdHJ1ZSwgb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc2V0Q29uZmlybWF0aW9uTW9kYWxPcGVuKHRydWUpO1xuICAgICAgICB9IH0sIHsgY2hpbGRyZW46IFwiUmVtb3ZlXCIgfSkpKTtcbiAgICB2YXIgZG9uZUJ0biA9IHN0YXR1cyA9PT0gXCJlZGl0aW5nXCIgJiYgKF9qc3goXCJidXR0b25cIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiYnRuLXRleHRcIiwgb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZGlzcGF0Y2goc2V0U3RhdHVzKFwibm9ybWFsXCIpKTtcbiAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBcIkRvbmVcIiB9KSkpO1xuICAgIHZhciBlZGl0QnRuID0gcGFnZXMubGVuZ3RoID4gMCAmJiBzdGF0dXMgPT09IFwibm9ybWFsXCIgJiYgKF9qc3hzKFwiYnV0dG9uXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImJ0bi10ZXh0XCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRpc3BhdGNoKHNldFN0YXR1cyhcImVkaXRpbmdcIikpO1xuICAgICAgICB9IH0sIHsgY2hpbGRyZW46IFtcIkVkaXQgXCIsIF9qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLXBlbmNpbC1zcXVhcmVcIiwgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiB9KV0gfSkpKTtcbiAgICByZXR1cm4gKF9qc3hzKFJlYWN0LkZyYWdtZW50LCB7IGNoaWxkcmVuOiBbX2pzeChDb25maXJtTW9kYWwsIF9fYXNzaWduKHsgaGVhZGVyOiBcIlJlbW92ZSBmcm9tIHRoZSBsaXN0P1wiLCBvcGVuOiBjb25maXJtYXRpb25Nb2RhbE9wZW4sIG9uQ29uZmlybTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaChyZW1vdmVQYWdlcyhcInJlYWQtbGF0ZXJcIikpO1xuICAgICAgICAgICAgICAgICAgICBzZXRDb25maXJtYXRpb25Nb2RhbE9wZW4oZmFsc2UpO1xuICAgICAgICAgICAgICAgIH0sIG9uQ2FuY2VsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldENvbmZpcm1hdGlvbk1vZGFsT3BlbihmYWxzZSk7XG4gICAgICAgICAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBfanN4cyhcInBcIiwgeyBjaGlsZHJlbjogW1wiQXJlIHlvdSBzdXJlIHRoYXQgeW91IHdhbnQgdG8gcmVtb3ZlIHRoZSBzZWxlY3RlZCBwYWdlXCIsIHNlbGVjdGVkUGFnZXMubGVuZ3RoID4gMSA/IFwic1wiIDogXCJcIiwgXCIgZnJvbSB5b3VyIHJlYWQgbGF0ZXIgbGlzdD9cIiwgXCIgXCIsIF9qc3goXCJiclwiLCB7fSksIFwiIFlvdSBoYXZlIHNlbGVjdGVkIFwiLCBzZWxlY3RlZFBhZ2VzLmxlbmd0aCwgXCIgcGFnZVwiLCBzZWxlY3RlZFBhZ2VzLmxlbmd0aCA+IDEgPyBcInNcIiA6IFwiXCIsIFwiIGFuZCB5b3UgY2Fubm90IHVuZG8gdGhlIGFjdGlvbi5cIl0gfSkgfSkpLCBfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJyb3dcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdlwiIH0sIHsgY2hpbGRyZW46IFtfanN4KFwiaDNcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGluZy10ZXJ0aWFyeVwiIH0sIHsgY2hpbGRyZW46IFwiWW91ciBSZWFkIExhdGVyIExpc3Q6XCIgfSkpLCAhbG9hZGluZyAmJiAoX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdl9fYWN0aW9uc1wiIH0sIHsgY2hpbGRyZW46IFtyZW5kZXJEcm9wZG93bnMoKSwgcmVtb3ZlQnRuLCBkb25lQnRuLCBlZGl0QnRuXSB9KSkpXSB9KSksIGxvYWRpbmcgJiYgKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY2VudGVyLWNvbnRlbnQgbWFyZ2luLXRvcC0xXCIgfSwgeyBjaGlsZHJlbjogX2pzeChMb2FkaW5nLCB7fSkgfSkpKSwgIWxvYWRpbmcgJiYgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJyb3dcIiB9LCB7IGNoaWxkcmVuOiByZW5kZXJMaXN0KCkgfSkpXSB9KSldIH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBSZWFkTGF0ZXI7XG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQYWdlVGh1bWJuYWlsIGZyb20gXCIuLi8uLi8uLi9wYXJ0aWFscy9QYWdlVGh1bWJuYWlsXCI7XG5pbXBvcnQgeyBEcm9wZG93biwgTG9hZGluZyB9IGZyb20gXCJAcGFnc2VyL3JldXNhYmxlXCI7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgdXNlU2VsZWN0b3IgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7IHNlbGVjdFN0YXR1cywgc2VsZWN0RmlsdGVyQnksIHNlbGVjdExvYWRpbmcsIHNlbGVjdFNlbGVjdGVkUGFnZXMsIHNlbGVjdFBhZ2VzLCBmZXRjaFBhZ2VzLCBzZWxlY3RTb3J0QnksIH0gZnJvbSBcIi4uL3BhZ2VzU2xpY2VcIjtcbnZhciBMaWtlZFBhZ2VzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG4gICAgdmFyIHN0YXR1cyA9IHVzZVNlbGVjdG9yKHNlbGVjdFN0YXR1cyk7XG4gICAgdmFyIGxvYWRpbmcgPSB1c2VTZWxlY3RvcihzZWxlY3RMb2FkaW5nKTtcbiAgICB2YXIgZmlsdGVyQnkgPSB1c2VTZWxlY3RvcihzZWxlY3RGaWx0ZXJCeSk7XG4gICAgdmFyIHNvcnRCeSA9IHVzZVNlbGVjdG9yKHNlbGVjdFNvcnRCeSk7XG4gICAgdmFyIHNlbGVjdGVkUGFnZXMgPSB1c2VTZWxlY3RvcihzZWxlY3RTZWxlY3RlZFBhZ2VzKTtcbiAgICB2YXIgcGFnZXMgPSB1c2VTZWxlY3RvcihzZWxlY3RQYWdlcyk7XG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBcIkxpa2VkIFBhZ2VzIHwgUGFnc2VyXCI7XG4gICAgICAgIGRpc3BhdGNoKGZldGNoUGFnZXMoXCJsaWtlZC1wYWdlc1wiLCBmaWx0ZXJCeSkpO1xuICAgIH0sIFtdKTtcbiAgICB2YXIgcmVuZGVyRHJvcGRvd25zID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoZmlsdGVyQnkgPT09IFwiYWxsXCIgJiYgcGFnZXMubGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgIHJldHVybiAoX2pzeHMoRHJvcGRvd24sIF9fYXNzaWduKHsgbnVtOiBcIjFcIiwgc2VsZWN0OiBmaWx0ZXJCeSwgb25DaGFuZ2U6IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgZGlzcGF0Y2goZmV0Y2hQYWdlcyhcImxpa2VkLXBhZ2VzXCIsIG5hbWUsIHNvcnRCeSkpO1xuICAgICAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IFwiZGF0YS1yb2xlLW5hbWVcIjogXCJidG4tbmFtZVwiLCBcImRhdGEtaWNvbi1jbGFzc1wiOiBcImZhIGZhLWZpbHRlclwiIH0sIHsgY2hpbGRyZW46IFwiRmlsdGVyIEJ5XCIgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcIml0ZW1cIiwgXCJkYXRhLW5hbWVcIjogXCJhbGxcIiB9LCB7IGNoaWxkcmVuOiBcIkFsbCBQYWdlc1wiIH0pKSwgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IFwiZGF0YS1yb2xlLW5hbWVcIjogXCJpdGVtXCIsIFwiZGF0YS1uYW1lXCI6IFwicHJpdmF0ZVwiIH0sIHsgY2hpbGRyZW46IFwiUHJpdmF0ZSBQYWdlc1wiIH0pKSwgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IFwiZGF0YS1yb2xlLW5hbWVcIjogXCJpdGVtXCIsIFwiZGF0YS1uYW1lXCI6IFwicHVibGljXCIgfSwgeyBjaGlsZHJlbjogXCJQdWJsaWMgUGFnZXNcIiB9KSldIH0pKSk7XG4gICAgfTtcbiAgICB2YXIgcmVuZGVyTGlzdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHBhZ2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHJldHVybiBwYWdlcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY29sLWxnLTEtb2YtNSBjb2wtbWQtMS1vZi01IGNvbC1zbS0xLW9mLTMgY29sLXhzLTEtb2YtMiBjb2wteHhzLTEtb2YtMVwiIH0sIHsgY2hpbGRyZW46IF9qc3goUGFnZVRodW1ibmFpbCwgeyBpZDogaXRlbS5pZCwgc3RhdHVzOiBcIm5vcm1hbFwiLCBicmllZkRlczogaXRlbS5jb250ZW50cy5icmllZkRlcywgdGl0bGU6IGl0ZW0uY29udGVudHMudGl0bGUsIGltYWdlOiBpdGVtLnBob3RvLnNlY3VyZV91cmwsIHRhcmdldDogXCJfYmxhbmtcIiwgdXJsOiBpdGVtLnVybCwgdHlwZTogaXRlbS50eXBlLCBhdXRob3JVc2VybmFtZTogaXRlbS5hdXRob3IudXNlcm5hbWUgfSkgfSksIGl0ZW0uaWQpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGZpbHRlckJ5ID09PSBcInB1YmxpY1wiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9qc3goXCJwXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImEtMTNcIiB9LCB7IGNoaWxkcmVuOiBcIllvdSBoYXZlbid0IGxpa2VkIGFueSBwdWJsaWMgcGFnZSB5ZXQuXCIgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZpbHRlckJ5ID09PSBcInByaXZhdGVcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBfanN4KFwicFwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJhLTEzXCIgfSwgeyBjaGlsZHJlbjogXCJZb3UgaGF2ZW4ndCBsaWtlZCBhbnkgcHJpdmF0ZSBwYWdlIHlldC4gXCIgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIF9qc3goXCJwXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImEtMTNcIiB9LCB7IGNoaWxkcmVuOiBcIllvdXIgaGF2ZW4ndCBsaWtlZCBhbnkgcGFnZSB5ZXQuXCIgfSkpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gKF9qc3goUmVhY3QuRnJhZ21lbnQsIHsgY2hpbGRyZW46IF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInJvd1wiIH0sIHsgY2hpbGRyZW46IFtfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJoZWFkZXItbmF2XCIgfSwgeyBjaGlsZHJlbjogW19qc3goXCJoM1wiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJoZWFkaW5nLXRlcnRpYXJ5XCIgfSwgeyBjaGlsZHJlbjogXCJQYWdlcyBZb3UgSGF2ZSBMaWtlZDpcIiB9KSksICFsb2FkaW5nICYmIChfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImhlYWRlci1uYXZfX2FjdGlvbnNcIiB9LCB7IGNoaWxkcmVuOiByZW5kZXJEcm9wZG93bnMoKSB9KSkpXSB9KSksIGxvYWRpbmcgJiYgKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY2VudGVyLWNvbnRlbnQgbWFyZ2luLXRvcC0xXCIgfSwgeyBjaGlsZHJlbjogX2pzeChMb2FkaW5nLCB7fSkgfSkpKSwgIWxvYWRpbmcgJiYgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJyb3dcIiB9LCB7IGNoaWxkcmVuOiByZW5kZXJMaXN0KCkgfSkpXSB9KSkgfSkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IExpa2VkUGFnZXM7XG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IExpbmsgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgeyBzZXRTZWN0aW9uLCBzZWxlY3RTZWN0aW9uIH0gZnJvbSBcIi4uL3NpZGUtbmF2L3NpZGVOYXZTbGljZVwiO1xudmFyIEhlYWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuICAgIHZhciBzZWN0aW9uID0gdXNlU2VsZWN0b3Ioc2VsZWN0U2VjdGlvbik7XG4gICAgcmV0dXJuIChfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJsaW5lZC1idG5zIG1hcmdpbi1ib3R0b20tMiBtYXJnaW4tdG9wLTFcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeHMoTGluaywgX19hc3NpZ24oeyB0bzogXCIvdS9wYWdlcy9wdWJsaXNoZWRcIiwgY2xhc3NOYW1lOiBzZWN0aW9uID09PSBcInBhZ2VzL3B1Ymxpc2hlZFwiXG4gICAgICAgICAgICAgICAgICAgID8gXCJidG4tbGluZWQgYnRuLWxpbmVkLS1hY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICA6IFwiYnRuLWxpbmVkXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKHNldFNlY3Rpb24oXCJwYWdlcy9wdWJsaXNoZWRcIikpOyB9IH0sIHsgY2hpbGRyZW46IFtfanN4KFwiaVwiLCB7IGNsYXNzTmFtZTogXCJmYSBmYS1jaGVjay1zcXVhcmUgbWFyZ2luLXJpZ2h0LTNweFwiIH0pLCBcIiBQdWJsaXNoZWQgUGFnZXNcIl0gfSkpLCBfanN4cyhMaW5rLCBfX2Fzc2lnbih7IHRvOiBcIi91L3BhZ2VzL2RyYWZ0XCIsIGNsYXNzTmFtZTogc2VjdGlvbiA9PT0gXCJwYWdlcy9kcmFmdFwiXG4gICAgICAgICAgICAgICAgICAgID8gXCJidG4tbGluZWQgYnRuLWxpbmVkLS1hY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICA6IFwiYnRuLWxpbmVkXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpc3BhdGNoKHNldFNlY3Rpb24oXCJwYWdlcy9kcmFmdFwiKSk7IH0gfSwgeyBjaGlsZHJlbjogW19qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLWZpbGUgbWFyZ2luLXJpZ2h0LTNweFwiIH0pLCBcIiBEcmFmdCBQYWdlc1wiXSB9KSldIH0pKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgSGVhZGVyO1xuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQYWdlVGh1bWJuYWlsIGZyb20gXCIuLi8uLi8uLi9wYXJ0aWFscy9QYWdlVGh1bWJuYWlsXCI7XG5pbXBvcnQgeyBEcm9wZG93biwgTG9hZGluZyB9IGZyb20gXCJAcGFnc2VyL3JldXNhYmxlXCI7XG5pbXBvcnQgSGVhZGVyIGZyb20gXCIuL0hlYWRlclwiO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgeyBzZWxlY3RGaWx0ZXJCeSwgc2VsZWN0TG9hZGluZywgc2VsZWN0UGFnZXMsIGZldGNoUGFnZXMsIH0gZnJvbSBcIi4uL3BhZ2VzU2xpY2VcIjtcbnZhciBQdWJsaXNoZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcbiAgICB2YXIgbG9hZGluZyA9IHVzZVNlbGVjdG9yKHNlbGVjdExvYWRpbmcpO1xuICAgIHZhciBmaWx0ZXJCeSA9IHVzZVNlbGVjdG9yKHNlbGVjdEZpbHRlckJ5KTtcbiAgICB2YXIgcGFnZXMgPSB1c2VTZWxlY3RvcihzZWxlY3RQYWdlcyk7XG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBcIlB1Ymxpc2hlZCBQYWdlcyB8IFBhZ3NlclwiO1xuICAgICAgICBkaXNwYXRjaChmZXRjaFBhZ2VzKFwidXNlci1wYWdlcy9wdWJsaXNoZWRcIiwgZmlsdGVyQnkpKTtcbiAgICB9LCBbXSk7XG4gICAgdmFyIHJlbmRlckRyb3Bkb3ducyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGZpbHRlckJ5ID09PSBcImFsbFwiICYmIHBhZ2VzLmxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICByZXR1cm4gKF9qc3hzKERyb3Bkb3duLCBfX2Fzc2lnbih7IG51bTogXCIxXCIsIHNlbGVjdDogZmlsdGVyQnksIG9uQ2hhbmdlOiBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgICAgICAgIGRpc3BhdGNoKGZldGNoUGFnZXMoXCJ1c2VyLXBhZ2VzL3B1Ymxpc2hlZFwiLCBuYW1lKSk7XG4gICAgICAgICAgICB9IH0sIHsgY2hpbGRyZW46IFtfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcImJ0bi1uYW1lXCIsIFwiZGF0YS1pY29uLWNsYXNzXCI6IFwiZmEgZmEtZmlsdGVyXCIgfSwgeyBjaGlsZHJlbjogXCJGaWx0ZXIgQnlcIiB9KSksIF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBcImRhdGEtcm9sZS1uYW1lXCI6IFwiaXRlbVwiLCBcImRhdGEtbmFtZVwiOiBcImFsbFwiIH0sIHsgY2hpbGRyZW46IFwiQWxsIFBhZ2VzXCIgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcIml0ZW1cIiwgXCJkYXRhLW5hbWVcIjogXCJwcml2YXRlXCIgfSwgeyBjaGlsZHJlbjogXCJQcml2YXRlIFBhZ2VzXCIgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcIml0ZW1cIiwgXCJkYXRhLW5hbWVcIjogXCJwdWJsaWNcIiB9LCB7IGNoaWxkcmVuOiBcIlB1YmxpYyBQYWdlc1wiIH0pKV0gfSkpKTtcbiAgICB9O1xuICAgIHZhciByZW5kZXJMaXN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAocGFnZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHBhZ2VzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbC1sZy0xLW9mLTUgY29sLW1kLTEtb2YtNSBjb2wtc20tMS1vZi0zIGNvbC14cy0xLW9mLTIgY29sLXh4cy0xLW9mLTFcIiB9LCB7IGNoaWxkcmVuOiBfanN4KFBhZ2VUaHVtYm5haWwsIHsgaWQ6IGl0ZW0uaWQsIHN0YXR1czogXCJub3JtYWxcIiwgYnJpZWZEZXM6IGl0ZW0uY29udGVudHMuYnJpZWZEZXMsIHRpdGxlOiBpdGVtLmNvbnRlbnRzLnRpdGxlLCBpbWFnZTogKF9hID0gaXRlbS5waG90bykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNlY3VyZV91cmwsIHRhcmdldDogXCJfYmxhbmtcIiwgdXJsOiBpdGVtLnVybCwgdHlwZTogaXRlbS50eXBlLCBhdXRob3JVc2VybmFtZTogKF9iID0gaXRlbS5hdXRob3IpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi51c2VybmFtZSB9KSB9KSwgaXRlbS5pZCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoZmlsdGVyQnkgPT09IFwicHVibGljXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKF9qc3goXCJwXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImEtMTNcIiB9LCB7IGNoaWxkcmVuOiBcIllvdSBoYXZlbid0IHB1Ymxpc2hlZCBhbnkgcHVibGljIHBhZ2UgeWV0LlwiIH0pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZmlsdGVyQnkgPT09IFwicHJpdmF0ZVwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChfanN4KFwicFwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJhLTEzXCIgfSwgeyBjaGlsZHJlbjogXCJZb3UgaGF2ZW4ndCBwdWJsaXNoZWQgYW55IHByaXZhdGUgcGFnZSB5ZXQuIFwiIH0pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gX2pzeChcInBcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiYS0xM1wiIH0sIHsgY2hpbGRyZW46IFwiWW91IGhhdmVuJ3QgcHVibGlzaGVkIGFueSBwYWdlIHlldC5cIiB9KSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiAoX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwicm93XCIgfSwgeyBjaGlsZHJlbjogW19qc3goSGVhZGVyLCB7fSksIF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImhlYWRlci1uYXZcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImgzXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImhlYWRpbmctdGVydGlhcnlcIiB9LCB7IGNoaWxkcmVuOiBcIllvdXIgUHVibGlzaGVkIFBhZ2VzOlwiIH0pKSwgIWxvYWRpbmcgJiYgKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdl9fYWN0aW9uc1wiIH0sIHsgY2hpbGRyZW46IHJlbmRlckRyb3Bkb3ducygpIH0pKSldIH0pKSwgbG9hZGluZyAmJiAoX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJjZW50ZXItY29udGVudCBtYXJnaW4tdG9wLTFcIiB9LCB7IGNoaWxkcmVuOiBfanN4KExvYWRpbmcsIHt9KSB9KSkpLCAhbG9hZGluZyAmJiBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInJvd1wiIH0sIHsgY2hpbGRyZW46IHJlbmRlckxpc3QoKSB9KSldIH0pKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgUHVibGlzaGVkO1xuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFBhZ2VUaHVtYm5haWwgZnJvbSBcIi4uLy4uLy4uL3BhcnRpYWxzL1BhZ2VUaHVtYm5haWxcIjtcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4vSGVhZGVyXCI7XG5pbXBvcnQgeyBDb25maXJtTW9kYWwsIExvYWRpbmcgfSBmcm9tIFwiQHBhZ3Nlci9yZXVzYWJsZVwiO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgeyBzZWxlY3RTdGF0dXMsIHNlbGVjdExvYWRpbmcsIHNlbGVjdFNlbGVjdGVkUGFnZXMsIHNlbGVjdFBhZ2VzLCBmZXRjaFBhZ2VzLCBzZXRTdGF0dXMsIHNlbGVjdFBhZ2UsIHJlbW92ZVBhZ2VzLCB9IGZyb20gXCIuLi9wYWdlc1NsaWNlXCI7XG52YXIgUHVibGlzaGVkID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfYSA9IHVzZVN0YXRlKGZhbHNlKSwgY29uZmlybWF0aW9uTW9kYWxPcGVuID0gX2FbMF0sIHNldENvbmZpcm1hdGlvbk1vZGFsT3BlbiA9IF9hWzFdO1xuICAgIHZhciBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG4gICAgdmFyIHN0YXR1cyA9IHVzZVNlbGVjdG9yKHNlbGVjdFN0YXR1cyk7XG4gICAgdmFyIGxvYWRpbmcgPSB1c2VTZWxlY3RvcihzZWxlY3RMb2FkaW5nKTtcbiAgICB2YXIgc2VsZWN0ZWRQYWdlcyA9IHVzZVNlbGVjdG9yKHNlbGVjdFNlbGVjdGVkUGFnZXMpO1xuICAgIHZhciBwYWdlcyA9IHVzZVNlbGVjdG9yKHNlbGVjdFBhZ2VzKTtcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBkb2N1bWVudC50aXRsZSA9IFwiRHJhZnQgUGFnZXMgfCBQYWdzZXJcIjtcbiAgICAgICAgZGlzcGF0Y2goZmV0Y2hQYWdlcyhcInVzZXItcGFnZXMvZHJhZnRcIikpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZGlzcGF0Y2goc2V0U3RhdHVzKFwibm9ybWFsXCIpKTtcbiAgICAgICAgfTtcbiAgICB9LCBbXSk7XG4gICAgdmFyIHJlbmRlckxpc3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChwYWdlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFnZXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbC1sZy0xLW9mLTUgY29sLW1kLTEtb2YtNSBjb2wtc20tMS1vZi0zIGNvbC14cy0xLW9mLTIgY29sLXh4cy0xLW9mLTFcIiB9LCB7IGNoaWxkcmVuOiBfanN4KFBhZ2VUaHVtYm5haWwsIHsgaWQ6IGl0ZW0uaWQsIHRhcmdldDogXCJfYmxhbmtcIiwgbm9QaG90bzogdHJ1ZSwgbGFiZWw6IFwiTGFzdCB1cGRhdGVkOiBcIi5jb25jYXQoaXRlbS51cGRhdGVkQXQpLCB0eXBlOiBcImRyYWZ0XCIsIHN0YXR1czogc3RhdHVzLCBzZWxlY3RlZDogc2VsZWN0ZWRQYWdlcy5pbmRleE9mKGl0ZW0uaWQpID4gLTEgPyB0cnVlIDogZmFsc2UsIHRpdGxlOiBpdGVtLmNvbnRlbnRzLnRpdGxlLCBicmllZkRlczogaXRlbS5jb250ZW50cy5icmllZkRlcywgb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT09IFwiZWRpdGluZ1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaChzZWxlY3RQYWdlKGl0ZW0uaWQpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gfSkgfSksIGl0ZW0uaWQpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIF9qc3goXCJwXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImEtMTNcIiB9LCB7IGNoaWxkcmVuOiBcIllvdSBkb24ndCBoYXZlIGFueSBkcmFmdCBwYWdlLlwiIH0pKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIHJlbW92ZUJ0biA9IHN0YXR1cyA9PT0gXCJlZGl0aW5nXCIgJiYgKF9qc3goXCJidXR0b25cIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiYnRuLXRleHQgYnRuLXRleHQtcmVkXCIsIGRpc2FibGVkOiBzZWxlY3RlZFBhZ2VzLmxlbmd0aCA+IDAgPyBmYWxzZSA6IHRydWUsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHNldENvbmZpcm1hdGlvbk1vZGFsT3Blbih0cnVlKTtcbiAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBcIkRlbGV0ZVwiIH0pKSk7XG4gICAgdmFyIGRvbmVCdG4gPSBzdGF0dXMgPT09IFwiZWRpdGluZ1wiICYmIChfanN4KFwiYnV0dG9uXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImJ0bi10ZXh0XCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRpc3BhdGNoKHNldFN0YXR1cyhcIm5vcm1hbFwiKSk7XG4gICAgICAgIH0gfSwgeyBjaGlsZHJlbjogXCJEb25lXCIgfSkpKTtcbiAgICB2YXIgZWRpdEJ0biA9IHBhZ2VzLmxlbmd0aCA+IDAgJiYgc3RhdHVzID09PSBcIm5vcm1hbFwiICYmIChfanN4cyhcImJ1dHRvblwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJidG4tdGV4dFwiLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkaXNwYXRjaChzZXRTdGF0dXMoXCJlZGl0aW5nXCIpKTtcbiAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBbXCJFZGl0IFwiLCBfanN4KFwiaVwiLCB7IGNsYXNzTmFtZTogXCJmYSBmYS1wZW5jaWwtc3F1YXJlXCIsIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfSldIH0pKSk7XG4gICAgcmV0dXJuIChfanN4cyhSZWFjdC5GcmFnbWVudCwgeyBjaGlsZHJlbjogW19qc3goQ29uZmlybU1vZGFsLCBfX2Fzc2lnbih7IGhlYWRlcjogXCJEZWxldGUgRHJhZnQgUGFnZXM/XCIsIG9wZW46IGNvbmZpcm1hdGlvbk1vZGFsT3BlbiwgYnRuTmFtZTogXCJEZWxldGVcIiwgb25Db25maXJtOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKHJlbW92ZVBhZ2VzKFwidXNlci1wYWdlcy9kcmFmdFwiKSk7XG4gICAgICAgICAgICAgICAgICAgIHNldENvbmZpcm1hdGlvbk1vZGFsT3BlbihmYWxzZSk7XG4gICAgICAgICAgICAgICAgfSwgb25DYW5jZWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0Q29uZmlybWF0aW9uTW9kYWxPcGVuKGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9IH0sIHsgY2hpbGRyZW46IF9qc3hzKFwicFwiLCB7IGNoaWxkcmVuOiBbXCJBcmUgeW91IHN1cmUgdGhhdCB5b3Ugd2FudCB0byBkZWxldGUgdGhlIHNlbGVjdGVkIGRyYWZ0IHBhZ2VcIiwgc2VsZWN0ZWRQYWdlcy5sZW5ndGggPiAxID8gXCJzIFwiIDogXCJcIiwgXCI/IFwiLCBfanN4KFwiYnJcIiwge30pLCBcIiBZb3UgaGF2ZSBzZWxlY3RlZCBcIiwgc2VsZWN0ZWRQYWdlcy5sZW5ndGgsIFwiIGRyYWZ0IHBhZ2VcIiwgc2VsZWN0ZWRQYWdlcy5sZW5ndGggPiAxID8gXCJzIFwiIDogXCJcIiwgXCIgYW5kIHlvdSBjYW5ub3QgdW5kbyB0aGUgYWN0aW9uLlwiXSB9KSB9KSksIF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInJvd1wiIH0sIHsgY2hpbGRyZW46IFtfanN4KEhlYWRlciwge30pLCBfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJoZWFkZXItbmF2XCIgfSwgeyBjaGlsZHJlbjogW19qc3goXCJoM1wiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJoZWFkaW5nLXRlcnRpYXJ5XCIgfSwgeyBjaGlsZHJlbjogXCJZb3VyIERyYWZ0IFBhZ2VzOlwiIH0pKSwgIWxvYWRpbmcgJiYgKF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImhlYWRlci1uYXZfX2FjdGlvbnNcIiB9LCB7IGNoaWxkcmVuOiBbcmVtb3ZlQnRuLCBkb25lQnRuLCBlZGl0QnRuXSB9KSkpXSB9KSksIGxvYWRpbmcgJiYgKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY2VudGVyLWNvbnRlbnQgbWFyZ2luLXRvcC0xXCIgfSwgeyBjaGlsZHJlbjogX2pzeChMb2FkaW5nLCB7fSkgfSkpKSwgIWxvYWRpbmcgJiYgX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJyb3dcIiB9LCB7IGNoaWxkcmVuOiByZW5kZXJMaXN0KCkgfSkpXSB9KSldIH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBQdWJsaXNoZWQ7XG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGc7XG4gICAgcmV0dXJuIGcgPSB7IG5leHQ6IHZlcmIoMCksIFwidGhyb3dcIjogdmVyYigxKSwgXCJyZXR1cm5cIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgKGdbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSksIGc7XG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xuICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7XG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0gb3BbMF0gJiAyID8geVtcInJldHVyblwiXSA6IG9wWzBdID8geVtcInRocm93XCJdIHx8ICgodCA9IHlbXCJyZXR1cm5cIl0pICYmIHQuY2FsbCh5KSwgMCkgOiB5Lm5leHQpICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xuICAgICAgICAgICAgaWYgKHkgPSAwLCB0KSBvcCA9IFtvcFswXSAmIDIsIHQudmFsdWVdO1xuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDogXy5sYWJlbCsrOyByZXR1cm4geyB2YWx1ZTogb3BbMV0sIGRvbmU6IGZhbHNlIH07XG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7IF8ubGFiZWwgPSB0WzFdOyB0ID0gb3A7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgb3AgPSBbNiwgZV07IHkgPSAwOyB9IGZpbmFsbHkgeyBmID0gdCA9IDA7IH1cbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XG4gICAgfVxufTtcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTW9kYWwsIERyb3Bkb3duLCBJbnB1dCwgVGV4dGFyZWEsIEJ1dHRvbiwgTG9hZGluZywgfSBmcm9tIFwiQHBhZ3Nlci9yZXVzYWJsZVwiO1xuaW1wb3J0IHsgYWxlcnQsIHJlcXVlc3QsIGxvYWRpbmdNb2RhbCB9IGZyb20gXCJAcGFnc2VyL2NvbW1vblwiO1xuaW1wb3J0IENvbGxlY3Rpb24gZnJvbSBcIi4uLy4uLy4uL3BhcnRpYWxzL0NvbGxlY3Rpb25UaHVtYm5haWxcIjtcbmltcG9ydCB7IHVzZURpc3BhdGNoIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgeyBzZXRTZWN0aW9uIH0gZnJvbSBcIi4uL3NpZGUtbmF2L3NpZGVOYXZTbGljZVwiO1xudmFyIENvbGxlY3Rpb25zID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfYSA9IHVzZVN0YXRlKGZhbHNlKSwgbG9hZGluZ0NyZWF0ZWQgPSBfYVswXSwgc2V0TG9hZGluZ0NyZWF0ZWQgPSBfYVsxXTsgLy8gbG9hZGluZyBmb3IgdXNlciBjcmVhdGVkIGNvbGxlY3Rpb25zXG4gICAgdmFyIF9iID0gdXNlU3RhdGUoZmFsc2UpLCBsb2FkaW5nU2F2ZWQgPSBfYlswXSwgc2V0TG9hZGluZ1NhdmVkID0gX2JbMV07IC8vIGxvYWRpbmcgZm9yIHNhdmVkIGNvbGxlY3Rpb25zXG4gICAgdmFyIF9jID0gdXNlU3RhdGUoZmFsc2UpLCBuZXdDb2xsZWN0aW9uTWRsID0gX2NbMF0sIHNldE5ld0NvbGxlY3Rpb25NZGwgPSBfY1sxXTtcbiAgICB2YXIgX2QgPSB1c2VTdGF0ZShcIlwiKSwgbmFtZSA9IF9kWzBdLCBzZXROYW1lID0gX2RbMV07XG4gICAgdmFyIF9lID0gdXNlU3RhdGUoXCJcIiksIGRlc2NyaXB0aW9uID0gX2VbMF0sIHNldERlc2NyaXB0aW9uID0gX2VbMV07XG4gICAgdmFyIF9mID0gdXNlU3RhdGUoW10pLCBzYXZlZENvbGxlY3Rpb25zID0gX2ZbMF0sIHNldFNhdmVkQ29sbGVjdGlvbnMgPSBfZlsxXTtcbiAgICB2YXIgX2cgPSB1c2VTdGF0ZShbXSksIGNyZWF0ZWRDb2xsZWN0aW9ucyA9IF9nWzBdLCBzZXRDcmVhdGVkQ29sbGVjdGlvbnMgPSBfZ1sxXTtcbiAgICB2YXIgX2ggPSB1c2VTdGF0ZShcImRhdGUtY3JlYXRlZFwiKSwgc29ydEJ5Q0MgPSBfaFswXSwgc2V0U29ydEJ5Q0MgPSBfaFsxXTsgLy8gY3JlYXRlZCBjb2xsZWN0aW9uc1xuICAgIHZhciBfaiA9IHVzZVN0YXRlKFwiZGF0ZS1hZGRlZFwiKSwgc29ydEJ5U0MgPSBfalswXSwgc2V0U29ydEJ5U0MgPSBfalsxXTsgLy8gc2F2ZWQgY29sbGVjdGlvbnNcbiAgICB2YXIgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuICAgIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRvY3VtZW50LnRpdGxlID0gXCJDb2xsZWN0aW9ucyB8IFBhZ3NlclwiO1xuICAgICAgICBmZXRjaENvbGxlY3Rpb25zKFwiY3JlYXRlZC1zYXZlZFwiKTtcbiAgICB9LCBbXSk7XG4gICAgLy8gQ3JlYXRlcyBhIG5ldyBjb2xsZWN0aW9uXG4gICAgdmFyIGNyZWF0ZUNvbGxlY3Rpb24gPSBmdW5jdGlvbiAoZSkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGVfMTtcbiAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICBsb2FkaW5nTW9kYWwoXCJMb2FkaW5nLi4uXCIpO1xuICAgICAgICAgICAgICAgICAgICBfYS5sYWJlbCA9IDE7XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICBfYS50cnlzLnB1c2goWzEsIDMsICwgNF0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCByZXF1ZXN0LnBvc3QoXCIvY29sbGVjdGlvblwiLCB7IG5hbWU6IG5hbWUsIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0aDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgIF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgbG9hZGluZ01vZGFsKCk7XG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwiWW91ciBjb2xsZWN0aW9uIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LlwiLCBcInN1Y2Nlc3NcIik7XG4gICAgICAgICAgICAgICAgICAgIGZldGNoQ29sbGVjdGlvbnMoXCJjcmVhdGVkXCIsIFwiZGF0ZS1jcmVhdGVkXCIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA0XTtcbiAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgIGVfMSA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFszIC8qYnJlYWsqLywgNF07XG4gICAgICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgICAgICBzZXROZXdDb2xsZWN0aW9uTWRsKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0TmFtZShcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0RGVzY3JpcHRpb24oXCJcIik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7IH07XG4gICAgLy8gRmV0Y2hlcyB0aGUgbGlzdCBvZiBjb2xsZWN0aW9uIGZyb20gdGhlIHNlcnZlciwgZWl0aGVyIHRob3NlIHRoYXQgdGhlIHVzZXIgaGFzIGNyZWF0ZWQgb3Igc2F2ZWRcbiAgICB2YXIgZmV0Y2hDb2xsZWN0aW9ucyA9IGZ1bmN0aW9uIChraW5kLCBzb3J0QnkpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByZXNwb25zZSwgZV8yO1xuICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGtpbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJjcmVhdGVkLXNhdmVkXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0TG9hZGluZ0NyZWF0ZWQodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0TG9hZGluZ1NhdmVkKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcInNhdmVkXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0TG9hZGluZ1NhdmVkKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImNyZWF0ZWRcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRMb2FkaW5nQ3JlYXRlZCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBfYS5sYWJlbCA9IDE7XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICBfYS50cnlzLnB1c2goWzEsIDMsICwgNF0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCByZXF1ZXN0LmdldChcIi9jb2xsZWN0aW9ucy9cIi5jb25jYXQoa2luZCwgXCI/c29ydEJ5PVwiKS5jb25jYXQoc29ydEJ5KSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dGg6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IChfYS5zZW50KCkpO1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGtpbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJjcmVhdGVkLXNhdmVkXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0U2F2ZWRDb2xsZWN0aW9ucyhyZXNwb25zZS5zYXZlZENvbGxlY3Rpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRDcmVhdGVkQ29sbGVjdGlvbnMocmVzcG9uc2UuY3JlYXRlZENvbGxlY3Rpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJzYXZlZFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFNhdmVkQ29sbGVjdGlvbnMocmVzcG9uc2Uuc2F2ZWRDb2xsZWN0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiY3JlYXRlZFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldENyZWF0ZWRDb2xsZWN0aW9ucyhyZXNwb25zZS5jcmVhdGVkQ29sbGVjdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDRdO1xuICAgICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICAgICAgZV8yID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA0XTtcbiAgICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgICAgIHNldExvYWRpbmdDcmVhdGVkKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0TG9hZGluZ1NhdmVkKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTsgfTtcbiAgICB2YXIgcmVuZGVyQ29sbGVjdGlvbnMgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgICAgICB2YXIgbGlzdCA9IFtdO1xuICAgICAgICBpZiAoa2luZCA9PT0gXCJzYXZlZENvbGxlY3Rpb25zXCIpIHtcbiAgICAgICAgICAgIGxpc3QgPSBzYXZlZENvbGxlY3Rpb25zO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbGlzdCA9IGNyZWF0ZWRDb2xsZWN0aW9ucztcbiAgICAgICAgfVxuICAgICAgICBpZiAobGlzdC5sZW5ndGggPT09IDApXG4gICAgICAgICAgICByZXR1cm4gX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJhLTE0XCIgfSwgeyBjaGlsZHJlbjogXCJDb2xsZWN0aW9uIGxpc3QgaXMgZW1wdHkuXCIgfSkpO1xuICAgICAgICByZXR1cm4gbGlzdC5tYXAoZnVuY3Rpb24gKGNsKSB7XG4gICAgICAgICAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY29sLWxnLTEtb2YtNSBjb2wtbWQtMS1vZi01IGNvbC1zbS0xLW9mLTMgY29sLXhzLTEtb2YtMiBjb2wteHhzLTEtb2YtMVwiIH0sIHsgY2hpbGRyZW46IF9qc3goQ29sbGVjdGlvbiwgeyBpZDogY2wuX2lkLCBuYW1lOiBjbC5uYW1lLCBpbWc6IGNsLnBob3RvLnNlY3VyZV91cmwsIGRlc2M6IGNsLmRlc2NyaXB0aW9uLCBwYWdlTnVtOiBjbC5wYWdlcy5sZW5ndGgsIGF1dGhvcjogY2wudXNlci5uYW1lLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaChzZXRTZWN0aW9uKFwiXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgfSB9KSB9KSwgY2wuX2lkKSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIChfanN4cyhSZWFjdC5GcmFnbWVudCwgeyBjaGlsZHJlbjogW19qc3goTW9kYWwsIF9fYXNzaWduKHsgaGVhZGVyOiBcIkNyZWF0ZSBhIE5ldyBDb2xsZWN0aW9uXCIsIG9wZW46IG5ld0NvbGxlY3Rpb25NZGwsIG9uQ2xvc2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0TmV3Q29sbGVjdGlvbk1kbChmYWxzZSk7XG4gICAgICAgICAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBfanN4cyhcImZvcm1cIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiZm9ybVwiLCBvblN1Ym1pdDogY3JlYXRlQ29sbGVjdGlvbiB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJcIiB9LCB7IGNoaWxkcmVuOiBfanN4KElucHV0LCB7IGxhYmVsOiBcIk5hbWVcIiwgdHlwZTogXCJ0ZXh0XCIsIHBsYWNlaG9sZGVyOiBcIlRoZSBuYW1lIG9mIHlvdXIgY29sbGVjdGlvbi5cIiwgb25DaGFuZ2U6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0TmFtZSh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHZhbHVlOiBuYW1lLCByZXF1aXJlZDogdHJ1ZSB9KSB9KSksIF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiZm9ybS1ncm91cFwiIH0sIHsgY2hpbGRyZW46IF9qc3goVGV4dGFyZWEsIHsgbGFiZWw6IFwiRGVzY3JpcHRpb24gKG9wdGlvbmFsKVwiLCBwbGFjZWhvbGRlcjogXCJEZXNjcmliZSB3aGF0IHRoaXMgY29sbGVjdGlvbiBpcyBmb3IsIGNvbnRhaW5zLCBvciBhbnkgb3RoZXIgaW5mb3JtYXRpb24geW91IGRlZW0gdXNlZnVsLlwiLCB2YWx1ZTogZGVzY3JpcHRpb24sIHJvd3M6IDQsIG9uQ2hhbmdlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldERlc2NyaXB0aW9uKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSB9KSB9KSksIF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwidS1mbGV4LXRleHQtcmlnaHRcIiB9LCB7IGNoaWxkcmVuOiBfanN4KEJ1dHRvbiwgX19hc3NpZ24oeyBjb2xvcjogXCJibHVlXCIsIHR5cGU6IFwic3VibWl0XCIgfSwgeyBjaGlsZHJlbjogXCJDcmVhdGVcIiB9KSkgfSkpXSB9KSkgfSkpLCBfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJyb3dcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdiBtYXJnaW4tYm90dG9tLTFcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImgzXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImhlYWRpbmctdGVydGlhcnlcIiB9LCB7IGNoaWxkcmVuOiBcIkNvbGxlY3Rpb25zIFlvdSd2ZSBDcmVhdGVkOlwiIH0pKSwgX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdl9fYWN0aW9uc1wiIH0sIHsgY2hpbGRyZW46IFtjcmVhdGVkQ29sbGVjdGlvbnMubGVuZ3RoID4gMSAmJiAoX2pzeHMoRHJvcGRvd24sIF9fYXNzaWduKHsgbnVtOiBcIjFcIiwgc2VsZWN0OiBzb3J0QnlDQywgb25DaGFuZ2U6IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZldGNoQ29sbGVjdGlvbnMoXCJjcmVhdGVkXCIsIG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gfSwgeyBjaGlsZHJlbjogW19qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBcImRhdGEtcm9sZS1uYW1lXCI6IFwiYnRuLW5hbWVcIiwgXCJkYXRhLWljb24tY2xhc3NcIjogXCJmYSBmYS1zb3J0LWFtb3VudC1hc2NcIiB9LCB7IGNoaWxkcmVuOiBcIlNvcnQgQnlcIiB9KSksIF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBcImRhdGEtcm9sZS1uYW1lXCI6IFwiaXRlbVwiLCBcImRhdGEtbmFtZVwiOiBcImRhdGUtY3JlYXRlZFwiIH0sIHsgY2hpbGRyZW46IFwiRGF0ZSBDcmVhdGVkXCIgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgXCJkYXRhLXJvbGUtbmFtZVwiOiBcIml0ZW1cIiwgXCJkYXRhLW5hbWVcIjogXCJhLXpcIiB9LCB7IGNoaWxkcmVuOiBcIkEgLSBaXCIgfSkpXSB9KSkpLCBfanN4cyhcImJ1dHRvblwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJidG4tdGV4dFwiLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldE5ld0NvbGxlY3Rpb25NZGwodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBbXCJDcmVhdGUgYSBuZXcgY29sbGVjdGlvblwiLCBcIiBcIiwgX2pzeChcImlcIiwgeyBjbGFzc05hbWU6IFwiZmEgZmEtcGx1c1wiLCBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiIH0pXSB9KSldIH0pKV0gfSkpLCBsb2FkaW5nQ3JlYXRlZCAmJiAoX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJjZW50ZXItY29udGVudCBtYXJnaW4tdG9wLTFcIiB9LCB7IGNoaWxkcmVuOiBfanN4KExvYWRpbmcsIHt9KSB9KSkpLCAhbG9hZGluZ0NyZWF0ZWQgJiYgKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwicm93XCIgfSwgeyBjaGlsZHJlbjogcmVuZGVyQ29sbGVjdGlvbnMoXCJjcmVhdGVkQ29sbGVjdGlvbnNcIikgfSkpKV0gfSkpLCBfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJyb3dcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdiBtYXJnaW4tYm90dG9tLTFcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImgzXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImhlYWRpbmctdGVydGlhcnlcIiB9LCB7IGNoaWxkcmVuOiBcIkNvbGxlY3Rpb25zIFlvdSd2ZSBTYXZlZDpcIiB9KSksIF9qc3goXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdl9fYWN0aW9uc1wiIH0pXSB9KSksIGxvYWRpbmdTYXZlZCAmJiAoX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJjZW50ZXItY29udGVudCBtYXJnaW4tdG9wLTFcIiB9LCB7IGNoaWxkcmVuOiBfanN4KExvYWRpbmcsIHt9KSB9KSkpLCAhbG9hZGluZ1NhdmVkICYmIChfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInJvd1wiIH0sIHsgY2hpbGRyZW46IHJlbmRlckNvbGxlY3Rpb25zKFwic2F2ZWRDb2xsZWN0aW9uc1wiKSB9KSkpXSB9KSldIH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBDb2xsZWN0aW9ucztcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VOYXZpZ2F0ZSwgdXNlUGFyYW1zIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcbmltcG9ydCBQYWdlVGh1bWJuYWlsIGZyb20gXCIuLi8uLi8uLi9wYXJ0aWFscy9QYWdlVGh1bWJuYWlsXCI7XG5pbXBvcnQgeyBVcGxvYWRQaG90bywgQ29uZmlybU1vZGFsLCBJbnB1dCwgVGV4dGFyZWEsIExvYWRpbmcsIH0gZnJvbSBcIkBwYWdzZXIvcmV1c2FibGVcIjtcbmltcG9ydCB7IGxvYWRpbmdNb2RhbCwgYWxlcnQsIHJlcXVlc3QgfSBmcm9tIFwiQHBhZ3Nlci9jb21tb25cIjtcbnZhciBDb2xsZWN0aW9uU2hvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX2EgPSB1c2VTdGF0ZShcIm5vcm1hbFwiKSwgaW5mb1N0YXR1cyA9IF9hWzBdLCBzZXRJbmZvU3RhdHVzID0gX2FbMV07XG4gICAgdmFyIF9iID0gdXNlU3RhdGUoXCJub3JtYWxcIiksIHBhZ2VzU3RhdHVzID0gX2JbMF0sIHNldFBhZ2VzU3RhdHVzID0gX2JbMV07XG4gICAgdmFyIF9jID0gdXNlU3RhdGUoXCJzcGVjdGF0b3JcIiksIHZpZXdlciA9IF9jWzBdLCBzZXRWaWV3ZXIgPSBfY1sxXTtcbiAgICB2YXIgX2QgPSB1c2VTdGF0ZShcInNhdmVcIiksIGJ0biA9IF9kWzBdLCBzZXRCdG4gPSBfZFsxXTtcbiAgICB2YXIgX2UgPSB1c2VTdGF0ZShmYWxzZSksIGxvYWRpbmcgPSBfZVswXSwgc2V0TG9hZGluZyA9IF9lWzFdO1xuICAgIHZhciBfZiA9IHVzZVN0YXRlKFwiXCIpLCBpZCA9IF9mWzBdLCBzZXRJZCA9IF9mWzFdO1xuICAgIHZhciBfZyA9IHVzZVN0YXRlKFwiXCIpLCBpbnB1dE5hbWUgPSBfZ1swXSwgc2V0SW5wdXROYW1lID0gX2dbMV07XG4gICAgdmFyIF9oID0gdXNlU3RhdGUoXCJcIiksIGlucHV0RGVzYyA9IF9oWzBdLCBzZXRJbnB1dERlc2MgPSBfaFsxXTtcbiAgICB2YXIgX2ogPSB1c2VTdGF0ZShcIlwiKSwgbmFtZSA9IF9qWzBdLCBzZXROYW1lID0gX2pbMV07XG4gICAgdmFyIF9rID0gdXNlU3RhdGUoXCJcIiksIGRlc2MgPSBfa1swXSwgc2V0RGVzYyA9IF9rWzFdO1xuICAgIHZhciBfbCA9IHVzZVN0YXRlKFtdKSwgcGFnZXMgPSBfbFswXSwgc2V0UGFnZXMgPSBfbFsxXTtcbiAgICB2YXIgX20gPSB1c2VTdGF0ZShbXSksIHNlbGVjdGVkUGFnZXMgPSBfbVswXSwgc2V0U2VsZWN0ZWRQYWdlcyA9IF9tWzFdO1xuICAgIHZhciBfbyA9IHVzZVN0YXRlKFwiXCIpLCBhdXRob3IgPSBfb1swXSwgc2V0QXV0aG9yID0gX29bMV07XG4gICAgdmFyIF9wID0gdXNlU3RhdGUoXCJcIiksIHBob3RvID0gX3BbMF0sIHNldFBob3RvID0gX3BbMV07XG4gICAgdmFyIF9xID0gdXNlU3RhdGUoZmFsc2UpLCB1cGxvYWRQaG90b01kbCA9IF9xWzBdLCBzZXRVcGxvYWRQaG90b01kbCA9IF9xWzFdO1xuICAgIHZhciBfciA9IHVzZVN0YXRlKGZhbHNlKSwgY29uZkNMRGVsZXRpb25NZGwgPSBfclswXSwgc2V0Q29uZkNMRGVsZXRpb25NZGwgPSBfclsxXTtcbiAgICB2YXIgX3MgPSB1c2VTdGF0ZShmYWxzZSksIGNvbmZDTFN0b3BTaGFyaW5nTWRsID0gX3NbMF0sIHNldENvbmZDTFN0b3BTaGFyaW5nTWRsID0gX3NbMV07XG4gICAgdmFyIF90ID0gdXNlU3RhdGUoZmFsc2UpLCBjb25mUmVtb3ZlUGFnZXNNZGwgPSBfdFswXSwgc2V0Q29uZlJlbW92ZVBhZ2VzTWRsID0gX3RbMV07XG4gICAgdmFyIG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcbiAgICB2YXIgcGFyYW1zID0gdXNlUGFyYW1zKCk7XG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHBhcmFtcy5pZClcbiAgICAgICAgICAgIGZldGNoQ29sbGVjdGlvbkRhdGEocGFyYW1zLmlkKTtcbiAgICB9LCBbXSk7XG4gICAgdmFyIGZldGNoQ29sbGVjdGlvbkRhdGEgPSBmdW5jdGlvbiAoaWQpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByZXNwb25zZSwgZV8xO1xuICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBfYS5sYWJlbCA9IDE7XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICBfYS50cnlzLnB1c2goWzEsIDMsICwgNF0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCByZXF1ZXN0LmdldChcIi9jb2xsZWN0aW9uL1wiLmNvbmNhdChpZCksIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRoOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSAoX2Euc2VudCgpKTtcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBcIlwiLmNvbmNhdChyZXNwb25zZS5jb2xsZWN0aW9uLm5hbWUgfHwgXCJcIiwgXCIgfCBQYWdzZXJcIik7XG4gICAgICAgICAgICAgICAgICAgIHNldEJ0bihyZXNwb25zZS5idG4pO1xuICAgICAgICAgICAgICAgICAgICBzZXRWaWV3ZXIocmVzcG9uc2Uudmlld2VyKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0SWQocmVzcG9uc2UuY29sbGVjdGlvbi5faWQpO1xuICAgICAgICAgICAgICAgICAgICBzZXROYW1lKHJlc3BvbnNlLmNvbGxlY3Rpb24ubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHNldERlc2MocmVzcG9uc2UuY29sbGVjdGlvbi5kZXNjcmlwdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIHNldFBob3RvKHJlc3BvbnNlLmNvbGxlY3Rpb24ucGhvdG8uc2VjdXJlX3VybCk7XG4gICAgICAgICAgICAgICAgICAgIHNldEF1dGhvcihyZXNwb25zZS5jb2xsZWN0aW9uLnVzZXIubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHNldFBhZ2VzKHJlc3BvbnNlLmNvbGxlY3Rpb24ucGFnZXMpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA0XTtcbiAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgIGVfMSA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVfMS5zdGF0dXMgPT09IDQwMykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdGUoXCIvdS9jb2xsZWN0aW9uc1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwiU29ycnkgeW91IGFyZSBub3QgYXV0aG9yaXplZCB0byB2aWV3IHRoYXQgY29sbGVjdGlvbi5cIiwgXCJlcnJvclwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA0XTtcbiAgICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qL107XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pOyB9O1xuICAgIC8vIFNlbmRzIGEgcmVxdWVzdCB0byBzZXJ2ZXIgdG8gZWl0aGVyIHNhdmUgdGhlIGNvbGxlY3Rpb24gaW4gbGlicmFyeSBvciByZW1vdmUgaXRcbiAgICAvLyBpZiBpdCdzIGFscmVhZHkgc2F2ZWQgdG8gdGhlIGxpYnJhcnlcbiAgICB2YXIgdG9nZ2xlSW5MaWJyYXJ5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHJlc3BvbnNlLCBlXzI7XG4gICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgIGxvYWRpbmdNb2RhbChcIkxvYWRpbmcuLi5cIik7XG4gICAgICAgICAgICAgICAgICAgIF9hLmxhYmVsID0gMTtcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIF9hLnRyeXMucHVzaChbMSwgMywgLCA0XSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHJlcXVlc3QucG9zdChcIi9jb2xsZWN0aW9uL3RvZ2dsZS1saWJyYXJ5L1wiLmNvbmNhdChpZCksIHt9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0aDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gKF9hLnNlbnQoKSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IFwicmVtb3ZlZFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCdG4oXCJzYXZlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoXCJUaGUgY29sbGVjdGlvbiB3YXMgc3VjY2Vzc2Z1bGx5IHJlbW92ZWQgZnJvbSB5b3VyIGxpYnJhcnkuXCIsIFwic3VjY2Vzc1wiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSBcImFkZGVkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEJ0bihcInJlbW92ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwiVGhlIGNvbGxlY3Rpb24gd2FzIHN1Y2Nlc3NmdWxseSBhZGRlZCB0byB5b3VyIGxpYnJhcnkuXCIsIFwic3VjY2Vzc1wiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA0XTtcbiAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgIGVfMiA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFszIC8qYnJlYWsqLywgNF07XG4gICAgICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgICAgICBsb2FkaW5nTW9kYWwoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTsgfTtcbiAgICAvLyBTZW5kIGEgcmVxdWVzdCB0byBzZXJ2ZXIgdG8gc3RhcnQgb3Igc3RvcCBzaGFyaW5nIHRoZSBjb2xsZWN0aW9uXG4gICAgdmFyIHRvZ2dsZUNMU2hhcmluZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByZXNwb25zZSwgZV8zO1xuICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICBsb2FkaW5nTW9kYWwoXCJMb2FkaW5nLi4uXCIpO1xuICAgICAgICAgICAgICAgICAgICBfYS5sYWJlbCA9IDE7XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICBfYS50cnlzLnB1c2goWzEsIDMsICwgNF0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCByZXF1ZXN0LnBvc3QoXCIvY29sbGVjdGlvbi9zaGFyaW5nL1wiLmNvbmNhdChpZCksIHt9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0aDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gKF9hLnNlbnQoKSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zaGFyaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCdG4oXCJzdG9wLXNoYXJpbmdcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydChcIlRoZSBjb2xsZWN0aW9uIGlzIG5vdyBhY2Nlc3NpYmxlIGJ5IG90aGVycy5cIiwgXCJzdWNjZXNzXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uuc2hhcmluZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QnRuKFwic2hhcmVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRDb25mQ0xTdG9wU2hhcmluZ01kbChmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydChcIlRoZSBjb2xsZWN0aW9uIGhhcyBzdG9wcGVkIGZyb20gYmVpbmcgc2hhcmVkLlwiLCBcInN1Y2Nlc3NcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFszIC8qYnJlYWsqLywgNF07XG4gICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICBlXzMgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDRdO1xuICAgICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICAgICAgbG9hZGluZ01vZGFsKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7IH07XG4gICAgLy8gU2VuZHMgYSByZXF1ZXN0IHRvIHNlcnZlciB0byB1cGRhdGUgdGhlIG5hbWUgYW5kIHRoZSBkZXNjcmlwdGlvbiBvZiBhIGNvbGxlY3Rpb25cbiAgICB2YXIgdXBkYXRlSW5mbyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBlXzQ7XG4gICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgIGxvYWRpbmdNb2RhbChcIlNhdmluZy4uLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgX2EubGFiZWwgPSAxO1xuICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgX2EudHJ5cy5wdXNoKFsxLCAzLCAsIDRdKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgcmVxdWVzdC5wdXQoXCIvY29sbGVjdGlvbi9pbmZvL1wiLmNvbmNhdChpZCksIHsgbmFtZTogaW5wdXROYW1lLCBkZXNjcmlwdGlvbjogaW5wdXREZXNjIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRoOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICBhbGVydChcIkNvbGxlY3Rpb24gaW5mbyB3YXMgdXBkYXRlZCBzdWNjZXNzZnVsbHlcIiwgXCJzdWNjZXNzXCIpO1xuICAgICAgICAgICAgICAgICAgICBzZXRJbmZvU3RhdHVzKFwibm9ybWFsXCIpO1xuICAgICAgICAgICAgICAgICAgICBzZXROYW1lKGlucHV0TmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHNldERlc2MoaW5wdXREZXNjKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFszIC8qYnJlYWsqLywgNF07XG4gICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICBlXzQgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDRdO1xuICAgICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICAgICAgbG9hZGluZ01vZGFsKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7IH07XG4gICAgLy8gU2VuZCB0aGUgcmVxdWVzdCB0byBkZWxldGUgY29sbGVjdGlvbiBhZG4gdGhlbiByZWRpcmVjdFxuICAgIHZhciBkZWxldGVDb2xsZWN0aW9uID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGVfNTtcbiAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgbG9hZGluZ01vZGFsKFwiTG9hZGluZy4uLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgX2EubGFiZWwgPSAxO1xuICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgX2EudHJ5cy5wdXNoKFsxLCAzLCAsIDRdKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgcmVxdWVzdC5kZWxldGUoXCIvY29sbGVjdGlvbi9cIi5jb25jYXQoaWQpLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0aDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgIF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgbG9hZGluZ01vZGFsKCk7XG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwiWW91ciBjb2xsZWN0aW9uIHdhcyBkZWxldGVkIHN1Y2Nlc3NmdWxseS5cIiwgXCJzdWNjZXNzXCIpO1xuICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0ZShcIi91L2NvbGxlY3Rpb25zXCIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA0XTtcbiAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgIGVfNSA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFszIC8qYnJlYWsqLywgNF07XG4gICAgICAgICAgICAgICAgY2FzZSA0OiByZXR1cm4gWzIgLypyZXR1cm4qL107XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pOyB9O1xuICAgIC8vIFNlbmQgYSByZXF1ZXN0IHRvIHNlcnZlciB0byByZW1vdmUgc2VsZWN0ZWQgcGFnZXMgZnJvbSBjb2xsZWN0aW9uXG4gICAgdmFyIHJlbW92ZVBhZ2VzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG5ld0FyciwgZV82O1xuICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICBzZXRDb25mUmVtb3ZlUGFnZXNNZGwoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICBsb2FkaW5nTW9kYWwoXCJMb2FkaW5nLi4uXCIpO1xuICAgICAgICAgICAgICAgICAgICBfYS5sYWJlbCA9IDE7XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICBfYS50cnlzLnB1c2goWzEsIDMsICwgNF0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCByZXF1ZXN0LnB1dChcIi9hcGkvY29sbGVjdGlvbi9yZW1vdmUtcGFnZXMvXCIuY29uY2F0KGlkKSwgeyBwYWdlSWRzOiBzZWxlY3RlZFBhZ2VzIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRoOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgKF9hLnNlbnQoKSk7XG4gICAgICAgICAgICAgICAgICAgIGxvYWRpbmdNb2RhbCgpO1xuICAgICAgICAgICAgICAgICAgICBhbGVydChcIlBhZ2UocykgcmVtb3ZlZCBmcm9tIHlvdXIgY29sbGVjdGlvbiBzdWNjZXNzZnVsbHkuXCIsIFwic3VjY2Vzc1wiKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3QXJyID0gcGFnZXMuZmlsdGVyKGZ1bmN0aW9uIChwYWdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWRQYWdlcy5pbmRleE9mKHBhZ2UuX2lkKSA9PT0gLTE7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBzZXRQYWdlcyhuZXdBcnIpO1xuICAgICAgICAgICAgICAgICAgICBzZXRTZWxlY3RlZFBhZ2VzKFtdKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0UGFnZXNTdGF0dXMoXCJub3JtYWxcIik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDRdO1xuICAgICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICAgICAgZV82ID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICBsb2FkaW5nTW9kYWwoKTtcbiAgICAgICAgICAgICAgICAgICAgYWxlcnQoXCJTb3JyeSBhbiBlcnJvciBvY2N1cnJlZCBwbGVhc2UgdHJ5IGFnYWluLlwiLCBcImVycm9yXCIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCA0XTtcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IHJldHVybiBbMiAvKnJldHVybiovXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7IH07XG4gICAgdmFyIHJlbmRlclBhZ2VzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcGFnZXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY29sLWxnLTEtb2YtNSBjb2wtbWQtMS1vZi01IGNvbC1zbS0xLW9mLTMgY29sLXhzLTEtb2YtMiBjb2wteHhzLTEtb2YtMVwiIH0sIHsgY2hpbGRyZW46IF9qc3goUGFnZVRodW1ibmFpbCwgeyBpZDogaXRlbS5pZCwgc2VsZWN0ZWQ6IHNlbGVjdGVkUGFnZXMuaW5kZXhPZihpdGVtLl9pZCkgPiAtMSA/IHRydWUgOiBmYWxzZSwgc3RhdHVzOiBwYWdlc1N0YXR1cywgYnJpZWZEZXM6IGl0ZW0uY29udGVudHMuYnJpZWZEZXMsIHRpdGxlOiBpdGVtLmNvbnRlbnRzLnRpdGxlLCBpbWFnZTogaXRlbS5jcm9wZWRQaG90by5zZWN1cmVfdXJsLCB0YXJnZXQ6IFwiX2JsYW5rXCIsIHVybDogaXRlbS51cmwsIHR5cGU6IGl0ZW0udHlwZSwgYXV0aG9yVXNlcm5hbWU6IGl0ZW0uYXV0aG9yLnVzZXJuYW1lLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFnZXNTdGF0dXMgPT09IFwiZWRpdGluZ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gc2VsZWN0ZWRQYWdlcy5pbmRleE9mKGl0ZW0uX2lkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkZCB0aGUgcGFnZSB0byB0aGUgc2VsZWN0ZWQgbGlzdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRTZWxlY3RlZFBhZ2VzKF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgc2VsZWN0ZWRQYWdlcywgdHJ1ZSksIFtpdGVtLl9pZF0sIGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBSZW1vdmUgdGhlIHBhZ2UgZnJvbSB0aGUgc2VsZWN0ZWQgbGlzdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRTZWxlY3RlZFBhZ2VzKF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgc2VsZWN0ZWRQYWdlcy5zbGljZSgwLCBpbmRleCksIHRydWUpLCBzZWxlY3RlZFBhZ2VzLnNsaWNlKGluZGV4ICsgMSksIHRydWUpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gfSkgfSksIGl0ZW0uX2lkKSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLy8gUmVuZGVyIHRoZSBzaGFyZSwgc3RvcC1zaGFyaW5nLCBzYXZlIG9yIHJlbW92ZSBidXR0b25zXG4gICAgdmFyIHJlbmRlckJ0biA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGJ0biA9PT0gXCJzYXZlXCIpXG4gICAgICAgICAgICByZXR1cm4gKF9qc3hzKFwiYnV0dG9uXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImJ0biBidG4tYmx1ZS1vXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRvZ2dsZUluTGlicmFyeSgpOyB9IH0sIHsgY2hpbGRyZW46IFtcIlNhdmUgdG8gTGlicmFyeSBcIiwgX2pzeChcImlcIiwgeyBjbGFzc05hbWU6IFwiZmEgZmEtcGx1cy1zcXVhcmVcIiwgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiB9KV0gfSkpKTtcbiAgICAgICAgaWYgKGJ0biA9PT0gXCJyZW1vdmVcIilcbiAgICAgICAgICAgIHJldHVybiAoX2pzeHMoXCJidXR0b25cIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiYnRuIGJ0bi1yZWQtb1wiLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7IHJldHVybiB0b2dnbGVJbkxpYnJhcnkoKTsgfSB9LCB7IGNoaWxkcmVuOiBbXCJSZW1vdmUgZnJvbSBMaWJyYXJ5XCIsIFwiIFwiLCBfanN4KFwiaVwiLCB7IGNsYXNzTmFtZTogXCJmYSBmYS1taW51cy1zcXVhcmVcIiwgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiB9KV0gfSkpKTtcbiAgICAgICAgaWYgKGJ0biA9PT0gXCJzaGFyZVwiKVxuICAgICAgICAgICAgcmV0dXJuIChfanN4cyhcImJ1dHRvblwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJidG4gYnRuLWdyZWVuLW9cIiwgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gdG9nZ2xlQ0xTaGFyaW5nKCk7IH0gfSwgeyBjaGlsZHJlbjogW1wiU3RhcnQgc2hhcmluZyB0aGlzIGNvbGxlY3Rpb25cIiwgXCIgXCIsIF9qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLXNoYXJlLXNxdWFyZVwiLCBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiIH0pXSB9KSkpO1xuICAgICAgICBpZiAoYnRuID09PSBcInN0b3Atc2hhcmluZ1wiKVxuICAgICAgICAgICAgcmV0dXJuIChfanN4cyhcImJ1dHRvblwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJidG4gYnRuLXJlZC1vXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNldENvbmZDTFN0b3BTaGFyaW5nTWRsKHRydWUpOyB9IH0sIHsgY2hpbGRyZW46IFtcIlN0b3Agc2hhcmluZyB0aGlzIGNvbGxlY3Rpb25cIiwgXCIgXCIsIF9qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLXN0b3AtY2lyY2xlXCIsIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfSldIH0pKSk7XG4gICAgfTtcbiAgICAvLyBSZW5kZXIgdGhlIGNvbGxlY3Rpb24gaW1hZ2UsIHZpZXdlciBzaG91bGQgYmUgYWJsZSB0byB1cGRhdGUgaXQgaWYgdGhlaXIgb3duZXJcbiAgICB2YXIgcmVuZGVySW1nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodmlld2VyID09PSBcIm93bmVyXCIpIHtcbiAgICAgICAgICAgIHJldHVybiAoX2pzeHMoUmVhY3QuRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4KFVwbG9hZFBob3RvLCB7IG9wZW46IHVwbG9hZFBob3RvTWRsLCBoZWFkZXI6IFwiVXBsb2FkIGEgUGhvdG9cIiwgdGV4dDogXCJVcGxvYWQgYSBwaG90byBmb3IgeW91ciBjb2xsZWN0aW9uOlwiLCBpbnB1dExhYmVsTmFtZTogXCJDaG9vc2UgYSBwaG90b1wiLCB1cmw6IFwiL2NvbGxlY3Rpb24vcGhvdG8vXCIuY29uY2F0KGlkKSwgbWluV2lkdGg6IDk2MCwgbWluSGVpZ2h0OiA1NDAsIHNpemU6IDgwMDAwMDAsIGFzcGVjdFJhdGlvOiAxNiAvIDksIHN1Y2Nlc3M6IGZ1bmN0aW9uIChwaG90bykgeyByZXR1cm4gc2V0UGhvdG8ocGhvdG8pOyB9LCBvbkNsb3NlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VXBsb2FkUGhvdG9NZGwoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSB9KSwgX2pzeHMoXCJhXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImltZy11cGxvYWQtYnRuXCIsIGhyZWY6IFwiamF2YXNjcmlwdDp2b2lkKDApXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNldFVwbG9hZFBob3RvTWRsKHRydWUpOyB9IH0sIHsgY2hpbGRyZW46IFtfanN4KFwiaW1nXCIsIHsgc3JjOiBwaG90bywgb25FcnJvcjogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUudGFyZ2V0LnNyYyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIvaW1hZ2VzL2NvbGxlY3Rpb24tcGxhY2Vob2xkZXIuc3ZnXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gfSksIF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaW1nLXVwbG9hZC1idG5fX2NvdmVyXCIgfSwgeyBjaGlsZHJlbjogX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaW1nLXVwbG9hZC1idG5fX2NvbnRlbnRcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImlcIiwgeyBjbGFzc05hbWU6IFwiZmEgZmEtY2xvdWQtdXBsb2FkXCIsIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfSksIFwiIFVwbG9hZCBhIE5ldyBQaG90b1wiXSB9KSkgfSkpXSB9KSldIH0pKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKF9qc3goXCJpbWdcIiwgeyBzcmM6IHBob3RvLCBvbkVycm9yOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUudGFyZ2V0LnNyYyA9XG4gICAgICAgICAgICAgICAgICAgIFwiL2ltYWdlcy9jb2xsZWN0aW9uLXBsYWNlaG9sZGVyLnN2Z1wiO1xuICAgICAgICAgICAgfSB9KSk7XG4gICAgfTtcbiAgICAvLyBJbmZvIGFjdGlvbnMgYnV0dG9ucyBmb3Igb3duZXJcbiAgICB2YXIgcmVuZGVyQWN0aW9uQnRucyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHZpZXdlciA9PT0gXCJvd25lclwiICYmIGluZm9TdGF0dXMgPT09IFwibm9ybWFsXCIpXG4gICAgICAgICAgICByZXR1cm4gKF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbGxlY3Rpb24tc2hvd19fYWN0aW9uc1wiIH0sIHsgY2hpbGRyZW46IFtfanN4KFwiYnV0dG9uXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImJ0bi1pIGJ0bi1pLWJsdWUgYnRuLWktYmlnXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRJbmZvU3RhdHVzKFwiZWRpdGluZ1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRJbnB1dE5hbWUobmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0SW5wdXREZXNjKGRlc2MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBfanN4KFwiaVwiLCB7IGNsYXNzTmFtZTogXCJmYSBmYS1wZW5jaWxcIiB9KSB9KSksIF9qc3goXCJidXR0b25cIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiYnRuLWkgYnRuLWktcmVkIGJ0bi1pLWJpZ1wiLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZXRDb25mQ0xEZWxldGlvbk1kbCh0cnVlKTsgfSB9LCB7IGNoaWxkcmVuOiBfanN4KFwiaVwiLCB7IGNsYXNzTmFtZTogXCJmYSBmYS10cmFzaFwiIH0pIH0pKV0gfSkpKTtcbiAgICB9O1xuICAgIC8vIEVkaXQgZm9ybSBmb3IgY29sbGVjdGlvbiBuYW1lIGFuZCBkZXNjcmlwdGlvbi4gT25seSBmb3Igb3duZXJcbiAgICB2YXIgcmVuZGVyRWRpdEZvcm0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh2aWV3ZXIgPT09IFwib3duZXJcIiAmJiBpbmZvU3RhdHVzID09PSBcImVkaXRpbmdcIilcbiAgICAgICAgICAgIHJldHVybiAoX2pzeHMoXCJmb3JtXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImZvcm0gbWFyZ2luLWJvdHRvbS0yIG1hcmdpbi10b3AtM1wiLCBvblN1Ym1pdDogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVJbmZvKCk7XG4gICAgICAgICAgICAgICAgfSB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJmb3JtX19ncm91cFwiIH0sIHsgY2hpbGRyZW46IF9qc3goSW5wdXQsIHsgbGluZWQ6IHRydWUsIHR5cGU6IFwidGV4dFwiLCBwbGFjZWhvbGRlcjogXCJDb2xsZWN0aW9uIG5hbWVcIiwgdmFsdWU6IGlucHV0TmFtZSwgcmVxdWlyZWQ6IHRydWUsIGF1dG9Gb2N1czogdHJ1ZSwgb25DaGFuZ2U6IGZ1bmN0aW9uICh2YWx1ZSkgeyByZXR1cm4gc2V0SW5wdXROYW1lKHZhbHVlKTsgfSB9KSB9KSksIF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiZm9ybV9fZ3JvdXBcIiB9LCB7IGNoaWxkcmVuOiBfanN4KFRleHRhcmVhLCB7IHJvd3M6IDEsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNsYXNzTmFtZT1cImZvcm1fX2lucHV0IGZvcm1fX2lucHV0LS1saW5lZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiQWRkIGEgZGVzY3JpcHRpb25cIiwgdmFsdWU6IGlucHV0RGVzYywgb25DaGFuZ2U6IGZ1bmN0aW9uICh2YWx1ZSkgeyByZXR1cm4gc2V0SW5wdXREZXNjKHZhbHVlKTsgfSB9KSB9KSksIF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInJpZ2h0LWNvbnRlbnRcIiB9LCB7IGNoaWxkcmVuOiBbX2pzeChcImJ1dHRvblwiLCBfX2Fzc2lnbih7IHR5cGU6IFwiYnV0dG9uXCIsIGNsYXNzTmFtZTogXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtIG1hcmdpbi1yaWdodC0xXCIsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNldEluZm9TdGF0dXMoXCJub3JtYWxcIik7IH0gfSwgeyBjaGlsZHJlbjogXCJDYW5jZWxcIiB9KSksIF9qc3goXCJidXR0b25cIiwgX19hc3NpZ24oeyB0eXBlOiBcInN1Ym1pdFwiLCBjbGFzc05hbWU6IFwiYnRuIGJ0bi1ibHVlIGJ0bi1zbVwiIH0sIHsgY2hpbGRyZW46IFwiU2F2ZVwiIH0pKV0gfSkpXSB9KSkpO1xuICAgIH07XG4gICAgaWYgKGxvYWRpbmcpIHtcbiAgICAgICAgcmV0dXJuIChfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNlbnRlci1jb250ZW50IG1hcmdpbi10b3AtMVwiIH0sIHsgY2hpbGRyZW46IF9qc3goTG9hZGluZywge30pIH0pKSk7XG4gICAgfVxuICAgIHJldHVybiAoX2pzeHMoUmVhY3QuRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4cyhDb25maXJtTW9kYWwsIF9fYXNzaWduKHsgaGVhZGVyOiBcIkRlbGV0ZSB5b3VyIGNvbGxlY3Rpb25cIiwgb3BlbjogY29uZkNMRGVsZXRpb25NZGwsIGJ0bk5hbWU6IFwiRGVsZXRlXCIsIG9uQ29uZmlybTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBkZWxldGVDb2xsZWN0aW9uKCk7XG4gICAgICAgICAgICAgICAgfSwgb25DYW5jZWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0Q29uZkNMRGVsZXRpb25NZGwoZmFsc2UpO1xuICAgICAgICAgICAgICAgIH0gfSwgeyBjaGlsZHJlbjogW19qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiQXJlIHlvdSBzdXJlIHRoYXQgeW91IHdhbnQgdG8gZGVsZXRlIHlvdXIgY29sbGVjdGlvbj8gXCIgfSksIHBhZ2VzLmxlbmd0aCA+IDAgJiYgKF9qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiQWxsIHRoZSBwYWdlcyB5b3UgaGF2ZSBzYXZlZCBvbiB0aGlzIGNvbGxlY3Rpb24gd2lsbCBiZSByZW1vdmVkIGZyb20geW91ciBsaWJyYXJ5IGlmIHlvdSBkb24ndCBoYXZlIHRoZW0gc2F2ZWQgc29tZXdoZXJlIGVsc2UuXCIgfSkpLCBidG4gPT09IFwic3RvcC1zaGFyaW5nXCIgJiYgKF9qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiVGhpcyBjb2xsZWN0aW9uIGlzIGJlaW5nIHNoYXJlZCBmb3Igb3RoZXJzLiBJZiB5b3UgZGVsZXRlIHRoZSBjb2xsZWN0aW9uIGFsbCB0aGUgcGVvcGxlIHRoYXQgaGF2ZSBzYXZlZCB5b3VyIGNvbGxlY3Rpb24gd29uJ3QgYmUgYWJsZSB0byBhY2Nlc3MgaXQgYW55IGxvbmdlci5cIiB9KSksIF9qc3goXCJzdHJvbmdcIiwgeyBjaGlsZHJlbjogXCJZb3UgY2Fubm90IHVuZG8gdGhpcyBhY3Rpb24uXCIgfSldIH0pKSwgX2pzeHMoQ29uZmlybU1vZGFsLCBfX2Fzc2lnbih7IGhlYWRlcjogXCJTdG9wIHNoYXJpbmcgeW91ciBjb2xsZWN0aW9uXCIsIG9wZW46IGNvbmZDTFN0b3BTaGFyaW5nTWRsLCBidG5OYW1lOiBcIlN0b3AgU2hhcmluZ1wiLCBvbkNvbmZpcm06IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQ0xTaGFyaW5nKCk7XG4gICAgICAgICAgICAgICAgfSwgb25DYW5jZWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0Q29uZkNMU3RvcFNoYXJpbmdNZGwoZmFsc2UpO1xuICAgICAgICAgICAgICAgIH0gfSwgeyBjaGlsZHJlbjogW19qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiQXJlIHlvdSBzdXJlIHRoYXQgeW91IHdhbnQgdG8gbWFrZSB5b3VyIGNvbGxlY3Rpb24gcHJpdmF0ZT8gXCIgfSksIF9qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiSWYgeW91IHN0b3AgdGhlIGNvbGxlY3Rpb24gZnJvbSBiZWluZyBzaGFyZWQsIGFsbCB0aGUgcGVvcGxlIHRoYXQgaGF2ZSBzYXZlZCB5b3VyIGNvbGxlY3Rpb24gd29uJ3QgYmUgYWJsZSB0byBhY2Nlc3MgaXQgYW5kIHRoZSBjb2xsZWN0aW9uIHdvbid0IGJlIHNob3duIG9uIHlvdXIgcHVibGljIHByb2ZpbGUgYW55IGxvbmdlciB1bnRpbCB5b3UgbWFrZSBpdCBwdWJsaWMgYWdhaW4uXCIgfSldIH0pKSwgX2pzeHMoQ29uZmlybU1vZGFsLCBfX2Fzc2lnbih7IGhlYWRlcjogXCJSZW1vdmUgcGFnZXNcIiwgb3BlbjogY29uZlJlbW92ZVBhZ2VzTWRsLCBidG5OYW1lOiBcIlJlbW92ZVwiLCBvbkNvbmZpcm06IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlUGFnZXMoKTtcbiAgICAgICAgICAgICAgICB9LCBvbkNhbmNlbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBzZXRDb25mUmVtb3ZlUGFnZXNNZGwoZmFsc2UpO1xuICAgICAgICAgICAgICAgIH0gfSwgeyBjaGlsZHJlbjogW19qc3hzKFwicFwiLCB7IGNoaWxkcmVuOiBbXCJBcmUgeW91IHN1cmUgdGhhdCB5b3Ugd2FudCB0byByZW1vdmUgdGhlIHNlbGVjdGVkIHBhZ2UocykgZnJvbSB5b3VyIGNvbGxlY3Rpb24/XCIsIFwiIFwiXSB9KSwgX2pzeChcInBcIiwgeyBjaGlsZHJlbjogXCJZb3UgY2Fubm90IHVuZG8gdGhpcyBhY3Rpb24uXCIgfSldIH0pKSwgX2pzeHMoXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwicm93XCIgfSwgeyBjaGlsZHJlbjogW19qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY29sLWxnLTEtb2YtMiBjb2wtbWQtMS1vZi0yXCIgfSwgeyBjaGlsZHJlbjogcmVuZGVySW1nKCkgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbC1sZy0xLW9mLTIgY29sLW1kLTEtb2YtMlwiIH0sIHsgY2hpbGRyZW46IF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbGxlY3Rpb24tc2hvd1wiIH0sIHsgY2hpbGRyZW46IFtyZW5kZXJBY3Rpb25CdG5zKCksIGluZm9TdGF0dXMgPT09IFwibm9ybWFsXCIgJiYgKF9qc3hzKFJlYWN0LkZyYWdtZW50LCB7IGNoaWxkcmVuOiBbX2pzeChcImgyXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbGxlY3Rpb24tc2hvd19fbmFtZVwiIH0sIHsgY2hpbGRyZW46IG5hbWUgfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbGxlY3Rpb24tc2hvd19fZGVzY1wiIH0sIHsgY2hpbGRyZW46IGRlc2MgfSkpXSB9KSksIHJlbmRlckVkaXRGb3JtKCksIF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImNvbGxlY3Rpb24tc2hvd19fY3JlYXRvclwiIH0sIHsgY2hpbGRyZW46IFtcIkNyZWF0ZWQgYnkgXCIsIHZpZXdlciA9PT0gXCJvd25lclwiID8gXCJZb3VcIiA6IGF1dGhvcl0gfSkpLCByZW5kZXJCdG4oKV0gfSkpIH0pKV0gfSkpLCBfanN4KFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcInJvd1wiIH0sIHsgY2hpbGRyZW46IHBhZ2VzLmxlbmd0aCA+IDAgPyAoX2pzeHMoUmVhY3QuRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJoZWFkZXItbmF2IG1hcmdpbi10b3AtNFwiIH0sIHsgY2hpbGRyZW46IFtfanN4cyhcImgzXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImhlYWRpbmctdGVydGlhcnlcIiB9LCB7IGNoaWxkcmVuOiBbcGFnZXMubGVuZ3RoLCBcIiBQYWdlXCIsIHBhZ2VzLmxlbmd0aCA+IDEgPyBcInNcIiA6IFwiXCIsIFwiIEluIFRoaXMgQ29sbGVjdGlvbjpcIl0gfSkpLCBwYWdlc1N0YXR1cyA9PT0gXCJlZGl0aW5nXCIgJiYgKF9qc3hzKFwiZGl2XCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImhlYWRlci1uYXZfX2xhYmVsXCIgfSwgeyBjaGlsZHJlbjogW3NlbGVjdGVkUGFnZXMubGVuZ3RoLCBcIiBwYWdlXCIsIHNlbGVjdGVkUGFnZXMubGVuZ3RoID4gMSA/IFwic1wiIDogXCJcIiwgXCIgc2VsZWN0ZWRcIl0gfSkpKSwgdmlld2VyID09PSBcIm93bmVyXCIgJiYgKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiaGVhZGVyLW5hdl9fYWN0aW9uc1wiIH0sIHsgY2hpbGRyZW46IHBhZ2VzU3RhdHVzID09PSBcIm5vcm1hbFwiID8gKF9qc3goXCJidXR0b25cIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiYnRuLXRleHRcIiwgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2V0UGFnZXNTdGF0dXMoXCJlZGl0aW5nXCIpOyB9IH0sIHsgY2hpbGRyZW46IFwiRWRpdFwiIH0pKSkgOiAoX2pzeHMoUmVhY3QuRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4KFwiYnV0dG9uXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImJ0bi10ZXh0IGJ0bi10ZXh0LXJlZFwiLCBkaXNhYmxlZDogc2VsZWN0ZWRQYWdlcy5sZW5ndGggPT09IDAsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNldENvbmZSZW1vdmVQYWdlc01kbCh0cnVlKTsgfSB9LCB7IGNoaWxkcmVuOiBcIlJlbW92ZVwiIH0pKSwgX2pzeChcImJ1dHRvblwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJidG4tdGV4dFwiLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGFnZXNTdGF0dXMoXCJub3JtYWxcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0U2VsZWN0ZWRQYWdlcyhbXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IH0sIHsgY2hpbGRyZW46IFwiRG9uZVwiIH0pKV0gfSkpIH0pKSldIH0pKSwgcGFnZXNTdGF0dXMgPT09IFwiZWRpdGluZ1wiICYmIChfanN4cyhcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJjZW50ZXItY29udGVudCBhLTE1XCIgfSwgeyBjaGlsZHJlbjogW19qc3hzKFwiYnV0dG9uXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImJ0bi10ZXh0XCIsIGRpc2FibGVkOiBzZWxlY3RlZFBhZ2VzLmxlbmd0aCAhPT0gMSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2VzWzBdLl9pZCA9PT0gc2VsZWN0ZWRQYWdlc1swXSwgb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdBcnIgPSBfX3NwcmVhZEFycmF5KFtdLCBwYWdlcywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlkeCA9IG5ld0Fyci5maW5kSW5kZXgoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHAuX2lkID09PSBzZWxlY3RlZFBhZ2VzWzBdOyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGVtcCA9IG5ld0FycltpZHhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0FycltpZHhdID0gbmV3QXJyW2lkeCAtIDFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0FycltpZHggLSAxXSA9IHRlbXA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyoqIEB0b2RvIHNlbmQgYSByZXF1ZXN0IHRvIHNlcnZlciB0byB1cGRhdGUgdGhlIG9yZGVyICovXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGFnZXMobmV3QXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gfSwgeyBjaGlsZHJlbjogW19qc3goXCJpXCIsIHsgY2xhc3NOYW1lOiBcImZhIGZhLWFycm93LWNpcmNsZS1sZWZ0XCIsIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfSksIFwiIFwiLCBcIk1vdmUgTGVmdFwiXSB9KSksIF9qc3hzKFwiYnV0dG9uXCIsIF9fYXNzaWduKHsgY2xhc3NOYW1lOiBcImJ0bi10ZXh0XCIsIGRpc2FibGVkOiBzZWxlY3RlZFBhZ2VzLmxlbmd0aCAhPT0gMSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2VzW3BhZ2VzLmxlbmd0aCAtIDFdLl9pZCA9PT0gc2VsZWN0ZWRQYWdlc1swXSwgb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdBcnIgPSBfX3NwcmVhZEFycmF5KFtdLCBwYWdlcywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlkeCA9IG5ld0Fyci5maW5kSW5kZXgoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHAuX2lkID09PSBzZWxlY3RlZFBhZ2VzWzBdOyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGVtcCA9IG5ld0FycltpZHhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0FycltpZHhdID0gbmV3QXJyW2lkeCArIDFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0FycltpZHggKyAxXSA9IHRlbXA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyoqIEB0b2RvIHNlbmQgYSByZXF1ZXN0IHRvIHNlcnZlciB0byB1cGRhdGUgdGhlIG9yZGVyICovXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGFnZXMobmV3QXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gfSwgeyBjaGlsZHJlbjogW1wiTW92ZSBSaWdodFwiLCBcIiBcIiwgX2pzeChcImlcIiwgeyBjbGFzc05hbWU6IFwiZmEgZmEtYXJyb3ctY2lyY2xlLXJpZ2h0XCIsIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfSldIH0pKV0gfSkpKV0gfSkpIDogKF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwiY29sbGVjdGlvbi1zaG93X19uby1wYWdlLW1zZ1wiIH0sIHsgY2hpbGRyZW46IFwiVGhpcyBjb2xsZWN0aW9uIGRvZXMgbm90IGhhdmUgYW55IHBhZ2UuXCIgfSkpKSB9KSksIF9qc3goXCJkaXZcIiwgX19hc3NpZ24oeyBjbGFzc05hbWU6IFwicm93XCIgfSwgeyBjaGlsZHJlbjogcmVuZGVyUGFnZXMoKSB9KSldIH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBDb2xsZWN0aW9uU2hvdztcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHsgUm91dGUsIFJvdXRlcywgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsIE5hdmlnYXRlLCB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IHsgc3RvcmUgfSBmcm9tIFwiLi9zdG9yZVwiO1xuaW1wb3J0IFNpZGVOYXYgZnJvbSBcIi4vc2lkZS1uYXYvU2lkZU5hdlwiO1xuaW1wb3J0IEhvbWUgZnJvbSBcIi4vaG9tZS9Ib21lXCI7XG5pbXBvcnQgRGFzaGJvYXJkIGZyb20gXCIuL2Rhc2hib2FyZC9EYXNoYm9hcmRcIjtcbmltcG9ydCBBbmFseXRpY3MgZnJvbSBcIi4vYW5hbHl0aWNzL0FuYWx5dGljc1wiO1xuaW1wb3J0IE1vbmV0aXphdGlvbiBmcm9tIFwiLi9tb25ldGl6YXRpb24vTW9uZXRpemF0aW9uXCI7XG5pbXBvcnQgU3Vic2NyaXB0aW9ucyBmcm9tIFwiLi9zdWJzY3JpcHRpb25zL1N1YnNjcmlwdGlvbnNcIjtcbmltcG9ydCBIaXN0b3J5UGFnZXMgZnJvbSBcIi4vaGlzdG9yeS9QYWdlc1wiO1xuaW1wb3J0IEhpc3RvcnlDb21tZW50cyBmcm9tIFwiLi9oaXN0b3J5L0NvbW1lbnRzXCI7XG5pbXBvcnQgUmVhZExhdGVyIGZyb20gXCIuL3JlYWQtbGF0ZXIvUmVhZExhdGVyXCI7XG5pbXBvcnQgTGlrZWRQYWdlcyBmcm9tIFwiLi9saWtlZC1wYWdlcy9MaWtlZFBhZ2VzXCI7XG5pbXBvcnQgVXNlclBhZ2VzUHVibGlzaGVkIGZyb20gXCIuL3VzZXItcGFnZXMvUHVibGlzaGVkXCI7XG5pbXBvcnQgVXNlclBhZ2VzRHJhZnQgZnJvbSBcIi4vdXNlci1wYWdlcy9EcmFmdFwiO1xuaW1wb3J0IENvbGxlY3Rpb25zIGZyb20gXCIuL2NvbGxlY3Rpb25zL0NvbGxlY3Rpb25zXCI7XG5pbXBvcnQgQ29sbGVjdGlvblNob3cgZnJvbSBcIi4vY29sbGVjdGlvbnMvQ29sbGVjdGlvblNob3dcIjtcbmZ1bmN0aW9uIExpYnJhcnkoKSB7XG4gICAgcmV0dXJuIChfanN4KFByb3ZpZGVyLCBfX2Fzc2lnbih7IHN0b3JlOiBzdG9yZSB9LCB7IGNoaWxkcmVuOiBfanN4cyhSb3V0ZXIsIHsgY2hpbGRyZW46IFtfanN4KFNpZGVOYXYsIHt9KSwgX2pzeHMoUm91dGVzLCB7IGNoaWxkcmVuOiBbX2pzeChSb3V0ZSwgeyBwYXRoOiBcIi9mZWVkL3N1YnNjcmlwdGlvbnNcIiwgZWxlbWVudDogX2pzeChTdWJzY3JpcHRpb25zLCB7fSkgfSksIF9qc3goUm91dGUsIHsgcGF0aDogXCIvZmVlZC9oaXN0b3J5L3BhZ2VzXCIsIGVsZW1lbnQ6IF9qc3goSGlzdG9yeVBhZ2VzLCB7fSkgfSksIF9qc3goUm91dGUsIHsgcGF0aDogXCIvZmVlZC9oaXN0b3J5L2NvbW1lbnRzXCIsIGVsZW1lbnQ6IF9qc3goSGlzdG9yeUNvbW1lbnRzLCB7fSkgfSksIF9qc3goUm91dGUsIHsgcGF0aDogXCIvZmVlZC9yZWFkLWxhdGVyXCIsIGVsZW1lbnQ6IF9qc3goUmVhZExhdGVyLCB7fSkgfSksIF9qc3goUm91dGUsIHsgcGF0aDogXCIvZmVlZC9saWtlZC1wYWdlc1wiLCBlbGVtZW50OiBfanN4KExpa2VkUGFnZXMsIHt9KSB9KSwgX2pzeChSb3V0ZSwgeyBwYXRoOiBcIi91L3BhZ2VzL3B1Ymxpc2hlZFwiLCBlbGVtZW50OiBfanN4KFVzZXJQYWdlc1B1Ymxpc2hlZCwge30pIH0pLCBfanN4KFJvdXRlLCB7IHBhdGg6IFwiL3UvcGFnZXMvZHJhZnRcIiwgZWxlbWVudDogX2pzeChVc2VyUGFnZXNEcmFmdCwge30pIH0pLCBfanN4KFJvdXRlLCB7IHBhdGg6IFwiL3UvY29sbGVjdGlvbnNcIiwgZWxlbWVudDogX2pzeChDb2xsZWN0aW9ucywge30pIH0pLCBfanN4KFJvdXRlLCB7IHBhdGg6IFwiL2NvbGxlY3Rpb24vOmlkXCIsIGVsZW1lbnQ6IF9qc3goQ29sbGVjdGlvblNob3csIHt9KSB9KSwgX2pzeChSb3V0ZSwgeyBwYXRoOiBcIi91L3BhZ2VzXCIsIGVsZW1lbnQ6IF9qc3goTmF2aWdhdGUsIHsgdG86IFwiL3UvcGFnZXMvcHVibGlzaGVkXCIsIHJlcGxhY2U6IHRydWUgfSkgfSksIF9qc3goUm91dGUsIHsgcGF0aDogXCIvaG9tZVwiLCBlbGVtZW50OiBfanN4KEhvbWUsIHt9KSB9KSwgX2pzeChSb3V0ZSwgeyBwYXRoOiBcIi91L2Rhc2hib2FyZFwiLCBlbGVtZW50OiBfanN4KERhc2hib2FyZCwge30pIH0pLCBfanN4KFJvdXRlLCB7IHBhdGg6IFwiL3UvYW5hbHl0aWNzXCIsIGVsZW1lbnQ6IF9qc3goQW5hbHl0aWNzLCB7fSkgfSksIF9qc3goUm91dGUsIHsgcGF0aDogXCIvdS9tb25ldGl6YXRpb25cIiwgZWxlbWVudDogX2pzeChNb25ldGl6YXRpb24sIHt9KSB9KV0gfSldIH0pIH0pKSk7XG59XG5leHBvcnQgZGVmYXVsdCBMaWJyYXJ5O1xuIiwidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGc7XG4gICAgcmV0dXJuIGcgPSB7IG5leHQ6IHZlcmIoMCksIFwidGhyb3dcIjogdmVyYigxKSwgXCJyZXR1cm5cIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgKGdbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSksIGc7XG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xuICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7XG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0gb3BbMF0gJiAyID8geVtcInJldHVyblwiXSA6IG9wWzBdID8geVtcInRocm93XCJdIHx8ICgodCA9IHlbXCJyZXR1cm5cIl0pICYmIHQuY2FsbCh5KSwgMCkgOiB5Lm5leHQpICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xuICAgICAgICAgICAgaWYgKHkgPSAwLCB0KSBvcCA9IFtvcFswXSAmIDIsIHQudmFsdWVdO1xuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDogXy5sYWJlbCsrOyByZXR1cm4geyB2YWx1ZTogb3BbMV0sIGRvbmU6IGZhbHNlIH07XG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7IF8ubGFiZWwgPSB0WzFdOyB0ID0gb3A7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgb3AgPSBbNiwgZV07IHkgPSAwOyB9IGZpbmFsbHkgeyBmID0gdCA9IDA7IH1cbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XG4gICAgfVxufTtcbnZhciBfYTtcbmltcG9ydCB7IGFsZXJ0LCByZXF1ZXN0LCBsb2FkaW5nTW9kYWwgfSBmcm9tIFwiQHBhZ3Nlci9jb21tb25cIjtcbmltcG9ydCB7IGNyZWF0ZVNsaWNlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcbnZhciBpbml0aWFsU3RhdGUgPSB7XG4gICAgbG9hZGluZzogdHJ1ZSxcbiAgICBsaXN0OiBbXSxcbiAgICBzZWxlY3RlZDogW10sXG4gICAgc3RhdHVzOiBcIm5vcm1hbFwiLFxuICAgIHNvcnRCeTogXCJkYXRlLWFkZGVkLWFzY1wiLFxuICAgIGZpbHRlckJ5OiBcImFsbFwiLFxufTtcbmV4cG9ydCB2YXIgcGFnZXNTbGljZSA9IGNyZWF0ZVNsaWNlKHtcbiAgICBuYW1lOiBcIlBhZ2VzXCIsXG4gICAgaW5pdGlhbFN0YXRlOiBpbml0aWFsU3RhdGUsXG4gICAgcmVkdWNlcnM6IHtcbiAgICAgICAgc2V0TG9hZGluZzogZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHtcbiAgICAgICAgICAgIHN0YXRlLmxvYWRpbmcgPSBhY3Rpb24ucGF5bG9hZDtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0U3RhdHVzOiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikge1xuICAgICAgICAgICAgc3RhdGUuc3RhdHVzID0gYWN0aW9uLnBheWxvYWQ7XG4gICAgICAgICAgICBzdGF0ZS5zZWxlY3RlZCA9IFtdO1xuICAgICAgICB9LFxuICAgICAgICBzZXRTb3J0Qnk6IGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7XG4gICAgICAgICAgICBzdGF0ZS5zb3J0QnkgPSBhY3Rpb24ucGF5bG9hZDtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0RmlsdGVyQnk6IGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7XG4gICAgICAgICAgICBzdGF0ZS5maWx0ZXJCeSA9IGFjdGlvbi5wYXlsb2FkO1xuICAgICAgICB9LFxuICAgICAgICBzZXRMaXN0OiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikge1xuICAgICAgICAgICAgc3RhdGUubGlzdCA9IGFjdGlvbi5wYXlsb2FkO1xuICAgICAgICB9LFxuICAgICAgICBzZWxlY3RQYWdlOiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikge1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gc3RhdGUuc2VsZWN0ZWQuaW5kZXhPZihhY3Rpb24ucGF5bG9hZCk7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBwYWdlIHRvIHRoZSBzZWxlY3RlZCBsaXN0XG4gICAgICAgICAgICAgICAgc3RhdGUuc2VsZWN0ZWQucHVzaChhY3Rpb24ucGF5bG9hZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBSZW1vdmUgdGhlIHBhZ2UgZnJvbSB0aGUgc2VsZWN0ZWQgbGlzdFxuICAgICAgICAgICAgICAgIHN0YXRlLnNlbGVjdGVkLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSxcbn0pO1xuLy8gRmV0Y2ggcGFnZXMgZnJvbSB0aGUgc2VydmVyXG5leHBvcnQgdmFyIGZldGNoUGFnZXMgPSBmdW5jdGlvbiAoa2luZCwgZmlsdGVyQnksIHNvcnRCeSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoZGlzcGF0Y2gsIGdldFN0YXRlKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdXJsLCByZXNwb25zZTtcbiAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goc2V0TG9hZGluZyh0cnVlKSk7XG4gICAgICAgICAgICAgICAgICAgIHVybCA9IGtpbmQgPT09IFwiUEItcGFnZXNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPyBcIi91c2Vycy9cIi5jb25jYXQod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KFwiL1wiKVsyXSwgXCIvcGFnZXNcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIDogXCIvXCIuY29uY2F0KGtpbmQsIFwiP3NvcnRCeT1cIikuY29uY2F0KHNvcnRCeSwgXCImZmlsdGVyQnk9XCIpLmNvbmNhdChmaWx0ZXJCeSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHJlcXVlc3QuZ2V0KHVybCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dGg6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IChfYS5zZW50KCkpO1xuICAgICAgICAgICAgICAgICAgICAvKiogQHRvZG86IG1ha2UgaXQgc28gdGhhdCB3ZSBhbHdheXMgdXNlIGRhdGEucGFnZXMgKi9cbiAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goc2V0TGlzdChyZXNwb25zZS5yZXN1bHRzIHx8IHJlc3BvbnNlLnBhZ2VzKSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWx0ZXJCeSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKHNldEZpbHRlckJ5KHJlc3BvbnNlLmZpbHRlckJ5KSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzb3J0QnkpXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaChzZXRTb3J0QnkocmVzcG9uc2Uuc29ydEJ5KSk7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKHNldExvYWRpbmcoZmFsc2UpKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTsgfTtcbn07XG4vLyBTZW5kcyBhIHJlcXVlc3QgdG8gc2VydmVyIHRvIHJlbW92ZSBwYWdlcyBmcm9tIGEgbGlzdCwgb3IgZGVsZXRlIGRyYWZ0IHBhZ2VzXG5leHBvcnQgdmFyIHJlbW92ZVBhZ2VzID0gZnVuY3Rpb24gKGtpbmQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG5ld0xpc3Q7XG4gICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgIGxvYWRpbmdNb2RhbChcIkxvYWRpbmcuLi5cIik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHJlcXVlc3QuZGVsZXRlKFwiL1wiLmNvbmNhdChraW5kKSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgaWRzOiBnZXRTdGF0ZSgpLnBhZ2VzLnNlbGVjdGVkIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0aDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3TGlzdCA9IGdldFN0YXRlKCkucGFnZXMubGlzdC5maWx0ZXIoZnVuY3Rpb24gKHBhZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBnZXRTdGF0ZSgpLnBhZ2VzLnNlbGVjdGVkLmluZGV4T2YocGFnZS5pZCkgPT09IC0xO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goc2V0TGlzdChuZXdMaXN0KSk7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKHNldFN0YXR1cyhcIm5vcm1hbFwiKSk7XG4gICAgICAgICAgICAgICAgICAgIGxvYWRpbmdNb2RhbCgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZ2V0U3RhdGUoKS5zaWRlTmF2LnNlY3Rpb24gPT09IFwicGFnZXMvZHJhZnRcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoXCJEcmFmdCBQYWdlKHMpIHN1Y2Nlc3NmdWxseSBkZWxldGVkLlwiLCBcInN1Y2Nlc3NcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydChcIlBhZ2Uocykgc3VjY2Vzc2Z1bGx5IHJlbW92ZWQgZnJvbSB5b3VyIGxpc3QuXCIsIFwic3VjY2Vzc1wiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qL107XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pOyB9O1xufTtcbmV4cG9ydCB2YXIgc2V0TG9hZGluZyA9IChfYSA9IHBhZ2VzU2xpY2UuYWN0aW9ucywgX2Euc2V0TG9hZGluZyksIHNldFN0YXR1cyA9IF9hLnNldFN0YXR1cywgc2V0U29ydEJ5ID0gX2Euc2V0U29ydEJ5LCBzZXRGaWx0ZXJCeSA9IF9hLnNldEZpbHRlckJ5LCBzZWxlY3RQYWdlID0gX2Euc2VsZWN0UGFnZSwgc2V0TGlzdCA9IF9hLnNldExpc3Q7XG5leHBvcnQgdmFyIHNlbGVjdExvYWRpbmcgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuIHN0YXRlLnBhZ2VzLmxvYWRpbmc7IH07XG5leHBvcnQgdmFyIHNlbGVjdFN0YXR1cyA9IGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gc3RhdGUucGFnZXMuc3RhdHVzOyB9O1xuZXhwb3J0IHZhciBzZWxlY3RTb3J0QnkgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuIHN0YXRlLnBhZ2VzLnNvcnRCeTsgfTtcbmV4cG9ydCB2YXIgc2VsZWN0RmlsdGVyQnkgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuIHN0YXRlLnBhZ2VzLmZpbHRlckJ5OyB9O1xuZXhwb3J0IHZhciBzZWxlY3RTZWxlY3RlZFBhZ2VzID0gZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBzdGF0ZS5wYWdlcy5zZWxlY3RlZDsgfTtcbmV4cG9ydCB2YXIgc2VsZWN0UGFnZXMgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuIHN0YXRlLnBhZ2VzLmxpc3Q7IH07XG5leHBvcnQgZGVmYXVsdCBwYWdlc1NsaWNlLnJlZHVjZXI7XG4iLCJpbXBvcnQgeyBjcmVhdGVTbGljZSB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XG52YXIgaW5pdGlhbFN0YXRlID0ge1xuICAgIHNlY3Rpb246IFwiXCIsXG59O1xuZXhwb3J0IHZhciBzaWRlTmF2U2xpY2UgPSBjcmVhdGVTbGljZSh7XG4gICAgbmFtZTogXCJzaWRlTmF2XCIsXG4gICAgaW5pdGlhbFN0YXRlOiBpbml0aWFsU3RhdGUsXG4gICAgcmVkdWNlcnM6IHtcbiAgICAgICAgc2V0U2VjdGlvbjogZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHtcbiAgICAgICAgICAgIHN0YXRlLnNlY3Rpb24gPSBhY3Rpb24ucGF5bG9hZDtcbiAgICAgICAgfSxcbiAgICB9LFxufSk7XG5leHBvcnQgdmFyIHNldFNlY3Rpb24gPSBzaWRlTmF2U2xpY2UuYWN0aW9ucy5zZXRTZWN0aW9uO1xuZXhwb3J0IHZhciBzZWxlY3RTZWN0aW9uID0gZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBzdGF0ZS5zaWRlTmF2LnNlY3Rpb247IH07XG5leHBvcnQgZGVmYXVsdCBzaWRlTmF2U2xpY2UucmVkdWNlcjtcbiIsImltcG9ydCB7IGNvbmZpZ3VyZVN0b3JlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcbmltcG9ydCBzaWRlTmF2UmVkdWNlciBmcm9tIFwiLi9zaWRlLW5hdi9zaWRlTmF2U2xpY2VcIjtcbmltcG9ydCBwYWdlc1JlZHVjZXIgZnJvbSBcIi4vcGFnZXNTbGljZVwiO1xuZXhwb3J0IHZhciBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcbiAgICByZWR1Y2VyOiB7XG4gICAgICAgIHNpZGVOYXY6IHNpZGVOYXZSZWR1Y2VyLFxuICAgICAgICBwYWdlczogcGFnZXNSZWR1Y2VyLFxuICAgIH0sXG59KTtcbiJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIk9iamVjdCIsImFzc2lnbiIsInQiLCJzIiwiaSIsIm4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJ0aGlzIiwicHJvcHMiLCJudW1UZXh0IiwicGFnZU51bSIsImNvbmNhdCIsImNvbnRlbnQiLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsInNyYyIsImltZyIsIm9uRXJyb3IiLCJlIiwidGFyZ2V0IiwibmFtZSIsImRlc2MiLCJhdXRob3IiLCJvbkNsaWNrIiwicmVmcmVzaCIsImhyZWYiLCJpZCIsInRvIiwibm9QaG90byIsImJyaWVmRGVzXzEiLCJicmllZkRlcyIsInRpdGxlXzEiLCJ0aXRsZSIsInVybF8xIiwiY2xhc3NOYW1lXzEiLCJ0YXJnZXRfMSIsInN1YnN0cmluZyIsInR5cGUiLCJzdGF0dXMiLCJzZWxlY3RlZCIsImxhYmVsIiwidXJsIiwiYXV0aG9yVXNlcm5hbWUiLCJpbWFnZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInN0eWxlIiwibWFyZ2luTGVmdCIsImRpc3BhdGNoIiwic2VjdGlvbiIsInVzZUVmZmVjdCIsInNlY3Rpb25zIiwid2luZG93IiwibG9jYXRpb24iLCJwYXRobmFtZSIsInNwbGl0IiwiaW5kZXhfMSIsImluZGV4T2YiLCJpbmRleF8yIiwiaW5kZXgiLCJnZXRTZWN0aW9uRnJvbVVybCIsInVzZXJuYW1lIiwiaGVhZGxpbmUiLCJfYSIsInVzZVN0YXRlIiwic3Vic2NyaXB0aW9ucyIsInNldFN1YnNjcmlwdGlvbnMiLCJfYiIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQIiwiZ2VuZXJhdG9yIiwicmVzcG9uc2UiLCJib2R5IiwiZiIsInkiLCJnIiwiXyIsInNlbnQiLCJ0cnlzIiwib3BzIiwibmV4dCIsInZlcmIiLCJTeW1ib2wiLCJpdGVyYXRvciIsInYiLCJvcCIsIlR5cGVFcnJvciIsImRvbmUiLCJ2YWx1ZSIsInBvcCIsInB1c2giLCJzdGVwIiwiX19nZW5lcmF0b3IiLCJyZXF1ZXN0IiwiYXV0aCIsInN1YnMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInJlamVjdGVkIiwicmVzdWx0IiwidGhlbiIsIkxvYWRpbmciLCJtYXAiLCJpdGVtIiwicGhvdG8iLCJzZWN1cmVfdXJsIiwiX2lkIiwiY29uZmlybWF0aW9uTW9kYWxPcGVuIiwic2V0Q29uZmlybWF0aW9uTW9kYWxPcGVuIiwiZmlsdGVyQnkiLCJzb3J0QnkiLCJzZWxlY3RlZFBhZ2VzIiwicGFnZXMiLCJyZW1vdmVCdG4iLCJkaXNhYmxlZCIsImRvbmVCdG4iLCJlZGl0QnRuIiwiQ29uZmlybU1vZGFsIiwiaGVhZGVyIiwib3BlbiIsIm9uQ29uZmlybSIsIm9uQ2FuY2VsIiwiRHJvcGRvd24iLCJudW0iLCJzZWxlY3QiLCJvbkNoYW5nZSIsIlBhZ2VUaHVtYm5haWwiLCJjb250ZW50cyIsImRhdGVWaXNpdGVkIiwiY29tbWVudHMiLCJzZXRDb21tZW50cyIsImMiLCJsYWJlbFRleHQiLCJyZXBseSIsInV0aWwiLCJwYWdlIiwibmFtZV8xIiwidGV4dCIsImRhdGUiLCJidG5OYW1lIiwidXBkYXRlZEF0IiwibG9hZGluZ0NyZWF0ZWQiLCJzZXRMb2FkaW5nQ3JlYXRlZCIsImxvYWRpbmdTYXZlZCIsInNldExvYWRpbmdTYXZlZCIsIl9jIiwibmV3Q29sbGVjdGlvbk1kbCIsInNldE5ld0NvbGxlY3Rpb25NZGwiLCJfZCIsInNldE5hbWUiLCJfZSIsImRlc2NyaXB0aW9uIiwic2V0RGVzY3JpcHRpb24iLCJfZiIsInNhdmVkQ29sbGVjdGlvbnMiLCJzZXRTYXZlZENvbGxlY3Rpb25zIiwiX2ciLCJjcmVhdGVkQ29sbGVjdGlvbnMiLCJzZXRDcmVhdGVkQ29sbGVjdGlvbnMiLCJfaCIsInNvcnRCeUNDIiwiX2oiLCJmZXRjaENvbGxlY3Rpb25zIiwia2luZCIsInJlbmRlckNvbGxlY3Rpb25zIiwibGlzdCIsImNsIiwidXNlciIsIk1vZGFsIiwib25DbG9zZSIsIm9uU3VibWl0IiwicHJldmVudERlZmF1bHQiLCJsb2FkaW5nTW9kYWwiLCJhbGVydCIsIklucHV0IiwicGxhY2Vob2xkZXIiLCJyZXF1aXJlZCIsIlRleHRhcmVhIiwicm93cyIsIkJ1dHRvbiIsImNvbG9yIiwiX19zcHJlYWRBcnJheSIsImZyb20iLCJwYWNrIiwiYXIiLCJsIiwiQXJyYXkiLCJzbGljZSIsImluZm9TdGF0dXMiLCJzZXRJbmZvU3RhdHVzIiwicGFnZXNTdGF0dXMiLCJzZXRQYWdlc1N0YXR1cyIsInZpZXdlciIsInNldFZpZXdlciIsImJ0biIsInNldEJ0biIsInNldElkIiwiaW5wdXROYW1lIiwic2V0SW5wdXROYW1lIiwiaW5wdXREZXNjIiwic2V0SW5wdXREZXNjIiwiX2siLCJzZXREZXNjIiwiX2wiLCJzZXRQYWdlcyIsIl9tIiwic2V0U2VsZWN0ZWRQYWdlcyIsIl9vIiwic2V0QXV0aG9yIiwiX3AiLCJzZXRQaG90byIsIl9xIiwidXBsb2FkUGhvdG9NZGwiLCJzZXRVcGxvYWRQaG90b01kbCIsIl9yIiwiY29uZkNMRGVsZXRpb25NZGwiLCJzZXRDb25mQ0xEZWxldGlvbk1kbCIsIl9zIiwiY29uZkNMU3RvcFNoYXJpbmdNZGwiLCJzZXRDb25mQ0xTdG9wU2hhcmluZ01kbCIsIl90IiwiY29uZlJlbW92ZVBhZ2VzTWRsIiwic2V0Q29uZlJlbW92ZVBhZ2VzTWRsIiwibmF2aWdhdGUiLCJwYXJhbXMiLCJmZXRjaENvbGxlY3Rpb25EYXRhIiwiY29sbGVjdGlvbiIsInRvZ2dsZUluTGlicmFyeSIsInRvZ2dsZUNMU2hhcmluZyIsInNoYXJpbmciLCJuZXdBcnIiLCJwYWdlSWRzIiwiZmlsdGVyIiwiVXBsb2FkUGhvdG8iLCJpbnB1dExhYmVsTmFtZSIsIm1pbldpZHRoIiwibWluSGVpZ2h0Iiwic2l6ZSIsImFzcGVjdFJhdGlvIiwic3VjY2VzcyIsInJlbmRlckFjdGlvbkJ0bnMiLCJsaW5lZCIsImF1dG9Gb2N1cyIsInJlbmRlckVkaXRGb3JtIiwiaWR4IiwiZmluZEluZGV4IiwidGVtcCIsImNyb3BlZFBob3RvIiwic3RvcmUiLCJwYXRoIiwiZWxlbWVudCIsInJlcGxhY2UiLCJIb21lIiwiRGFzaGJvYXJkIiwiQW5hbHl0aWNzIiwiTW9uZXRpemF0aW9uIiwiX19hd2FpdGVyIiwicGFnZXNTbGljZSIsImluaXRpYWxTdGF0ZSIsInJlZHVjZXJzIiwic3RhdGUiLCJhY3Rpb24iLCJwYXlsb2FkIiwic2V0U3RhdHVzIiwic2V0U29ydEJ5Iiwic2V0RmlsdGVyQnkiLCJzZXRMaXN0Iiwic2VsZWN0UGFnZSIsInNwbGljZSIsImZldGNoUGFnZXMiLCJnZXRTdGF0ZSIsInJlc3VsdHMiLCJyZW1vdmVQYWdlcyIsIm5ld0xpc3QiLCJkYXRhIiwiaWRzIiwic2lkZU5hdiIsImFjdGlvbnMiLCJzZWxlY3RMb2FkaW5nIiwic2VsZWN0U3RhdHVzIiwic2VsZWN0U29ydEJ5Iiwic2VsZWN0RmlsdGVyQnkiLCJzZWxlY3RTZWxlY3RlZFBhZ2VzIiwic2VsZWN0UGFnZXMiLCJzaWRlTmF2U2xpY2UiLCJzZXRTZWN0aW9uIiwic2VsZWN0U2VjdGlvbiIsInJlZHVjZXIiXSwic291cmNlUm9vdCI6IiJ9