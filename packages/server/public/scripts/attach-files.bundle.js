"use strict";(self.webpackChunk_pagser_web=self.webpackChunk_pagser_web||[]).push([[84],{6367:(e,n,t)=>{t.r(n),t.d(n,{default:()=>f});var a=t(2322),o=t(2784),r=t(5185),c=t(8229),l=t(7289),i=t(98),s=t(4604),u=function(){return u=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},u.apply(this,arguments)};const f=function(){var e=(0,o.useState)(!1),n=e[0],t=e[1],f=(0,o.useState)(!1),h=f[0],d=f[1],p=(0,o.useState)(""),m=p[0],v=p[1],b=(0,o.useState)(""),x=b[0],w=b[1],y=(0,r.v9)(i.pW),g=(0,r.v9)(s.mW),j=(0,r.v9)(i.NH),k=(0,r.v9)(i.P8),N=(0,r.I0)();return j?(0,a.jsx)("div",{}):(0,a.jsxs)("div",u({className:"page__attach-files"},{children:[(0,a.jsx)(l.ConfirmModal,u({header:"Remove the attach file",open:h,onConfirm:function(){return e=void 0,n=void 0,a=function(){return function(e,n){var t,a,o,r,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function l(r){return function(l){return function(r){if(t)throw new TypeError("Generator is already executing.");for(;c;)try{if(t=1,a&&(o=2&r[0]?a.return:r[0]?a.throw||((o=a.return)&&o.call(a),0):a.next)&&!(o=o.call(a,r[1])).done)return o;switch(a=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return c.label++,{value:r[1],done:!1};case 5:c.label++,a=r[1],r=[0];continue;case 7:r=c.ops.pop(),c.trys.pop();continue;default:if(!((o=(o=c.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){c=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){c.label=r[1];break}if(6===r[0]&&c.label<o[1]){c.label=o[1],o=r;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(r);break}o[2]&&c.ops.pop(),c.trys.pop();continue}r=n.call(e,c)}catch(e){r=[6,e],a=0}finally{t=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,l])}}}(this,(function(e){switch(e.label){case 0:return d(!1),(0,c.loadingModal)("Deleting the attach file..."),[4,c.request.delete("/pages/".concat(y,"/attach-files/").concat(m),{auth:!0})];case 1:return e.sent(),N((0,i.Xo)("File deleted successfully.")),[2]}}))},new((t=void 0)||(t=Promise))((function(o,r){function c(e){try{i(a.next(e))}catch(e){r(e)}}function l(e){try{i(a.throw(e))}catch(e){r(e)}}function i(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(c,l)}i((a=a.apply(e,n||[])).next())}));var e,n,t,a},onCancel:function(){return d(!1)}},{children:(0,a.jsxs)("p",{children:["Are you sure that you want to delete this attach file"," ",(0,a.jsxs)("strong",{children:["'",x,"'"]}),"? Action cannot be undone."]})})),(0,a.jsx)("div",u({className:"file-links"},{children:"owner"===g?k.map((function(e){return(0,a.jsxs)("a",u({className:"file-link",href:"/api/pages/".concat(y,"/attach-files/").concat(e.name)},{children:[(0,a.jsx)("i",{className:"fa fa-download"})," "+e.name,(0,a.jsx)("button",u({className:"btn-i",onClick:function(n){n.preventDefault(),v(e._id),w(e.name),d(!0)}},{children:(0,a.jsx)("i",{className:"fa fa-times","aria-hidden":"true"})}))]}),e.name)})):k.map((function(e){return(0,a.jsxs)("a",u({className:"file-link",href:"/api/pages/".concat(y,"/attach-files/").concat(e.name)},{children:[(0,a.jsx)("i",{className:"fa fa-download"})," "+e.name]}),e.name)}))})),"owner"===g&&k.length<5?(0,a.jsxs)(o.Fragment,{children:[(0,a.jsxs)(l.Button,u({color:"blue",size:"small",rounded:!0,onClick:function(){t(!0)}},{children:[(0,a.jsx)("i",{className:"fa fa-upload button__icon-left"})," Add an Attach File"]})),(0,a.jsx)(l.UploadAttachFile,{open:n,header:"Add an Attach File",text:"You can upload maximum of 5 files 10MB each for every page.",size:1e7,url:"/pages/".concat(y,"/attach-files"),success:function(){N((0,i.Xo)("File uploaded successfully."))},onClose:function(){t(!1)}})]}):(0,a.jsx)("div",{}),5===k.length&&"owner"===g&&(0,a.jsx)("em",{children:"You can only have 5 attach files for each page, if you want to upload a new one remove one of the attach files first."})]}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,